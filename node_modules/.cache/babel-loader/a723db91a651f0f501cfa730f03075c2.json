{"ast":null,"code":"import * as THREE from 'three';\nimport { easeOutQuad, easeInOutQuad, easeOutSine, easeInOutSine } from '../../utils/easing.utils';\nexport default class TouchTexture {\n  constructor(parent) {\n    this.parent = parent;\n    this.size = 64;\n    this.maxAge = 120;\n    this.radius = 0.15;\n    this.trail = [];\n    this.initTexture();\n  }\n\n  initTexture() {\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = this.canvas.height = this.size;\n    this.ctx = this.canvas.getContext('2d');\n    this.ctx.fillStyle = 'black';\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    this.texture = new THREE.Texture(this.canvas);\n    this.canvas.id = 'touchTexture';\n    this.canvas.style.width = this.canvas.style.height = `${this.canvas.width}px`;\n  }\n\n  update(delta) {\n    this.clear(); // age points\n\n    this.trail.forEach((point, i) => {\n      point.age++; // remove old\n\n      if (point.age > this.maxAge) {\n        this.trail.splice(i, 1);\n      }\n    });\n    this.trail.forEach((point, i) => {\n      this.drawTouch(point);\n    });\n    this.texture.needsUpdate = true;\n  }\n\n  clear() {\n    this.ctx.fillStyle = 'black';\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  addTouch(point) {\n    let force = 0;\n    const last = this.trail[this.trail.length - 1];\n\n    if (last) {\n      const dx = last.x - point.x;\n      const dy = last.y - point.y;\n      const dd = dx * dx + dy * dy;\n      force = Math.min(dd * 10000, 1);\n    }\n\n    this.trail.push({\n      x: point.x,\n      y: point.y,\n      age: 0,\n      force\n    });\n  }\n\n  drawTouch(point) {\n    const pos = {\n      x: point.x * this.size,\n      y: (1 - point.y) * this.size\n    };\n    let intensity = 1;\n\n    if (point.age < this.maxAge * 0.3) {\n      intensity = easeOutSine(point.age / (this.maxAge * 0.3), 0, 1, 1);\n    } else {\n      intensity = easeOutSine(1 - (point.age - this.maxAge * 0.3) / (this.maxAge * 0.7), 0, 1, 1);\n    }\n\n    intensity *= point.force;\n    const radius = this.size * this.radius * intensity;\n    const grd = this.ctx.createRadialGradient(pos.x, pos.y, radius * 0.25, pos.x, pos.y, radius);\n    grd.addColorStop(0, `rgba(255, 255, 255, 0.2)`);\n    grd.addColorStop(1, 'rgba(0, 0, 0, 0.0)');\n    this.ctx.beginPath();\n    this.ctx.fillStyle = grd;\n    this.ctx.arc(pos.x, pos.y, radius, 0, Math.PI * 2);\n    this.ctx.fill();\n  }\n\n}","map":{"version":3,"sources":["/Users/roaa/Desktop/demo/src/scripts/webgl/particles/TouchTexture.js"],"names":["THREE","easeOutQuad","easeInOutQuad","easeOutSine","easeInOutSine","TouchTexture","constructor","parent","size","maxAge","radius","trail","initTexture","canvas","document","createElement","width","height","ctx","getContext","fillStyle","fillRect","texture","Texture","id","style","update","delta","clear","forEach","point","i","age","splice","drawTouch","needsUpdate","addTouch","force","last","length","dx","x","dy","y","dd","Math","min","push","pos","intensity","grd","createRadialGradient","addColorStop","beginPath","arc","PI","fill"],"mappings":"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","sourcesContent":["import * as THREE from 'three';\n\nimport { easeOutQuad, easeInOutQuad, easeOutSine, easeInOutSine } from '../../utils/easing.utils';\n\nexport default class TouchTexture {\n\tconstructor(parent) {\n\t\tthis.parent = parent;\n\t\tthis.size = 64;\n\t\tthis.maxAge = 120;\n\t\tthis.radius = 0.15;\n\t\tthis.trail = [];\n\n\t\tthis.initTexture();\n\t}\n\n\tinitTexture() {\n\t\tthis.canvas = document.createElement('canvas');\n\t\tthis.canvas.width = this.canvas.height = this.size;\n\t\tthis.ctx = this.canvas.getContext('2d');\n\t\tthis.ctx.fillStyle = 'black';\n\t\tthis.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n\t\tthis.texture = new THREE.Texture(this.canvas);\n\n\t\tthis.canvas.id = 'touchTexture';\n\t\tthis.canvas.style.width = this.canvas.style.height = `${this.canvas.width}px`;\n\t}\n\n\tupdate(delta) {\n\t\tthis.clear();\n\n\t\t// age points\n\t\tthis.trail.forEach((point, i) => {\n\t\t\tpoint.age++;\n\t\t\t// remove old\n\t\t\tif (point.age > this.maxAge) {\n\t\t\t\tthis.trail.splice(i, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis.trail.forEach((point, i) => {\n\t\t\tthis.drawTouch(point);\n\t\t});\n\n\t\tthis.texture.needsUpdate = true;\n\t}\n\n\tclear() {\n\t\tthis.ctx.fillStyle = 'black';\n\t\tthis.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\t}\n\n\taddTouch(point) {\n\t\tlet force = 0;\n\t\tconst last = this.trail[this.trail.length - 1];\n\t\tif (last) {\n\t\t\tconst dx = last.x - point.x;\n\t\t\tconst dy = last.y - point.y;\n\t\t\tconst dd = dx * dx + dy * dy;\n\t\t\tforce = Math.min(dd * 10000, 1);\n\t\t}\n\t\tthis.trail.push({ x: point.x, y: point.y, age: 0, force });\n\t}\n\n\tdrawTouch(point) {\n\t\tconst pos = {\n\t\t\tx: point.x * this.size,\n\t\t\ty: (1 - point.y) * this.size\n\t\t};\n\n\t\tlet intensity = 1;\n\t\tif (point.age < this.maxAge * 0.3) {\n\t\t\tintensity = easeOutSine(point.age / (this.maxAge * 0.3), 0, 1, 1);\n\t\t} else {\n\t\t\tintensity = easeOutSine(1 - (point.age - this.maxAge * 0.3) / (this.maxAge * 0.7), 0, 1, 1);\n\t\t}\n\n\t\tintensity *= point.force;\n\n\t\tconst radius = this.size * this.radius * intensity;\n\t\tconst grd = this.ctx.createRadialGradient(pos.x, pos.y, radius * 0.25, pos.x, pos.y, radius);\n\t\tgrd.addColorStop(0, `rgba(255, 255, 255, 0.2)`);\n\t\tgrd.addColorStop(1, 'rgba(0, 0, 0, 0.0)');\n\n\t\tthis.ctx.beginPath();\n\t\tthis.ctx.fillStyle = grd;\n\t\tthis.ctx.arc(pos.x, pos.y, radius, 0, Math.PI * 2);\n\t\tthis.ctx.fill();\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}