{"ast":null,"code":"import ControlKit from '@brunoimbrizi/controlkit';\nimport Stats from 'stats.js';\nexport default class GUIView {\n  constructor(app) {\n    this.app = app;\n    this.particlesHitArea = false;\n    this.particlesRandom = 2;\n    this.particlesDepth = 4;\n    this.particlesSize = 1.5;\n    this.touchRadius = 0.15;\n    this.range = [0, 1];\n    this.rangeRandom = [1, 10];\n    this.rangeSize = [0, 3];\n    this.rangeDepth = [1, 10];\n    this.rangeRadius = [0, 0.5];\n    this.initControlKit(); // this.initStats();\n    // this.disable();\n  }\n\n  initControlKit() {\n    this.controlKit = new ControlKit();\n    this.controlKit.addPanel({\n      width: 300,\n      enable: false\n    }).addGroup({\n      label: 'Touch',\n      enable: true\n    }).addCanvas({\n      label: 'trail',\n      height: 64\n    }).addSlider(this, 'touchRadius', 'rangeRadius', {\n      label: 'radius',\n      onChange: this.onTouchChange.bind(this)\n    }).addGroup({\n      label: 'Particles',\n      enable: true\n    }) // .addCheckbox(this, 'particlesHitArea', { label: 'hit area', onChange: this.onParticlesChange.bind(this) })\n    .addSlider(this, 'particlesRandom', 'rangeRandom', {\n      label: 'random',\n      onChange: this.onParticlesChange.bind(this)\n    }).addSlider(this, 'particlesDepth', 'rangeDepth', {\n      label: 'depth',\n      onChange: this.onParticlesChange.bind(this)\n    }).addSlider(this, 'particlesSize', 'rangeSize', {\n      label: 'size',\n      onChange: this.onParticlesChange.bind(this)\n    }); // store reference to canvas\n\n    const component = this.controlKit.getComponentBy({\n      label: 'trail'\n    });\n    if (!component) return;\n    this.touchCanvas = component._canvas;\n    this.touchCtx = this.touchCanvas.getContext('2d');\n  }\n\n  initStats() {\n    this.stats = new Stats();\n    document.body.appendChild(this.stats.dom);\n  } // ---------------------------------------------------------------------------------------------\n  // PUBLIC\n  // ---------------------------------------------------------------------------------------------\n\n\n  update() {\n    // draw touch texture\n    if (this.touchCanvas) {\n      if (!this.app.webgl) return;\n      if (!this.app.webgl.particles) return;\n      if (!this.app.webgl.particles.touch) return;\n      const source = this.app.webgl.particles.touch.canvas;\n      const x = Math.floor((this.touchCanvas.width - source.width) * 0.5);\n      this.touchCtx.fillRect(0, 0, this.touchCanvas.width, this.touchCanvas.height);\n      this.touchCtx.drawImage(source, x, 0);\n    }\n  }\n\n  enable() {\n    this.controlKit.enable();\n    if (this.stats) this.stats.dom.style.display = '';\n  }\n\n  disable() {\n    this.controlKit.disable();\n    if (this.stats) this.stats.dom.style.display = 'none';\n  }\n\n  toggle() {\n    if (this.controlKit._enabled) this.disable();else this.enable();\n  }\n\n  onTouchChange() {\n    if (!this.app.webgl) return;\n    if (!this.app.webgl.particles) return;\n    this.app.webgl.particles.touch.radius = this.touchRadius;\n  }\n\n  onParticlesChange() {\n    if (!this.app.webgl) return;\n    if (!this.app.webgl.particles) return;\n    this.app.webgl.particles.object3D.material.uniforms.uRandom.value = this.particlesRandom;\n    this.app.webgl.particles.object3D.material.uniforms.uDepth.value = this.particlesDepth;\n    this.app.webgl.particles.object3D.material.uniforms.uSize.value = this.particlesSize;\n    this.app.webgl.particles.hitArea.material.visible = this.particlesHitArea;\n  }\n\n  onPostProcessingChange() {\n    if (!this.app.webgl.composer) return;\n    this.app.webgl.composer.enabled = this.postProcessing;\n  }\n\n}","map":{"version":3,"sources":["/Users/roaa/Desktop/demo/src/scripts/gui/GUIView.js"],"names":["ControlKit","Stats","GUIView","constructor","app","particlesHitArea","particlesRandom","particlesDepth","particlesSize","touchRadius","range","rangeRandom","rangeSize","rangeDepth","rangeRadius","initControlKit","controlKit","addPanel","width","enable","addGroup","label","addCanvas","height","addSlider","onChange","onTouchChange","bind","onParticlesChange","component","getComponentBy","touchCanvas","_canvas","touchCtx","getContext","initStats","stats","document","body","appendChild","dom","update","webgl","particles","touch","source","canvas","x","Math","floor","fillRect","drawImage","style","display","disable","toggle","_enabled","radius","object3D","material","uniforms","uRandom","value","uDepth","uSize","hitArea","visible","onPostProcessingChange","composer","enabled","postProcessing"],"mappings":"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","sourcesContent":["import ControlKit from '@brunoimbrizi/controlkit';\nimport Stats from 'stats.js';\n\nexport default class GUIView {\n\n\tconstructor(app) {\n\t\tthis.app = app;\n\n\t\tthis.particlesHitArea = false;\n\t\tthis.particlesRandom = 2;\n\t\tthis.particlesDepth = 4;\n\t\tthis.particlesSize = 1.5;\n\t\t\n\t\tthis.touchRadius = 0.15;\n\n\t\tthis.range = [0, 1];\n\t\tthis.rangeRandom = [1, 10];\n\t\tthis.rangeSize = [0, 3];\n\t\tthis.rangeDepth = [1, 10];\n\t\tthis.rangeRadius = [0, 0.5];\n\n\t\tthis.initControlKit();\n\t\t// this.initStats();\n\n\t\t// this.disable();\n\t}\n\n\tinitControlKit() {\n\t\tthis.controlKit = new ControlKit();\n\t\tthis.controlKit.addPanel({ width: 300, enable: false })\n\n\t\t.addGroup({label: 'Touch', enable: true })\n\t\t.addCanvas({ label: 'trail', height: 64 })\n\t\t.addSlider(this, 'touchRadius', 'rangeRadius', { label: 'radius', onChange: this.onTouchChange.bind(this) })\n\t\t\n\t\t.addGroup({label: 'Particles', enable: true })\n\t\t// .addCheckbox(this, 'particlesHitArea', { label: 'hit area', onChange: this.onParticlesChange.bind(this) })\n\t\t.addSlider(this, 'particlesRandom', 'rangeRandom', { label: 'random', onChange: this.onParticlesChange.bind(this) })\n\t\t.addSlider(this, 'particlesDepth', 'rangeDepth', { label: 'depth', onChange: this.onParticlesChange.bind(this) })\n\t\t.addSlider(this, 'particlesSize', 'rangeSize', { label: 'size', onChange: this.onParticlesChange.bind(this) })\n\n\t\t// store reference to canvas\n\t\tconst component = this.controlKit.getComponentBy({ label: 'trail' });\n\t\tif (!component) return;\n\n\t\tthis.touchCanvas = component._canvas;\n\t\tthis.touchCtx = this.touchCanvas.getContext('2d');\n\t}\n\n\tinitStats() {\n\t\tthis.stats = new Stats();\n\n\t\tdocument.body.appendChild(this.stats.dom);\n\t}\n\n\t// ---------------------------------------------------------------------------------------------\n\t// PUBLIC\n\t// ---------------------------------------------------------------------------------------------\n\n\tupdate() {\n\t\t// draw touch texture\n\t\tif (this.touchCanvas) {\n\t\t\tif (!this.app.webgl) return;\n\t\t\tif (!this.app.webgl.particles) return;\n\t\t\tif (!this.app.webgl.particles.touch) return;\n\t\t\tconst source = this.app.webgl.particles.touch.canvas;\n\t\t\tconst x = Math.floor((this.touchCanvas.width - source.width) * 0.5);\n\t\t\tthis.touchCtx.fillRect(0, 0, this.touchCanvas.width, this.touchCanvas.height);\n\t\t\tthis.touchCtx.drawImage(source, x, 0);\n\t\t}\n\t}\n\n\tenable() {\n\t\tthis.controlKit.enable();\n\t\tif (this.stats) this.stats.dom.style.display = '';\n\t}\n\n\tdisable() {\n\t\tthis.controlKit.disable();\n\t\tif (this.stats) this.stats.dom.style.display = 'none';\n\t}\n\n\ttoggle() {\n\t\tif (this.controlKit._enabled) this.disable();\n\t\telse this.enable();\n\t}\n\n\tonTouchChange() {\n\t\tif (!this.app.webgl) return;\n\t\tif (!this.app.webgl.particles) return;\n\n\t\tthis.app.webgl.particles.touch.radius = this.touchRadius;\n\t}\n\t\n\tonParticlesChange() {\n\t\tif (!this.app.webgl) return;\n\t\tif (!this.app.webgl.particles) return;\n\n\t\tthis.app.webgl.particles.object3D.material.uniforms.uRandom.value = this.particlesRandom;\n\t\tthis.app.webgl.particles.object3D.material.uniforms.uDepth.value = this.particlesDepth;\n\t\tthis.app.webgl.particles.object3D.material.uniforms.uSize.value = this.particlesSize;\n\n\t\tthis.app.webgl.particles.hitArea.material.visible = this.particlesHitArea;\n\t}\n\n\tonPostProcessingChange() {\n\t\tif (!this.app.webgl.composer) return;\n\t\tthis.app.webgl.composer.enabled = this.postProcessing;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}