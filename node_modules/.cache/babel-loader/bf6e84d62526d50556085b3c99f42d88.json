{"ast":null,"code":"import WebGLView from '../../scripts/webgl/WebGLView';\nimport GUIView from '../../scripts/gui/GUIView';\nexport default class FirstDemo {\n  constructor() {\n    this.init();\n  }\n\n  init() {\n    this.initWebGL();\n    this.initGUI();\n    this.addListeners();\n    this.animate();\n    this.resize();\n  }\n\n  initWebGL() {\n    this.webgl = new WebGLView(this);\n    document.querySelector('.container').appendChild(this.webgl.renderer.domElement);\n  }\n\n  initGUI() {\n    this.gui = new GUIView(this);\n  }\n\n  addListeners() {\n    this.handlerAnimate = this.animate.bind(this);\n    window.addEventListener('resize', this.resize.bind(this));\n    window.addEventListener('keyup', this.keyup.bind(this));\n    const el = this.webgl.renderer.domElement;\n    el.addEventListener('click', this.click.bind(this));\n  }\n\n  animate() {\n    this.update();\n    this.draw();\n    this.raf = requestAnimationFrame(this.handlerAnimate);\n  } // ---------------------------------------------------------------------------------------------\n  // PUBLIC\n  // ---------------------------------------------------------------------------------------------\n\n\n  update() {\n    if (this.gui.stats) this.gui.stats.begin();\n    if (this.webgl) this.webgl.update();\n    if (this.gui) this.gui.update();\n  }\n\n  draw() {\n    if (this.webgl) this.webgl.draw();\n    if (this.gui.stats) this.gui.stats.end();\n  } // ---------------------------------------------------------------------------------------------\n  // EVENT HANDLERS\n  // ---------------------------------------------------------------------------------------------\n\n\n  resize() {\n    if (this.webgl) this.webgl.resize();\n  }\n\n  keyup(e) {\n    // g\n    if (e.keyCode == 71) {\n      if (this.gui) this.gui.toggle();\n    }\n  }\n\n  click(e) {\n    this.webgl.next();\n  }\n\n}","map":{"version":3,"sources":["/Users/roaa/Desktop/demo/src/components/first-demo/first-demo.js"],"names":["WebGLView","GUIView","FirstDemo","constructor","init","initWebGL","initGUI","addListeners","animate","resize","webgl","document","querySelector","appendChild","renderer","domElement","gui","handlerAnimate","bind","window","addEventListener","keyup","el","click","update","draw","raf","requestAnimationFrame","stats","begin","end","e","keyCode","toggle","next"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,+BAAtB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,eAAe,MAAMC,SAAN,CAAgB;AAE3BC,EAAAA,WAAW,GAAG;AACV,SAAKC,IAAL;AACH;;AAEDA,EAAAA,IAAI,GAAG;AACH,SAAKC,SAAL;AACA,SAAKC,OAAL;AACA,SAAKC,YAAL;AACA,SAAKC,OAAL;AACA,SAAKC,MAAL;AACH;;AAEDJ,EAAAA,SAAS,GAAG;AACR,SAAKK,KAAL,GAAa,IAAIV,SAAJ,CAAc,IAAd,CAAb;AACAW,IAAAA,QAAQ,CAACC,aAAT,CAAuB,YAAvB,EAAqCC,WAArC,CAAiD,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,UAArE;AACH;;AAEDT,EAAAA,OAAO,GAAG;AACN,SAAKU,GAAL,GAAW,IAAIf,OAAJ,CAAY,IAAZ,CAAX;AACH;;AAEDM,EAAAA,YAAY,GAAG;AACX,SAAKU,cAAL,GAAsB,KAAKT,OAAL,CAAaU,IAAb,CAAkB,IAAlB,CAAtB;AAEAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKX,MAAL,CAAYS,IAAZ,CAAiB,IAAjB,CAAlC;AACAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiC,KAAKC,KAAL,CAAWH,IAAX,CAAgB,IAAhB,CAAjC;AAEA,UAAMI,EAAE,GAAG,KAAKZ,KAAL,CAAWI,QAAX,CAAoBC,UAA/B;AACAO,IAAAA,EAAE,CAACF,gBAAH,CAAoB,OAApB,EAA6B,KAAKG,KAAL,CAAWL,IAAX,CAAgB,IAAhB,CAA7B;AACH;;AAEDV,EAAAA,OAAO,GAAG;AACN,SAAKgB,MAAL;AACA,SAAKC,IAAL;AAEA,SAAKC,GAAL,GAAWC,qBAAqB,CAAC,KAAKV,cAAN,CAAhC;AACH,GAtC0B,CAwC3B;AACA;AACA;;;AAEAO,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKR,GAAL,CAASY,KAAb,EAAoB,KAAKZ,GAAL,CAASY,KAAT,CAAeC,KAAf;AACpB,QAAI,KAAKnB,KAAT,EAAgB,KAAKA,KAAL,CAAWc,MAAX;AAChB,QAAI,KAAKR,GAAT,EAAc,KAAKA,GAAL,CAASQ,MAAT;AACjB;;AAEDC,EAAAA,IAAI,GAAG;AACH,QAAI,KAAKf,KAAT,EAAgB,KAAKA,KAAL,CAAWe,IAAX;AAChB,QAAI,KAAKT,GAAL,CAASY,KAAb,EAAoB,KAAKZ,GAAL,CAASY,KAAT,CAAeE,GAAf;AACvB,GArD0B,CAuD3B;AACA;AACA;;;AAEArB,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKC,KAAT,EAAgB,KAAKA,KAAL,CAAWD,MAAX;AACnB;;AAEDY,EAAAA,KAAK,CAACU,CAAD,EAAI;AACL;AACA,QAAIA,CAAC,CAACC,OAAF,IAAa,EAAjB,EAAqB;AAAE,UAAI,KAAKhB,GAAT,EAAc,KAAKA,GAAL,CAASiB,MAAT;AAAoB;AAC5D;;AAEDV,EAAAA,KAAK,CAACQ,CAAD,EAAI;AACL,SAAKrB,KAAL,CAAWwB,IAAX;AACH;;AAtE0B","sourcesContent":["import WebGLView from '../../scripts/webgl/WebGLView';\nimport GUIView from '../../scripts/gui/GUIView';\n\nexport default class FirstDemo {\n\n    constructor() {\n        this.init();\n    }\n\n    init() {\n        this.initWebGL();\n        this.initGUI();\n        this.addListeners();\n        this.animate();\n        this.resize();\n    }\n\n    initWebGL() {\n        this.webgl = new WebGLView(this);\n        document.querySelector('.container').appendChild(this.webgl.renderer.domElement);\n    }\n\n    initGUI() {\n        this.gui = new GUIView(this);\n    }\n\n    addListeners() {\n        this.handlerAnimate = this.animate.bind(this);\n\n        window.addEventListener('resize', this.resize.bind(this));\n        window.addEventListener('keyup', this.keyup.bind(this));\n\n        const el = this.webgl.renderer.domElement;\n        el.addEventListener('click', this.click.bind(this));\n    }\n\n    animate() {\n        this.update();\n        this.draw();\n\n        this.raf = requestAnimationFrame(this.handlerAnimate);\n    }\n\n    // ---------------------------------------------------------------------------------------------\n    // PUBLIC\n    // ---------------------------------------------------------------------------------------------\n\n    update() {\n        if (this.gui.stats) this.gui.stats.begin();\n        if (this.webgl) this.webgl.update();\n        if (this.gui) this.gui.update();\n    }\n\n    draw() {\n        if (this.webgl) this.webgl.draw();\n        if (this.gui.stats) this.gui.stats.end();\n    }\n\n    // ---------------------------------------------------------------------------------------------\n    // EVENT HANDLERS\n    // ---------------------------------------------------------------------------------------------\n\n    resize() {\n        if (this.webgl) this.webgl.resize();\n    }\n\n    keyup(e) {\n        // g\n        if (e.keyCode == 71) { if (this.gui) this.gui.toggle(); }\n    }\n\n    click(e) {\n        this.webgl.next();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}