{"ast":null,"code":"import _classCallCheck from\"/Users/roaa/Desktop/demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/roaa/Desktop/demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/roaa/Desktop/demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/roaa/Desktop/demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';//import Sketch from './scene'\nimport'./css/base.css';import'./js/particles.js';import myimage from\"../second-demo/img/3.jpg\";var SecondDemo=/*#__PURE__*/function(_Component){_inherits(SecondDemo,_Component);var _super=_createSuper(SecondDemo);function SecondDemo(props){_classCallCheck(this,SecondDemo);return _super.call(this,props);// window.app = new Sketch();\n}_createClass(SecondDemo,[{key:\"componentDidMount\",value:function componentDidMount(){var image=new Image();var particles=document.createElement('div');particles.id=\"particles-js\";document.getElementById('container').appendChild(particles);/* image.src = myimage\n        image.id = 'second'\n        document.getElementById('container2').appendChild(image)*/particlesJS('particles-js',{\"particles\":{\"number\":{\"value\":800,\"density\":{\"enable\":true,\"value_area\":800}},\"color\":{\"value\":\"#000\"},\"shape\":{\"type\":\"circle\",\"stroke\":{\"width\":0,\"color\":\"#000000\"},\"polygon\":{\"nb_sides\":5},\"image\":{\"src\":\"img/github.svg\",\"width\":100,\"height\":100}},\"opacity\":{\"value\":1,\"random\":false,\"anim\":{\"enable\":false,\"speed\":1,\"opacity_min\":0.1,\"sync\":false}},\"size\":{\"value\":5,\"random\":true,\"anim\":{\"enable\":false,\"speed\":40,\"size_min\":0.1,\"sync\":false}},\"line_linked\":{\"enable\":false,\"distance\":150,\"color\":\"#ffffff\",\"opacity\":0.4,\"width\":1},\"move\":{\"enable\":true,\"speed\":6,\"direction\":\"none\",\"random\":false,\"straight\":false,\"out_mode\":\"out\",\"attract\":{\"enable\":false,\"rotateX\":600,\"rotateY\":1200}}},\"interactivity\":{\"detect_on\":\"canvas\",\"events\":{\"onhover\":{\"enable\":true,\"mode\":\"bubble\"},\"onclick\":{\"enable\":true,\"mode\":\"push\"},\"resize\":true},\"modes\":{\"grab\":{\"distance\":400,\"line_linked\":{\"opacity\":1}},\"bubble\":{\"distance\":200,\"size\":40,\"duration\":2,\"opacity\":8,\"speed\":3},\"repulse\":{\"distance\":200},\"push\":{\"particles_nb\":4},\"remove\":{\"particles_nb\":2}}},\"retina_detect\":true,\"config_demo\":{\"hide_card\":false,\"background_color\":\"#b61924\",\"background_image\":\"\",\"background_position\":\"50% 50%\",\"background_repeat\":\"no-repeat\",\"background_size\":\"cover\"}});/*const script = document.createElement('script')\n        script.src = './js/app.js'\n        document.body.appendChild(script)\n*/ /*image.addEventListener('load', function(){\n\n        const ctx = canvas.getContext('2d');\n        canvas.width = 800;\n        canvas.height = 600;\n\n        let particlesArray = [];\n        const numberOfParticles = 12000;\n        const detail = 1;\n\n        ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n        const pixels = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        let grid = [];\n        for (let y = 0; y < canvas.height; y += detail){\n            let row = [];\n            for (let x = 0; x < canvas.width; x += detail){\n                const red = pixels.data[(y * 4 * pixels.width) + (x * 4)]\n                const green = pixels.data[(y * 4 * pixels.width) + (x * 4 + 1)]\n                const blue = pixels.data[(y * 4 * pixels.width) + (x * 4 + 2)]\n                const color = 'rgb(' + red +',' + green + ',' + blue + ')';\n                const brightness = calculateBrightness(red, green, blue)/100;\n\n                row.push(brightness);\n            }\n            grid.push(row);\n        }\n\n        class Particle {\n            constructor(){\n                this.x = Math.random() * canvas.width;\n                this.y =  0;\n                //this.prevX = this.x;\n                this.speed = 0;\n                this.velocity = Math.random() * 0.7;\n                this.size = Math.random() * 2 + .1;\n            }\n            update () {\n                this.speed = grid[Math.floor(this.y / detail)][Math.floor(this.x / detail)];\n                let movement = (2.5 - this.speed) + this.velocity;\n                this.y += movement;\n                if (this.y >= canvas.height) {\n                    this.y = 0;\n                    this.x = Math.random() * canvas.width;\n                }\n                //console.log(this.x += movement)\n            }\n            draw(){\n                ctx.beginPath();\n                ctx.fillStyle = 'white';\n                ctx.arc(this.x, this.y, this.size, 0, 2 * Math.PI);\n                ctx.fill();\n            }\n        }\n\n        function init(){\n            for (let i = 0; i < numberOfParticles; i++){\n                particlesArray.push(new Particle());\n            }\n        }\n        init();\n\n        function animate () {\n            ctx.globalAlpha = 0.05;\n            ctx.fillStyle = 'rgb(0, 0,0)';\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            ctx.globalAlpha = 0.2;\n            for (let i = 0; i < particlesArray.length; i++) {\n                particlesArray[i].update();\n                ctx.globalAlpha = particlesArray[i].speed * 0.3;\n                particlesArray[i].draw();\n            }\n            requestAnimationFrame( animate );\n        }\n        animate();\n\n        function calculateBrightness(red, green, blue){\n            return Math.sqrt(\n                (red * red) * 0.299 +\n                (green * green) * 0.587 +\n                (blue * blue) * 0.114\n            );\n        }\n\n    });\n\n    let mouse = {\n        x: null,\n        y: null,\n        radius: 90\n    }\n    window.addEventListener('mousemove',\n        function(event){\n            mouse.x = event.x + canvas.clientLeft;\n            mouse.y = event.y + canvas.clientTop;\n            console.log('mouse: ')\n        });*/}},{key:\"render\",value:function render(){console.log('in second');return/*#__PURE__*/React.createElement(\"img\",{src:myimage,id:'second'});}}]);return SecondDemo;}(Component);export{SecondDemo as default};","map":{"version":3,"sources":["/Users/roaa/Desktop/demo/src/components/second-demo/second-demo.jsx"],"names":["React","Component","myimage","SecondDemo","props","image","Image","particles","document","createElement","id","getElementById","appendChild","particlesJS","console","log"],"mappings":"4iBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA;AACA,MAAO,gBAAP,CACA,MAAO,mBAAP,CAEA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,C,GAGqBC,CAAAA,U,wGAEjB,oBAAYC,KAAZ,CAAmB,0DACTA,KADS,EAEf;AACH,C,wDAED,4BAAoB,CAGhB,GAAMC,CAAAA,KAAK,CAAG,GAAIC,CAAAA,KAAJ,EAAd,CACA,GAAMC,CAAAA,SAAS,CAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAlB,CACAF,SAAS,CAACG,EAAV,CAAe,cAAf,CACAF,QAAQ,CAACG,cAAT,CAAwB,WAAxB,EAAqCC,WAArC,CAAiDL,SAAjD,EACD;AACP;AACA,kEAEQM,WAAW,CAAC,cAAD,CAEP,CACI,YAAa,CACT,SAAU,CACN,QAAS,GADH,CAEN,UAAW,CACP,SAAU,IADH,CAEP,aAAc,GAFP,CAFL,CADD,CAQT,QAAS,CACL,QAAS,MADJ,CARA,CAWT,QAAS,CACL,OAAQ,QADH,CAEL,SAAU,CACN,QAAS,CADH,CAEN,QAAS,SAFH,CAFL,CAML,UAAW,CACP,WAAY,CADL,CANN,CASL,QAAS,CACL,MAAO,gBADF,CAEL,QAAS,GAFJ,CAGL,SAAU,GAHL,CATJ,CAXA,CA0BT,UAAW,CACP,QAAS,CADF,CAEP,SAAU,KAFH,CAGP,OAAQ,CACJ,SAAU,KADN,CAEJ,QAAS,CAFL,CAGJ,cAAe,GAHX,CAIJ,OAAQ,KAJJ,CAHD,CA1BF,CAoCT,OAAQ,CACJ,QAAS,CADL,CAEJ,SAAU,IAFN,CAGJ,OAAQ,CACJ,SAAU,KADN,CAEJ,QAAS,EAFL,CAGJ,WAAY,GAHR,CAIJ,OAAQ,KAJJ,CAHJ,CApCC,CA8CT,cAAe,CACX,SAAU,KADC,CAEX,WAAY,GAFD,CAGX,QAAS,SAHE,CAIX,UAAW,GAJA,CAKX,QAAS,CALE,CA9CN,CAqDT,OAAQ,CACJ,SAAU,IADN,CAEJ,QAAS,CAFL,CAGJ,YAAa,MAHT,CAIJ,SAAU,KAJN,CAKJ,WAAY,KALR,CAMJ,WAAY,KANR,CAOJ,UAAW,CACP,SAAU,KADH,CAEP,UAAW,GAFJ,CAGP,UAAW,IAHJ,CAPP,CArDC,CADjB,CAoEI,gBAAiB,CACb,YAAa,QADA,CAEb,SAAU,CACN,UAAW,CACP,SAAU,IADH,CAEP,OAAQ,QAFD,CADL,CAKN,UAAW,CACP,SAAU,IADH,CAEP,OAAQ,MAFD,CALL,CASN,SAAU,IATJ,CAFG,CAab,QAAS,CACL,OAAQ,CACJ,WAAY,GADR,CAEJ,cAAe,CACX,UAAW,CADA,CAFX,CADH,CAOL,SAAU,CACN,WAAY,GADN,CAEN,OAAQ,EAFF,CAGN,WAAY,CAHN,CAIN,UAAW,CAJL,CAKN,QAAS,CALH,CAPL,CAcL,UAAW,CACP,WAAY,GADL,CAdN,CAiBL,OAAQ,CACJ,eAAgB,CADZ,CAjBH,CAoBL,SAAU,CACN,eAAgB,CADV,CApBL,CAbI,CApErB,CA0GI,gBAAiB,IA1GrB,CA2GI,cAAe,CACX,YAAa,KADF,CAEX,mBAAoB,SAFT,CAGX,mBAAoB,EAHT,CAIX,sBAAuB,SAJZ,CAKX,oBAAqB,WALV,CAMX,kBAAmB,OANR,CA3GnB,CAFO,CAAX,CAwHA;AACR;AACA;AACA,EAtIwB,CAuIhB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAEK,C,sBAGD,iBAAS,CAELC,OAAO,CAACC,GAAR,CAAY,WAAZ,EACA,mBAEQ,2BAAK,GAAG,CAAEb,OAAV,CAAmB,EAAE,CAAE,QAAvB,EAFR,CAMH,C,wBA7PmCD,S,SAAnBE,U","sourcesContent":["import React, {Component} from 'react';\n//import Sketch from './scene'\nimport './css/base.css'\nimport './js/particles.js'\n\nimport myimage from \"../second-demo/img/3.jpg\";\n\n\nexport default class SecondDemo extends Component {\n\n    constructor(props) {\n        super(props)\n        // window.app = new Sketch();\n    }\n\n    componentDidMount() {\n\n\n        const image = new Image();\n        const particles = document.createElement('div');\n        particles.id = \"particles-js\"\n        document.getElementById('container').appendChild(particles)\n       /* image.src = myimage\n        image.id = 'second'\n        document.getElementById('container2').appendChild(image)*/\n\n        particlesJS('particles-js',\n\n            {\n                \"particles\": {\n                    \"number\": {\n                        \"value\": 800,\n                        \"density\": {\n                            \"enable\": true,\n                            \"value_area\": 800\n                        }\n                    },\n                    \"color\": {\n                        \"value\": \"#000\"\n                    },\n                    \"shape\": {\n                        \"type\": \"circle\",\n                        \"stroke\": {\n                            \"width\": 0,\n                            \"color\": \"#000000\"\n                        },\n                        \"polygon\": {\n                            \"nb_sides\": 5\n                        },\n                        \"image\": {\n                            \"src\": \"img/github.svg\",\n                            \"width\": 100,\n                            \"height\": 100\n                        }\n                    },\n                    \"opacity\": {\n                        \"value\": 1,\n                        \"random\": false,\n                        \"anim\": {\n                            \"enable\": false,\n                            \"speed\": 1,\n                            \"opacity_min\": 0.1,\n                            \"sync\": false\n                        }\n                    },\n                    \"size\": {\n                        \"value\": 5,\n                        \"random\": true,\n                        \"anim\": {\n                            \"enable\": false,\n                            \"speed\": 40,\n                            \"size_min\": 0.1,\n                            \"sync\": false\n                        }\n                    },\n                    \"line_linked\": {\n                        \"enable\": false,\n                        \"distance\": 150,\n                        \"color\": \"#ffffff\",\n                        \"opacity\": 0.4,\n                        \"width\": 1\n                    },\n                    \"move\": {\n                        \"enable\": true,\n                        \"speed\": 6,\n                        \"direction\": \"none\",\n                        \"random\": false,\n                        \"straight\": false,\n                        \"out_mode\": \"out\",\n                        \"attract\": {\n                            \"enable\": false,\n                            \"rotateX\": 600,\n                            \"rotateY\": 1200\n                        }\n                    }\n                },\n                \"interactivity\": {\n                    \"detect_on\": \"canvas\",\n                    \"events\": {\n                        \"onhover\": {\n                            \"enable\": true,\n                            \"mode\": \"bubble\"\n                        },\n                        \"onclick\": {\n                            \"enable\": true,\n                            \"mode\": \"push\"\n                        },\n                        \"resize\": true\n                    },\n                    \"modes\": {\n                        \"grab\": {\n                            \"distance\": 400,\n                            \"line_linked\": {\n                                \"opacity\": 1\n                            }\n                        },\n                        \"bubble\": {\n                            \"distance\": 200,\n                            \"size\": 40,\n                            \"duration\": 2,\n                            \"opacity\": 8,\n                            \"speed\": 3\n                        },\n                        \"repulse\": {\n                            \"distance\": 200\n                        },\n                        \"push\": {\n                            \"particles_nb\": 4\n                        },\n                        \"remove\": {\n                            \"particles_nb\": 2\n                        }\n                    }\n                },\n                \"retina_detect\": true,\n                \"config_demo\": {\n                    \"hide_card\": false,\n                    \"background_color\": \"#b61924\",\n                    \"background_image\": \"\",\n                    \"background_position\": \"50% 50%\",\n                    \"background_repeat\": \"no-repeat\",\n                    \"background_size\": \"cover\"\n                }\n            }\n        );\n\n        /*const script = document.createElement('script')\n        script.src = './js/app.js'\n        document.body.appendChild(script)\n*/\n        /*image.addEventListener('load', function(){\n\n        const ctx = canvas.getContext('2d');\n        canvas.width = 800;\n        canvas.height = 600;\n\n        let particlesArray = [];\n        const numberOfParticles = 12000;\n        const detail = 1;\n\n        ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n        const pixels = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        let grid = [];\n        for (let y = 0; y < canvas.height; y += detail){\n            let row = [];\n            for (let x = 0; x < canvas.width; x += detail){\n                const red = pixels.data[(y * 4 * pixels.width) + (x * 4)]\n                const green = pixels.data[(y * 4 * pixels.width) + (x * 4 + 1)]\n                const blue = pixels.data[(y * 4 * pixels.width) + (x * 4 + 2)]\n                const color = 'rgb(' + red +',' + green + ',' + blue + ')';\n                const brightness = calculateBrightness(red, green, blue)/100;\n\n                row.push(brightness);\n            }\n            grid.push(row);\n        }\n\n        class Particle {\n            constructor(){\n                this.x = Math.random() * canvas.width;\n                this.y =  0;\n                //this.prevX = this.x;\n                this.speed = 0;\n                this.velocity = Math.random() * 0.7;\n                this.size = Math.random() * 2 + .1;\n            }\n            update () {\n                this.speed = grid[Math.floor(this.y / detail)][Math.floor(this.x / detail)];\n                let movement = (2.5 - this.speed) + this.velocity;\n                this.y += movement;\n                if (this.y >= canvas.height) {\n                    this.y = 0;\n                    this.x = Math.random() * canvas.width;\n                }\n                //console.log(this.x += movement)\n            }\n            draw(){\n                ctx.beginPath();\n                ctx.fillStyle = 'white';\n                ctx.arc(this.x, this.y, this.size, 0, 2 * Math.PI);\n                ctx.fill();\n            }\n        }\n\n        function init(){\n            for (let i = 0; i < numberOfParticles; i++){\n                particlesArray.push(new Particle());\n            }\n        }\n        init();\n\n        function animate () {\n            ctx.globalAlpha = 0.05;\n            ctx.fillStyle = 'rgb(0, 0,0)';\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            ctx.globalAlpha = 0.2;\n            for (let i = 0; i < particlesArray.length; i++) {\n                particlesArray[i].update();\n                ctx.globalAlpha = particlesArray[i].speed * 0.3;\n                particlesArray[i].draw();\n            }\n            requestAnimationFrame( animate );\n        }\n        animate();\n\n        function calculateBrightness(red, green, blue){\n            return Math.sqrt(\n                (red * red) * 0.299 +\n                (green * green) * 0.587 +\n                (blue * blue) * 0.114\n            );\n        }\n\n    });\n\n    let mouse = {\n        x: null,\n        y: null,\n        radius: 90\n    }\n    window.addEventListener('mousemove',\n        function(event){\n            mouse.x = event.x + canvas.clientLeft;\n            mouse.y = event.y + canvas.clientTop;\n            console.log('mouse: ')\n        });*/\n\n    }\n\n\n    render() {\n\n        console.log('in second')\n        return (\n\n                <img src={myimage} id={'second'}/>\n\n\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}