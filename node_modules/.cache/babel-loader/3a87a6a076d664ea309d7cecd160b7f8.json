{"ast":null,"code":"var Node = require('../core/document/Node');\n\nvar DocumentEvent = require('../core/document/DocumentEvent'),\n    NodeEvent = require('../core/document/NodeEvent');\n\nvar CSS = require('../core/document/CSS');\n\nvar ColorMode = require('../core/color/ColorMode');\n\nvar ColorUtil = require('../core/color/ColorUtil');\n\nvar Metric = require('./Metric');\n\nfunction Options(parentNode) {\n  this._parenNode = parentNode;\n  var node = this._node = new Node();\n  var listNode = this._listNode = new Node(Node.LIST);\n  node.setStyleClass(CSS.Options);\n  node.addChild(listNode);\n  this._selectedIndex = null;\n\n  this._callbackOut = function () {};\n\n  this._unfocusable = false;\n  document.addEventListener(DocumentEvent.MOUSE_DOWN, this._onDocumentMouseDown.bind(this));\n  document.addEventListener(DocumentEvent.MOUSE_UP, this._onDocumentMouseUp.bind(this));\n  this.clear();\n}\n\nOptions.prototype = {\n  _onDocumentMouseDown: function () {\n    if (!this._unfocusable) return;\n\n    this._callbackOut();\n  },\n  _onDocumentMouseUp: function () {\n    this._unfocusable = true;\n  },\n  build: function (entries, selected, element, callbackSelect, callbackOut, paddingRight, areColors, colorMode) {\n    this._clearList();\n\n    this._parenNode.addChild(this.getNode());\n\n    var rootNode = this._node,\n        listNode = this._listNode;\n    paddingRight = paddingRight || 0;\n    var self = this; // build list\n\n    var itemNode, entry;\n    var i = -1;\n\n    if (areColors) {\n      colorMode = colorMode || ColorMode.HEX;\n      listNode.setStyleClass(CSS.Color);\n      var color, nodeColor;\n\n      while (++i < entries.length) {\n        entry = entries[i];\n        itemNode = listNode.addChild(new Node(Node.LIST_ITEM));\n        color = itemNode.addChild(new Node());\n\n        switch (colorMode) {\n          case ColorMode.HEX:\n            nodeColor = entry;\n            break;\n\n          case ColorMode.RGB:\n            nodeColor = ColorUtil.RGB2HEX(entry[0], entry[1], entry[2]);\n            break;\n\n          case ColorMode.RGBfv:\n            nodeColor = ColorUtil.RGBfv2HEX(entry[0], entry[1], entry[2]);\n            break;\n\n          case ColorMode.HSV:\n            nodeColor = ColorUtil.HSV2RGB(entry[0], entry[1], entry[2]);\n            break;\n        }\n\n        color.getStyle().backgroundColor = nodeColor;\n        color.getStyle().backgroundImage = 'linear-gradient( rgba(0,0,0,0) 0%, rgba(0,0,0,0.1) 100%)';\n        color.setProperty('innerHTML', entry);\n        if (entry == selected) itemNode.setStyleClass(CSS.OptionsSelected);\n        itemNode.addEventListener(NodeEvent.MOUSE_DOWN, function () {\n          self._selectedIndex = Array.prototype.indexOf.call(this.parentNode.children, this);\n          callbackSelect();\n        });\n      }\n    } else {\n      listNode.deleteStyleClass();\n\n      while (++i < entries.length) {\n        entry = entries[i];\n        itemNode = listNode.addChild(new Node(Node.LIST_ITEM));\n        itemNode.setProperty('innerHTML', entry);\n        if (entry == selected) itemNode.setStyleClass(CSS.OptionsSelected);\n        itemNode.addEventListener(NodeEvent.MOUSE_DOWN, function () {\n          self._selectedIndex = Array.prototype.indexOf.call(this.parentNode.children, this);\n          callbackSelect();\n        });\n      }\n    } //position, set width and enable\n\n\n    var elementPos = element.getPositionGlobal(),\n        elementWidth = element.getWidth() - paddingRight,\n        elementHeight = element.getHeight();\n    var listWidth = listNode.getWidth(),\n        listHeight = listNode.getHeight(),\n        strokeOffset = Metric.STROKE_SIZE * 2;\n    var paddingOptions = Metric.PADDING_OPTIONS;\n    var width = (listWidth < elementWidth ? elementWidth : listWidth) - strokeOffset,\n        posX = elementPos[0],\n        posY = elementPos[1] + elementHeight - paddingOptions;\n    var windowWidth = window.innerWidth,\n        windowHeight = window.innerHeight;\n    var rootPosX = posX + width > windowWidth ? posX - width + elementWidth - strokeOffset : posX,\n        rootPosY = posY + listHeight > windowHeight ? posY - listHeight * 0.5 - elementHeight * 0.5 : posY;\n    listNode.setWidth(width);\n    rootNode.setPositionGlobal(rootPosX, rootPosY);\n    this._callbackOut = callbackOut;\n    this._unfocusable = false;\n  },\n  _clearList: function () {\n    this._listNode.removeAllChildren();\n\n    this._listNode.deleteStyleProperty('width');\n\n    this._selectedIndex = null;\n    this._build = false;\n  },\n  clear: function () {\n    this._clearList();\n\n    this._callbackOut = function () {};\n\n    this._parenNode.removeChild(this.getNode());\n  },\n  isBuild: function () {\n    return this._build;\n  },\n  getNode: function () {\n    return this._node;\n  },\n  getSelectedIndex: function () {\n    return this._selectedIndex;\n  }\n};\n\nOptions.setup = function (parentNode) {\n  return Options._instance = new Options(parentNode);\n};\n\nOptions.get = function () {\n  return Options._instance;\n};\n\nOptions.destroy = function () {\n  Options._instance = null;\n};\n\nmodule.exports = Options;","map":{"version":3,"sources":["/Users/roaa/Desktop/demo/node_modules/@brunoimbrizi/controlkit/lib/component/Options.js"],"names":["Node","require","DocumentEvent","NodeEvent","CSS","ColorMode","ColorUtil","Metric","Options","parentNode","_parenNode","node","_node","listNode","_listNode","LIST","setStyleClass","addChild","_selectedIndex","_callbackOut","_unfocusable","document","addEventListener","MOUSE_DOWN","_onDocumentMouseDown","bind","MOUSE_UP","_onDocumentMouseUp","clear","prototype","build","entries","selected","element","callbackSelect","callbackOut","paddingRight","areColors","colorMode","_clearList","getNode","rootNode","self","itemNode","entry","i","HEX","Color","color","nodeColor","length","LIST_ITEM","RGB","RGB2HEX","RGBfv","RGBfv2HEX","HSV","HSV2RGB","getStyle","backgroundColor","backgroundImage","setProperty","OptionsSelected","Array","indexOf","call","children","deleteStyleClass","elementPos","getPositionGlobal","elementWidth","getWidth","elementHeight","getHeight","listWidth","listHeight","strokeOffset","STROKE_SIZE","paddingOptions","PADDING_OPTIONS","width","posX","posY","windowWidth","window","innerWidth","windowHeight","innerHeight","rootPosX","rootPosY","setWidth","setPositionGlobal","removeAllChildren","deleteStyleProperty","_build","removeChild","isBuild","getSelectedIndex","setup","_instance","get","destroy","module","exports"],"mappings":"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","sourcesContent":["var Node = require('../core/document/Node');\r\nvar DocumentEvent = require('../core/document/DocumentEvent'),\r\n    NodeEvent     = require('../core/document/NodeEvent');\r\nvar CSS = require('../core/document/CSS');\r\nvar ColorMode = require('../core/color/ColorMode');\r\nvar ColorUtil = require('../core/color/ColorUtil');\r\nvar Metric = require('./Metric');\r\n\r\nfunction Options(parentNode) {\r\n    this._parenNode = parentNode;\r\n\r\n    var node = this._node = new Node();\r\n    var listNode = this._listNode = new Node(Node.LIST);\r\n\r\n    node.setStyleClass(CSS.Options);\r\n    node.addChild(listNode);\r\n\r\n    this._selectedIndex = null;\r\n    this._callbackOut = function () { };\r\n\r\n    this._unfocusable = false;\r\n\r\n    document.addEventListener(DocumentEvent.MOUSE_DOWN, this._onDocumentMouseDown.bind(this));\r\n    document.addEventListener(DocumentEvent.MOUSE_UP, this._onDocumentMouseUp.bind(this));\r\n\r\n    this.clear();\r\n}\r\n\r\nOptions.prototype = {\r\n    _onDocumentMouseDown: function () {\r\n        if (!this._unfocusable)return;\r\n        this._callbackOut();\r\n    },\r\n\r\n    _onDocumentMouseUp: function () {\r\n        this._unfocusable = true;\r\n    },\r\n\r\n    build: function (entries, selected, element, callbackSelect, callbackOut, paddingRight, areColors, colorMode) {\r\n        this._clearList();\r\n\r\n        this._parenNode.addChild(this.getNode());\r\n\r\n        var rootNode = this._node,\r\n            listNode = this._listNode;\r\n\r\n        paddingRight = paddingRight || 0;\r\n\r\n        var self = this;\r\n\r\n        // build list\r\n        var itemNode, entry;\r\n        var i = -1;\r\n\r\n        if (areColors) {\r\n            colorMode = colorMode || ColorMode.HEX;\r\n\r\n            listNode.setStyleClass(CSS.Color);\r\n\r\n            var color, nodeColor;\r\n\r\n            while (++i < entries.length) {\r\n                entry = entries[i];\r\n                itemNode = listNode.addChild(new Node(Node.LIST_ITEM));\r\n                color = itemNode.addChild(new Node());\r\n\r\n                switch (colorMode) {\r\n                    case ColorMode.HEX:\r\n                        nodeColor = entry;\r\n                        break;\r\n                    case ColorMode.RGB:\r\n                        nodeColor = ColorUtil.RGB2HEX(entry[0], entry[1], entry[2]);\r\n                        break;\r\n                    case ColorMode.RGBfv:\r\n                        nodeColor = ColorUtil.RGBfv2HEX(entry[0], entry[1], entry[2]);\r\n                        break;\r\n                    case ColorMode.HSV:\r\n                        nodeColor = ColorUtil.HSV2RGB(entry[0], entry[1], entry[2]);\r\n                        break;\r\n                }\r\n\r\n                color.getStyle().backgroundColor = nodeColor;\r\n                color.getStyle().backgroundImage = 'linear-gradient( rgba(0,0,0,0) 0%, rgba(0,0,0,0.1) 100%)';\r\n                color.setProperty('innerHTML', entry);\r\n\r\n                if (entry == selected)itemNode.setStyleClass(CSS.OptionsSelected);\r\n\r\n                itemNode.addEventListener(NodeEvent.MOUSE_DOWN,\r\n                    function () {\r\n                        self._selectedIndex = Array.prototype.indexOf.call(this.parentNode.children, this);\r\n                        callbackSelect();\r\n                    });\r\n            }\r\n\r\n        }\r\n        else {\r\n            listNode.deleteStyleClass();\r\n\r\n            while (++i < entries.length) {\r\n                entry = entries[i];\r\n\r\n                itemNode = listNode.addChild(new Node(Node.LIST_ITEM));\r\n                itemNode.setProperty('innerHTML', entry);\r\n                if (entry == selected)itemNode.setStyleClass(CSS.OptionsSelected);\r\n\r\n                itemNode.addEventListener(NodeEvent.MOUSE_DOWN,\r\n                    function () {\r\n                        self._selectedIndex = Array.prototype.indexOf.call(this.parentNode.children, this);\r\n                        callbackSelect();\r\n                    });\r\n            }\r\n        }\r\n\r\n        //position, set width and enable\r\n\r\n        var elementPos = element.getPositionGlobal(),\r\n            elementWidth = element.getWidth() - paddingRight,\r\n            elementHeight = element.getHeight();\r\n\r\n        var listWidth = listNode.getWidth(),\r\n            listHeight = listNode.getHeight(),\r\n            strokeOffset = Metric.STROKE_SIZE * 2;\r\n\r\n        var paddingOptions = Metric.PADDING_OPTIONS;\r\n\r\n        var width = (listWidth < elementWidth ? elementWidth : listWidth) - strokeOffset,\r\n            posX = elementPos[0],\r\n            posY = elementPos[1] + elementHeight - paddingOptions;\r\n\r\n        var windowWidth = window.innerWidth,\r\n            windowHeight = window.innerHeight;\r\n\r\n        var rootPosX = (posX + width) > windowWidth ? (posX - width + elementWidth - strokeOffset) : posX,\r\n            rootPosY = (posY + listHeight) > windowHeight ? (posY - listHeight * 0.5 - elementHeight * 0.5) : posY;\r\n\r\n        listNode.setWidth(width);\r\n        rootNode.setPositionGlobal(rootPosX, rootPosY);\r\n\r\n        this._callbackOut = callbackOut;\r\n        this._unfocusable = false;\r\n    },\r\n\r\n    _clearList: function () {\r\n        this._listNode.removeAllChildren();\r\n        this._listNode.deleteStyleProperty('width');\r\n        this._selectedIndex = null;\r\n        this._build = false;\r\n    },\r\n\r\n    clear: function () {\r\n        this._clearList();\r\n        this._callbackOut = function () {\r\n        };\r\n        this._parenNode.removeChild(this.getNode());\r\n\r\n    },\r\n\r\n    isBuild: function () {\r\n        return this._build;\r\n    },\r\n    getNode: function () {\r\n        return this._node;\r\n    },\r\n    getSelectedIndex: function () {\r\n        return this._selectedIndex;\r\n    }\r\n};\r\n\r\nOptions.setup = function(parentNode){return Options._instance = new Options(parentNode);};\r\nOptions.get   = function(){return Options._instance;};\r\nOptions.destroy = function(){Options._instance = null;};\r\n\r\nmodule.exports = Options;"]},"metadata":{},"sourceType":"script"}