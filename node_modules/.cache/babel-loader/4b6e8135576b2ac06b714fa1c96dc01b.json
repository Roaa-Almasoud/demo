{"ast":null,"code":"var EventDispatcher = require('../core/event/EventDispatcher'),\n    NodeEvent = require('../core/document/NodeEvent');\n\nvar Node = require('../core/document/Node');\n\nvar PRESET_SHIFT_MULTIPLIER = 10;\nvar NUM_REGEX = /^-?\\d*\\.?\\d*$/;\nvar setCaretPos = null,\n    selectAll = null;\n\nfunction inputSetValue(input, value) {\n  input.setProperty('value', value);\n  input.dispatchEvent(new Event('input'));\n}\n\nNumberInput_Internal = function (stepValue, dp, onBegin, onChange, onFinish, onError) {\n  EventDispatcher.apply(this, null);\n  this._value = 0;\n  this._valueStep = stepValue;\n  this._valueDp = dp;\n\n  this._onBegin = onBegin || function () {};\n\n  this._onChange = onChange || function () {};\n\n  this._onFinish = onFinish || function () {};\n\n  this._onError = onError || function () {};\n\n  this._keyCode = null;\n  this._caretOffset = 0;\n  var input = this._input = new Node('text');\n  input.setProperty('value', this._value);\n  input.addEventListener('input', this._onInput.bind(this));\n  input.addEventListener('keydown', this._onKeydown.bind(this));\n\n  if (!setCaretPos) {\n    if (input.getElement().setSelectionRange) {\n      setCaretPos = function (input, pos) {\n        input.getElement().setSelectionRange(pos, pos);\n      };\n\n      selectAll = function (input) {\n        input.getElement().setSelectionRange(0, input.getProperty('value').length);\n      };\n    } else {\n      setCaretPos = function (input, pos) {\n        var range = input.getElement().createTextRange();\n        range.collapse(true);\n        range.moveEnd('character', pos);\n        range.moveStart('character', pos);\n        range.select();\n      };\n\n      selectAll = function (input) {\n        var range = input.getElement().createTextRange();\n        range.collapse(true);\n        range.moveStart('character', 0);\n        range.moveEnd('character', input.getProperty('value').length);\n        range.select();\n      };\n    }\n  }\n};\n\nNumberInput_Internal.prototype = Object.create(EventDispatcher.prototype);\nNumberInput_Internal.prototype.constructor = NumberInput_Internal;\n\nNumberInput_Internal.prototype._setValue = function (value) {\n  var prefix = ((value = +value) || 1 / value) < 0 && value == 0 ? '-' : ''; //-0\n\n  value = Number(value).toFixed(this._valueDp);\n\n  this._input.setProperty('value', prefix + value);\n\n  this._value = Number(value);\n};\n\nNumberInput_Internal.prototype._onInput = function () {\n  var input = this._input,\n      value = input.getProperty('value'),\n      start = input.getProperty('selectionStart'),\n      dp = this._valueDp;\n  var first = value[0];\n\n  if (value == '') {\n    value = 0;\n  } else if (first === '.') {\n    value = '0' + value;\n  }\n\n  if (!NUM_REGEX.test(value) || value == '-') {\n    input.setProperty('value', this._value.toFixed(dp));\n    setCaretPos(input, Math.max(--start, 0));\n\n    this._onError(this._keyCode);\n\n    return;\n  }\n\n  this._onBegin(this._value);\n\n  this._setValue(value);\n\n  setCaretPos(input, start - this._caretOffset);\n\n  this._onChange();\n};\n\nNumberInput_Internal.prototype._onKeydown = function (e) {\n  var keyCode = this._keyCode = e.keyCode;\n\n  if (keyCode == 13) {\n    this._onFinish();\n\n    e.preventDefault();\n    return;\n  }\n\n  var input = this._input,\n      value = input.getProperty('value');\n  var start = input.getProperty('selectionStart'),\n      end = input.getProperty('selectionEnd');\n  var length = value.length;\n  var isBackspaceDelete = keyCode == 8 || keyCode == 45,\n      isMetaKey = e.metaKey,\n      isCtrlKey = e.ctrlKey,\n      isLeft = keyCode == 37,\n      isRight = keyCode == 39,\n      isLeftRight = isLeft || isRight,\n      isShift = e.shiftKey,\n      isUpDown = keyCode == 38 || keyCode == 40,\n      isSelectAll = (isMetaKey || isCtrlKey) && keyCode == 65,\n      isRangeSelected = start != end,\n      isAllSelected = start == 0 && end == length,\n      isMinus = keyCode == 189;\n  var indexDecimalMark = value.indexOf('.');\n  this._caretOffset = 0; //prevent cmd-z || ctrl-z\n\n  if ((isMetaKey || isCtrlKey) && keyCode == 90) {\n    e.preventDefault();\n    return;\n  } //select all cmd+a || ctrl+a\n\n\n  if (isSelectAll) {\n    selectAll(input);\n    e.preventDefault();\n    return;\n  } //everything is selected\n\n\n  if (isAllSelected) {\n    if (isMinus) {\n      //set negative zero, as starting point for negative number\n      inputSetValue(input, '-0'); //set caret after  '-'\n\n      setCaretPos(input, 1);\n    } else {\n      //delete number / replace / ignore\n      inputSetValue(input, isBackspaceDelete ? 0 : String.fromCharCode(keyCode)); //jump to start <--> end\n\n      setCaretPos(input, isLeft ? start : end);\n    }\n\n    e.preventDefault();\n    return;\n  } //jump over decimal mark\n\n\n  if (isBackspaceDelete && start - 1 == indexDecimalMark) {\n    setCaretPos(input, start - 1);\n    return;\n  } // 0|. enter first dp without jumping over decimal mark\n\n\n  if (!isLeftRight && value[0] == '0' && start == 1) {\n    setCaretPos(input, 1);\n    this._caretOffset = 1;\n    return;\n  } //increase / decrease number by (step up / down) * multiplier on shift down\n\n\n  if (isUpDown) {\n    var step = (isShift ? PRESET_SHIFT_MULTIPLIER : 1) * this._valueStep,\n        mult = keyCode == 38 ? 1.0 : -1.0;\n    inputSetValue(input, Number(value) + step * mult);\n    setCaretPos(input, start);\n    e.preventDefault();\n    return;\n  } //range selected, not in selection process\n\n\n  if (isRangeSelected && !(isShift && isLeftRight)) {\n    //jump to start <--> end\n    if (isLeftRight) {\n      setCaretPos(input, isLeft ? start : end);\n    } else {\n      //replace complete range, not just parts\n      value = value.substr(0, start) + String.fromCharCode(keyCode) + value.substr(end, length - end);\n      inputSetValue(input, value);\n      setCaretPos(input, end);\n    }\n\n    e.preventDefault();\n    return;\n  } //caret within fractional part, not moving caret, selecting, deleting\n\n\n  if (!isShift && !isLeftRight && !isBackspaceDelete && start > indexDecimalMark && start < length) {\n    value = value.substr(0, start) + String.fromCharCode(keyCode) + value.substr(start + 1, length - 1);\n    inputSetValue(input, value);\n    setCaretPos(input, Math.min(start + 1, length - 1));\n    e.preventDefault();\n    return;\n  } //caret at end of number, do nothing\n\n\n  if (!isBackspaceDelete && !isLeftRight && !isUpDown && start >= length) {\n    e.preventDefault();\n  }\n};\n\nNumberInput_Internal.prototype.getValue = function () {\n  return this._value;\n};\n\nNumberInput_Internal.prototype.setValue = function (n) {\n  this._setValue(n);\n};\n\nNumberInput_Internal.prototype.getNode = function () {\n  return this._input;\n};\n\nmodule.exports = NumberInput_Internal;","map":{"version":3,"sources":["/Users/roaa/Desktop/demo/node_modules/@brunoimbrizi/controlkit/lib/component/NumberInput_Internal.js"],"names":["EventDispatcher","require","NodeEvent","Node","PRESET_SHIFT_MULTIPLIER","NUM_REGEX","setCaretPos","selectAll","inputSetValue","input","value","setProperty","dispatchEvent","Event","NumberInput_Internal","stepValue","dp","onBegin","onChange","onFinish","onError","apply","_value","_valueStep","_valueDp","_onBegin","_onChange","_onFinish","_onError","_keyCode","_caretOffset","_input","addEventListener","_onInput","bind","_onKeydown","getElement","setSelectionRange","pos","getProperty","length","range","createTextRange","collapse","moveEnd","moveStart","select","prototype","Object","create","constructor","_setValue","prefix","Number","toFixed","start","first","test","Math","max","e","keyCode","preventDefault","end","isBackspaceDelete","isMetaKey","metaKey","isCtrlKey","ctrlKey","isLeft","isRight","isLeftRight","isShift","shiftKey","isUpDown","isSelectAll","isRangeSelected","isAllSelected","isMinus","indexDecimalMark","indexOf","String","fromCharCode","step","mult","substr","min","getValue","setValue","n","getNode","module","exports"],"mappings":"AAAA,IAAIA,eAAe,GAAGC,OAAO,CAAC,+BAAD,CAA7B;AAAA,IACIC,SAAS,GAAGD,OAAO,CAAC,4BAAD,CADvB;;AAEA,IAAIE,IAAI,GAAQF,OAAO,CAAC,uBAAD,CAAvB;;AAEA,IAAIG,uBAAuB,GAAI,EAA/B;AACA,IAAIC,SAAS,GAAG,eAAhB;AAEA,IAAIC,WAAW,GAAG,IAAlB;AAAA,IACIC,SAAS,GAAG,IADhB;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA6BC,KAA7B,EAAmC;AAC/BD,EAAAA,KAAK,CAACE,WAAN,CAAkB,OAAlB,EAA0BD,KAA1B;AACAD,EAAAA,KAAK,CAACG,aAAN,CAAoB,IAAIC,KAAJ,CAAU,OAAV,CAApB;AACH;;AAEDC,oBAAoB,GAAG,UAAUC,SAAV,EAAqBC,EAArB,EAAyBC,OAAzB,EAAkCC,QAAlC,EAA4CC,QAA5C,EAAsDC,OAAtD,EAA+D;AAClFpB,EAAAA,eAAe,CAACqB,KAAhB,CAAsB,IAAtB,EAA4B,IAA5B;AAEA,OAAKC,MAAL,GAAc,CAAd;AACA,OAAKC,UAAL,GAAkBR,SAAlB;AACA,OAAKS,QAAL,GAAkBR,EAAlB;;AAEA,OAAKS,QAAL,GAAgBR,OAAO,IAAI,YAAW,CAAE,CAAxC;;AACA,OAAKS,SAAL,GAAiBR,QAAQ,IAAI,YAAY,CAAE,CAA3C;;AACA,OAAKS,SAAL,GAAiBR,QAAQ,IAAI,YAAW,CAAE,CAA1C;;AACA,OAAKS,QAAL,GAAgBR,OAAO,IAAI,YAAW,CAAE,CAAxC;;AAEA,OAAKS,QAAL,GAAgB,IAAhB;AACA,OAAKC,YAAL,GAAoB,CAApB;AAEA,MAAIrB,KAAK,GAAG,KAAKsB,MAAL,GAAc,IAAI5B,IAAJ,CAAS,MAAT,CAA1B;AACIM,EAAAA,KAAK,CAACE,WAAN,CAAkB,OAAlB,EAA2B,KAAKW,MAAhC;AAEJb,EAAAA,KAAK,CAACuB,gBAAN,CAAuB,OAAvB,EAA+B,KAAKC,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAA/B;AACAzB,EAAAA,KAAK,CAACuB,gBAAN,CAAuB,SAAvB,EAAiC,KAAKG,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAjC;;AAEA,MAAG,CAAC5B,WAAJ,EAAgB;AACZ,QAAGG,KAAK,CAAC2B,UAAN,GAAmBC,iBAAtB,EAAwC;AACpC/B,MAAAA,WAAW,GAAG,UAASG,KAAT,EAAe6B,GAAf,EAAmB;AAC7B7B,QAAAA,KAAK,CAAC2B,UAAN,GAAmBC,iBAAnB,CAAqCC,GAArC,EAAyCA,GAAzC;AACH,OAFD;;AAGA/B,MAAAA,SAAS,GAAG,UAASE,KAAT,EAAe;AACvBA,QAAAA,KAAK,CAAC2B,UAAN,GAAmBC,iBAAnB,CAAqC,CAArC,EAAuC5B,KAAK,CAAC8B,WAAN,CAAkB,OAAlB,EAA2BC,MAAlE;AACH,OAFD;AAGH,KAPD,MAOO;AACHlC,MAAAA,WAAW,GAAG,UAASG,KAAT,EAAe6B,GAAf,EAAmB;AAC7B,YAAIG,KAAK,GAAGhC,KAAK,CAAC2B,UAAN,GAAmBM,eAAnB,EAAZ;AACID,QAAAA,KAAK,CAACE,QAAN,CAAe,IAAf;AACAF,QAAAA,KAAK,CAACG,OAAN,CAAc,WAAd,EAA0BN,GAA1B;AACAG,QAAAA,KAAK,CAACI,SAAN,CAAgB,WAAhB,EAA4BP,GAA5B;AACAG,QAAAA,KAAK,CAACK,MAAN;AACP,OAND;;AAOAvC,MAAAA,SAAS,GAAG,UAASE,KAAT,EAAe;AACvB,YAAIgC,KAAK,GAAGhC,KAAK,CAAC2B,UAAN,GAAmBM,eAAnB,EAAZ;AACID,QAAAA,KAAK,CAACE,QAAN,CAAe,IAAf;AACAF,QAAAA,KAAK,CAACI,SAAN,CAAgB,WAAhB,EAA4B,CAA5B;AACAJ,QAAAA,KAAK,CAACG,OAAN,CAAc,WAAd,EAA0BnC,KAAK,CAAC8B,WAAN,CAAkB,OAAlB,EAA2BC,MAArD;AACAC,QAAAA,KAAK,CAACK,MAAN;AACP,OAND;AAOH;AACJ;AACJ,CA9CD;;AA+CAhC,oBAAoB,CAACiC,SAArB,GAAiCC,MAAM,CAACC,MAAP,CAAcjD,eAAe,CAAC+C,SAA9B,CAAjC;AACAjC,oBAAoB,CAACiC,SAArB,CAA+BG,WAA/B,GAA6CpC,oBAA7C;;AAEAA,oBAAoB,CAACiC,SAArB,CAA+BI,SAA/B,GAA2C,UAASzC,KAAT,EAAe;AACtD,MAAI0C,MAAM,GAAI,CAAC,CAAC1C,KAAK,GAAG,CAACA,KAAV,KAAoB,IAAIA,KAAzB,IAAkC,CAAlC,IAAuCA,KAAK,IAAI,CAAhD,GAAoD,GAApD,GAA0D,EAAxE,CADsD,CACsB;;AACxEA,EAAAA,KAAK,GAAG2C,MAAM,CAAC3C,KAAD,CAAN,CAAc4C,OAAd,CAAsB,KAAK9B,QAA3B,CAAR;;AACJ,OAAKO,MAAL,CAAYpB,WAAZ,CAAwB,OAAxB,EAAgCyC,MAAM,GAAG1C,KAAzC;;AACA,OAAKY,MAAL,GAAc+B,MAAM,CAAC3C,KAAD,CAApB;AACH,CALD;;AAOAI,oBAAoB,CAACiC,SAArB,CAA+Bd,QAA/B,GAA0C,YAAU;AAChD,MAAIxB,KAAK,GAAG,KAAKsB,MAAjB;AAAA,MACIrB,KAAK,GAAGD,KAAK,CAAC8B,WAAN,CAAkB,OAAlB,CADZ;AAAA,MAEIgB,KAAK,GAAG9C,KAAK,CAAC8B,WAAN,CAAkB,gBAAlB,CAFZ;AAAA,MAGIvB,EAAE,GAAM,KAAKQ,QAHjB;AAKA,MAAIgC,KAAK,GAAG9C,KAAK,CAAC,CAAD,CAAjB;;AAEA,MAAGA,KAAK,IAAI,EAAZ,EAAe;AACXA,IAAAA,KAAK,GAAG,CAAR;AACH,GAFD,MAEO,IAAG8C,KAAK,KAAK,GAAb,EAAiB;AACpB9C,IAAAA,KAAK,GAAG,MAAMA,KAAd;AACH;;AAED,MAAG,CAACL,SAAS,CAACoD,IAAV,CAAe/C,KAAf,CAAD,IAA0BA,KAAK,IAAI,GAAtC,EAA0C;AACtCD,IAAAA,KAAK,CAACE,WAAN,CAAkB,OAAlB,EAA0B,KAAKW,MAAL,CAAYgC,OAAZ,CAAoBtC,EAApB,CAA1B;AACAV,IAAAA,WAAW,CAACG,KAAD,EAAOiD,IAAI,CAACC,GAAL,CAAS,EAAEJ,KAAX,EAAiB,CAAjB,CAAP,CAAX;;AACA,SAAK3B,QAAL,CAAc,KAAKC,QAAnB;;AACA;AACH;;AACD,OAAKJ,QAAL,CAAc,KAAKH,MAAnB;;AACA,OAAK6B,SAAL,CAAezC,KAAf;;AACAJ,EAAAA,WAAW,CAACG,KAAD,EAAO8C,KAAK,GAAG,KAAKzB,YAApB,CAAX;;AACA,OAAKJ,SAAL;AACH,CAxBD;;AA0BAZ,oBAAoB,CAACiC,SAArB,CAA+BZ,UAA/B,GAA4C,UAASyB,CAAT,EAAW;AACnD,MAAIC,OAAO,GAAG,KAAKhC,QAAL,GAAgB+B,CAAC,CAACC,OAAhC;;AAEA,MAAGA,OAAO,IAAI,EAAd,EAAiB;AACb,SAAKlC,SAAL;;AACAiC,IAAAA,CAAC,CAACE,cAAF;AACA;AACH;;AAED,MAAIrD,KAAK,GAAI,KAAKsB,MAAlB;AAAA,MACIrB,KAAK,GAAID,KAAK,CAAC8B,WAAN,CAAkB,OAAlB,CADb;AAEA,MAAIgB,KAAK,GAAI9C,KAAK,CAAC8B,WAAN,CAAkB,gBAAlB,CAAb;AAAA,MACIwB,GAAG,GAAMtD,KAAK,CAAC8B,WAAN,CAAkB,cAAlB,CADb;AAEA,MAAIC,MAAM,GAAG9B,KAAK,CAAC8B,MAAnB;AAEA,MAAIwB,iBAAiB,GAAGH,OAAO,IAAI,CAAX,IAAgBA,OAAO,IAAI,EAAnD;AAAA,MACII,SAAS,GAAGL,CAAC,CAACM,OADlB;AAAA,MAEIC,SAAS,GAAGP,CAAC,CAACQ,OAFlB;AAAA,MAGIC,MAAM,GAAGR,OAAO,IAAI,EAHxB;AAAA,MAIIS,OAAO,GAAGT,OAAO,IAAI,EAJzB;AAAA,MAKIU,WAAW,GAAGF,MAAM,IAAIC,OAL5B;AAAA,MAMIE,OAAO,GAAGZ,CAAC,CAACa,QANhB;AAAA,MAOIC,QAAQ,GAAGb,OAAO,IAAI,EAAX,IAAiBA,OAAO,IAAI,EAP3C;AAAA,MAQIc,WAAW,GAAG,CAACV,SAAS,IAAIE,SAAd,KAA4BN,OAAO,IAAI,EARzD;AAAA,MASIe,eAAe,GAAGrB,KAAK,IAAIQ,GAT/B;AAAA,MAUIc,aAAa,GAAGtB,KAAK,IAAI,CAAT,IAAcQ,GAAG,IAAIvB,MAVzC;AAAA,MAWIsC,OAAO,GAAGjB,OAAO,IAAI,GAXzB;AAaA,MAAIkB,gBAAgB,GAAGrE,KAAK,CAACsE,OAAN,CAAc,GAAd,CAAvB;AAEA,OAAKlD,YAAL,GAAoB,CAApB,CA9BmD,CAgCnD;;AACA,MAAG,CAACmC,SAAS,IAAIE,SAAd,KAA4BN,OAAO,IAAI,EAA1C,EAA6C;AACzCD,IAAAA,CAAC,CAACE,cAAF;AACA;AACH,GApCkD,CAqCnD;;;AACA,MAAGa,WAAH,EAAe;AACXpE,IAAAA,SAAS,CAACE,KAAD,CAAT;AACAmD,IAAAA,CAAC,CAACE,cAAF;AACA;AACH,GA1CkD,CA2CnD;;;AACA,MAAGe,aAAH,EAAkB;AACd,QAAIC,OAAJ,EAAa;AACT;AACAtE,MAAAA,aAAa,CAACC,KAAD,EAAQ,IAAR,CAAb,CAFS,CAGT;;AACAH,MAAAA,WAAW,CAACG,KAAD,EAAQ,CAAR,CAAX;AACH,KALD,MAKO;AACH;AACAD,MAAAA,aAAa,CAACC,KAAD,EAAQuD,iBAAiB,GAAG,CAAH,GAAOiB,MAAM,CAACC,YAAP,CAAoBrB,OAApB,CAAhC,CAAb,CAFG,CAGH;;AACAvD,MAAAA,WAAW,CAACG,KAAD,EAAQ4D,MAAM,GAAGd,KAAH,GAAWQ,GAAzB,CAAX;AACH;;AACDH,IAAAA,CAAC,CAACE,cAAF;AACA;AACH,GA1DkD,CA2DnD;;;AACA,MAAGE,iBAAiB,IAAKT,KAAK,GAAC,CAAN,IAAWwB,gBAApC,EAAsD;AAClDzE,IAAAA,WAAW,CAACG,KAAD,EAAO8C,KAAK,GAAC,CAAb,CAAX;AACA;AACH,GA/DkD,CAgEnD;;;AACA,MAAG,CAACgB,WAAD,IAAiB7D,KAAK,CAAC,CAAD,CAAL,IAAY,GAAZ,IAAmB6C,KAAK,IAAI,CAAhD,EAAmD;AAC/CjD,IAAAA,WAAW,CAACG,KAAD,EAAO,CAAP,CAAX;AACA,SAAKqB,YAAL,GAAoB,CAApB;AACA;AACH,GArEkD,CAsEnD;;;AACA,MAAG4C,QAAH,EAAY;AACR,QAAIS,IAAI,GAAG,CAACX,OAAO,GAAGpE,uBAAH,GAA6B,CAArC,IAA0C,KAAKmB,UAA1D;AAAA,QACI6D,IAAI,GAAGvB,OAAO,IAAI,EAAX,GAAgB,GAAhB,GAAsB,CAAC,GADlC;AAEArD,IAAAA,aAAa,CAACC,KAAD,EAAO4C,MAAM,CAAC3C,KAAD,CAAN,GAAiByE,IAAI,GAAGC,IAA/B,CAAb;AACA9E,IAAAA,WAAW,CAACG,KAAD,EAAO8C,KAAP,CAAX;AACAK,IAAAA,CAAC,CAACE,cAAF;AACA;AACH,GA9EkD,CA+EnD;;;AACA,MAAGc,eAAe,IAAI,EAAEJ,OAAO,IAAID,WAAb,CAAtB,EAAgD;AAC5C;AACA,QAAGA,WAAH,EAAe;AACXjE,MAAAA,WAAW,CAACG,KAAD,EAAO4D,MAAM,GAAGd,KAAH,GAAWQ,GAAxB,CAAX;AACH,KAFD,MAEO;AAAE;AACLrD,MAAAA,KAAK,GAAGA,KAAK,CAAC2E,MAAN,CAAa,CAAb,EAAe9B,KAAf,IAAwB0B,MAAM,CAACC,YAAP,CAAoBrB,OAApB,CAAxB,GAAuDnD,KAAK,CAAC2E,MAAN,CAAatB,GAAb,EAAiBvB,MAAM,GAACuB,GAAxB,CAA/D;AACAvD,MAAAA,aAAa,CAACC,KAAD,EAAOC,KAAP,CAAb;AACAJ,MAAAA,WAAW,CAACG,KAAD,EAAOsD,GAAP,CAAX;AACH;;AACDH,IAAAA,CAAC,CAACE,cAAF;AACA;AACH,GA3FkD,CA4FnD;;;AACA,MAAG,CAACU,OAAD,IAAY,CAACD,WAAb,IAA4B,CAACP,iBAA7B,IAAmDT,KAAK,GAAGwB,gBAAR,IAA4BxB,KAAK,GAAGf,MAA1F,EAAkG;AAC9F9B,IAAAA,KAAK,GAAGA,KAAK,CAAC2E,MAAN,CAAa,CAAb,EAAe9B,KAAf,IAAwB0B,MAAM,CAACC,YAAP,CAAoBrB,OAApB,CAAxB,GAAuDnD,KAAK,CAAC2E,MAAN,CAAa9B,KAAK,GAAC,CAAnB,EAAqBf,MAAM,GAAC,CAA5B,CAA/D;AACAhC,IAAAA,aAAa,CAACC,KAAD,EAAOC,KAAP,CAAb;AACAJ,IAAAA,WAAW,CAACG,KAAD,EAAOiD,IAAI,CAAC4B,GAAL,CAAS/B,KAAK,GAAC,CAAf,EAAiBf,MAAM,GAAC,CAAxB,CAAP,CAAX;AACAoB,IAAAA,CAAC,CAACE,cAAF;AACA;AACH,GAnGkD,CAoGnD;;;AACA,MAAG,CAACE,iBAAD,IAAsB,CAACO,WAAvB,IAAsC,CAACG,QAAvC,IAAmDnB,KAAK,IAAIf,MAA/D,EAAsE;AAClEoB,IAAAA,CAAC,CAACE,cAAF;AACH;AACJ,CAxGD;;AA0GAhD,oBAAoB,CAACiC,SAArB,CAA+BwC,QAA/B,GAA0C,YAAY;AAClD,SAAO,KAAKjE,MAAZ;AACH,CAFD;;AAIAR,oBAAoB,CAACiC,SAArB,CAA+ByC,QAA/B,GAA0C,UAAUC,CAAV,EAAa;AACnD,OAAKtC,SAAL,CAAesC,CAAf;AACH,CAFD;;AAIA3E,oBAAoB,CAACiC,SAArB,CAA+B2C,OAA/B,GAAyC,YAAY;AACjD,SAAO,KAAK3D,MAAZ;AACH,CAFD;;AAIA4D,MAAM,CAACC,OAAP,GAAiB9E,oBAAjB","sourcesContent":["var EventDispatcher = require('../core/event/EventDispatcher'),\r\n    NodeEvent = require('../core/document/NodeEvent');\r\nvar Node      = require('../core/document/Node');\r\n\r\nvar PRESET_SHIFT_MULTIPLIER  = 10;\r\nvar NUM_REGEX = /^-?\\d*\\.?\\d*$/;\r\n\r\nvar setCaretPos = null,\r\n    selectAll = null;\r\n\r\nfunction inputSetValue(input,value){\r\n    input.setProperty('value',value);\r\n    input.dispatchEvent(new Event('input'));\r\n}\r\n\r\nNumberInput_Internal = function (stepValue, dp, onBegin, onChange, onFinish, onError) {\r\n    EventDispatcher.apply(this, null);\r\n\r\n    this._value = 0;\r\n    this._valueStep = stepValue;\r\n    this._valueDp   = dp;\r\n\r\n    this._onBegin = onBegin || function (){};\r\n    this._onChange = onChange || function () {};\r\n    this._onFinish = onFinish || function() {};\r\n    this._onError = onError || function() {};\r\n\r\n    this._keyCode = null;\r\n    this._caretOffset = 0;\r\n\r\n    var input = this._input = new Node('text');\r\n        input.setProperty('value', this._value);\r\n\r\n    input.addEventListener('input',this._onInput.bind(this));\r\n    input.addEventListener('keydown',this._onKeydown.bind(this));\r\n\r\n    if(!setCaretPos){\r\n        if(input.getElement().setSelectionRange){\r\n            setCaretPos = function(input,pos){\r\n                input.getElement().setSelectionRange(pos,pos);\r\n            };\r\n            selectAll = function(input){\r\n                input.getElement().setSelectionRange(0,input.getProperty('value').length);\r\n            };\r\n        } else {\r\n            setCaretPos = function(input,pos){\r\n                var range = input.getElement().createTextRange();\r\n                    range.collapse(true);\r\n                    range.moveEnd('character',pos);\r\n                    range.moveStart('character',pos);\r\n                    range.select();\r\n            };\r\n            selectAll = function(input){\r\n                var range = input.getElement().createTextRange();\r\n                    range.collapse(true);\r\n                    range.moveStart('character',0);\r\n                    range.moveEnd('character',input.getProperty('value').length);\r\n                    range.select();\r\n            }\r\n        }\r\n    }\r\n};\r\nNumberInput_Internal.prototype = Object.create(EventDispatcher.prototype);\r\nNumberInput_Internal.prototype.constructor = NumberInput_Internal;\r\n\r\nNumberInput_Internal.prototype._setValue = function(value){\r\n    var prefix =  ((value = +value) || 1 / value) < 0 && value == 0 ? '-' : ''; //-0\r\n        value = Number(value).toFixed(this._valueDp);\r\n    this._input.setProperty('value',prefix + value);\r\n    this._value = Number(value);\r\n};\r\n\r\nNumberInput_Internal.prototype._onInput = function(){\r\n    var input = this._input,\r\n        value = input.getProperty('value'),\r\n        start = input.getProperty('selectionStart'),\r\n        dp    = this._valueDp;\r\n\r\n    var first = value[0];\r\n\r\n    if(value == ''){\r\n        value = 0;\r\n    } else if(first === '.'){\r\n        value = '0' + value;\r\n    }\r\n\r\n    if(!NUM_REGEX.test(value) || value == '-'){\r\n        input.setProperty('value',this._value.toFixed(dp));\r\n        setCaretPos(input,Math.max(--start,0));\r\n        this._onError(this._keyCode);\r\n        return;\r\n    }\r\n    this._onBegin(this._value);\r\n    this._setValue(value);\r\n    setCaretPos(input,start - this._caretOffset);\r\n    this._onChange();\r\n};\r\n\r\nNumberInput_Internal.prototype._onKeydown = function(e){\r\n    var keyCode = this._keyCode = e.keyCode;\r\n\r\n    if(keyCode == 13){\r\n        this._onFinish();\r\n        e.preventDefault();\r\n        return;\r\n    }\r\n\r\n    var input  = this._input,\r\n        value  = input.getProperty('value');\r\n    var start  = input.getProperty('selectionStart'),\r\n        end    = input.getProperty('selectionEnd');\r\n    var length = value.length;\r\n\r\n    var isBackspaceDelete = keyCode == 8 || keyCode == 45,\r\n        isMetaKey = e.metaKey,\r\n        isCtrlKey = e.ctrlKey,\r\n        isLeft = keyCode == 37,\r\n        isRight = keyCode == 39,\r\n        isLeftRight = isLeft || isRight,\r\n        isShift = e.shiftKey,\r\n        isUpDown = keyCode == 38 || keyCode == 40,\r\n        isSelectAll = (isMetaKey || isCtrlKey) && keyCode == 65,\r\n        isRangeSelected = start != end,\r\n        isAllSelected = start == 0 && end == length,\r\n        isMinus = keyCode == 189;\r\n\r\n    var indexDecimalMark = value.indexOf('.');\r\n\r\n    this._caretOffset = 0;\r\n\r\n    //prevent cmd-z || ctrl-z\r\n    if((isMetaKey || isCtrlKey) && keyCode == 90){\r\n        e.preventDefault();\r\n        return;\r\n    }\r\n    //select all cmd+a || ctrl+a\r\n    if(isSelectAll){\r\n        selectAll(input);\r\n        e.preventDefault();\r\n        return;\r\n    }\r\n    //everything is selected\r\n    if(isAllSelected) {\r\n        if (isMinus) {\r\n            //set negative zero, as starting point for negative number\r\n            inputSetValue(input, '-0');\r\n            //set caret after  '-'\r\n            setCaretPos(input, 1);\r\n        } else {\r\n            //delete number / replace / ignore\r\n            inputSetValue(input, isBackspaceDelete ? 0 : String.fromCharCode(keyCode));\r\n            //jump to start <--> end\r\n            setCaretPos(input, isLeft ? start : end);\r\n        }\r\n        e.preventDefault();\r\n        return;\r\n    }\r\n    //jump over decimal mark\r\n    if(isBackspaceDelete && (start-1 == indexDecimalMark)){\r\n        setCaretPos(input,start-1);\r\n        return;\r\n    }\r\n    // 0|. enter first dp without jumping over decimal mark\r\n    if(!isLeftRight && (value[0] == '0' && start == 1)){\r\n        setCaretPos(input,1);\r\n        this._caretOffset = 1;\r\n        return;\r\n    }\r\n    //increase / decrease number by (step up / down) * multiplier on shift down\r\n    if(isUpDown){\r\n        var step = (isShift ? PRESET_SHIFT_MULTIPLIER : 1) * this._valueStep,\r\n            mult = keyCode == 38 ? 1.0 : -1.0;\r\n        inputSetValue(input,Number(value) + (step * mult));\r\n        setCaretPos(input,start);\r\n        e.preventDefault();\r\n        return;\r\n    }\r\n    //range selected, not in selection process\r\n    if(isRangeSelected && !(isShift && isLeftRight)){\r\n        //jump to start <--> end\r\n        if(isLeftRight){\r\n            setCaretPos(input,isLeft ? start : end);\r\n        } else { //replace complete range, not just parts\r\n            value = value.substr(0,start) + String.fromCharCode(keyCode) + value.substr(end,length-end);\r\n            inputSetValue(input,value);\r\n            setCaretPos(input,end);\r\n        }\r\n        e.preventDefault();\r\n        return;\r\n    }\r\n    //caret within fractional part, not moving caret, selecting, deleting\r\n    if(!isShift && !isLeftRight && !isBackspaceDelete && (start > indexDecimalMark && start < length)){\r\n        value = value.substr(0,start) + String.fromCharCode(keyCode) + value.substr(start+1,length-1);\r\n        inputSetValue(input,value);\r\n        setCaretPos(input,Math.min(start+1,length-1));\r\n        e.preventDefault();\r\n        return;\r\n    }\r\n    //caret at end of number, do nothing\r\n    if(!isBackspaceDelete && !isLeftRight && !isUpDown && start >= length){\r\n        e.preventDefault();\r\n    }\r\n};\r\n\r\nNumberInput_Internal.prototype.getValue = function () {\r\n    return this._value;\r\n};\r\n\r\nNumberInput_Internal.prototype.setValue = function (n) {\r\n    this._setValue(n);\r\n};\r\n\r\nNumberInput_Internal.prototype.getNode = function () {\r\n    return this._input;\r\n};\r\n\r\nmodule.exports = NumberInput_Internal;\r\n"]},"metadata":{},"sourceType":"script"}