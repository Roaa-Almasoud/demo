{"ast":null,"code":"var Plotter = require('./Plotter');\n\nvar Node = require('../core/document/Node');\n\nvar CSS = require('../core/document/CSS');\n\nvar FunctionPlotType = require('./FunctionPlotType');\n\nvar Mouse = require('../core/document/Mouse');\n\nvar Metric = require('./Metric');\n\nvar DocumentEvent = require('../core/document/DocumentEvent'),\n    ComponentEvent = require('../core/ComponentEvent'),\n    NodeEvent = require('../core/document/NodeEvent');\n\nvar FunctionPlotterObjectError = require('./FunctionPlotterObjectError'),\n    FunctionPlotterFunctionArgsError = require('./FunctionPlotterFunctionArgsError');\n\nvar ObjectComponentNotifier = require('../core/ObjectComponentNotifier');\n\nvar DEFAULT_SHOW_MIN_MAX_LABELS = true;\nvar DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_UNIT_X = 1,\n    DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_UNIT_Y = 1,\n    DEFAULT_FUNCTION_PLOTTER_IMPLICIT_UNIT_X = 0.25,\n    DEFAULT_FUNCTION_PLOTTER_IMPLICIT_UNIT_Y = 0.25,\n    DEFAULT_FUNCTION_PLOTTER_UNIT_MIN = 0.15,\n    DEFAULT_FUNCTION_PLOTTER_UNIT_MAX = 4,\n    DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_SCALE = 10.0,\n    DEFAULT_FUNCTION_PLOTTER_IMPLICIT_SCALE = 1.0,\n    DEFAULT_FUNCTION_PLOTTER_SCALE_MIN = 0.02,\n    DEFAULT_FUNCTION_PLOTTER_SCALE_MAX = 25,\n    DEFAULT_FUNCTION_PLOTTER_IMPLICIT_AXES_COLOR = 'rgba(255,255,255,0.75)',\n    DEFAULT_FUNCTION_PLOTTER_IMPLICIT_GRID_COLOR = 'rgba(25,25,25,0.75)',\n    DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_AXES_COLOR = 'rgb(54,60,64)',\n    DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_GRID_COLOR = 'rgb(25,25,25)',\n    DEFAULT_FUNCTION_PLOTTER_CIRCLE_LABEL_RADIUS = 3,\n    DEFAULT_FUNCTION_PLOTTER_CIRCLE_LABEL_FILL = 'rgb(255,255,255)',\n    DEFAULT_FUNCTION_PLOTTER_CIRCLE_STROKE = '#b12334';\n\nfunction FunctionPlotter(parent, object, value, params) {\n  params = params || {};\n  params.showMinMaxLabels = params.showMinMaxLabels === undefined ? DEFAULT_SHOW_MIN_MAX_LABELS : params.showMinMaxLabels;\n  Plotter.apply(this, arguments);\n\n  if (typeof object[value] !== 'function') {\n    throw new FunctionPlotterObjectError(object, value);\n  }\n\n  var funcArgLength = object[value].length;\n\n  if (funcArgLength > 2 || funcArgLength == 0) {\n    throw new FunctionPlotterFunctionArgsError();\n  }\n\n  var svgRoot = this._svgRoot,\n      path = this._path;\n  var axes = this._axes = svgRoot.insertBefore(this._createSVGObject('path'), path);\n  axes.style.strokeWidth = 1;\n  var axesLabels = this._axesLabels = svgRoot.insertBefore(this._createSVGObject('path'), path);\n  axesLabels.style.stroke = 'rgb(43,48,51)';\n  axesLabels.style.strokeWidth = 1;\n  var grid = this._grid;\n  var svg = this._svg,\n      size = Number(svg.getAttribute('width'));\n  var sliderXWrap = new Node();\n  sliderXWrap.setStyleClass(CSS.GraphSliderXWrap);\n  var sliderYWrap = new Node();\n  sliderYWrap.setStyleClass(CSS.GraphSliderYWrap);\n  var sliderXTrack = this._sliderXTrack = new Node();\n  sliderXTrack.setStyleClass(CSS.GraphSliderX);\n  var sliderYTrack = this._sliderYTrack = new Node();\n  sliderYTrack.setStyleClass(CSS.GraphSliderY);\n  var sliderXHandle = this._sliderXHandle = new Node();\n  sliderXHandle.setStyleClass(CSS.GraphSliderXHandle);\n  var sliderYHandle = this._sliderYHandle = new Node();\n  sliderYHandle.setStyleClass(CSS.GraphSliderYHandle);\n  sliderXTrack.addChild(sliderXHandle);\n  sliderYTrack.addChild(sliderYHandle);\n  sliderXWrap.addChild(sliderXTrack);\n  sliderYWrap.addChild(sliderYTrack);\n  var wrapNode = this._wrapNode;\n  var plotMode = this._plotMode = funcArgLength == 1 ? FunctionPlotType.NON_IMPLICIT : FunctionPlotType.IMPLICIT;\n\n  if (plotMode == FunctionPlotType.IMPLICIT) {\n    var canvas = this._canvas = document.createElement('canvas');\n    canvas.style.width = canvas.style.height = size + 'px';\n    canvas.width = canvas.height = size;\n    wrapNode.getElement().insertBefore(canvas, svg);\n    this._canvasContext = canvas.getContext('2d');\n    this._canvasImageData = this._canvasContext.getImageData(0, 0, size, size);\n    axes.style.stroke = DEFAULT_FUNCTION_PLOTTER_IMPLICIT_AXES_COLOR;\n    grid.style.stroke = DEFAULT_FUNCTION_PLOTTER_IMPLICIT_GRID_COLOR;\n  } else {\n    axes.style.stroke = DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_AXES_COLOR;\n    grid.style.stroke = DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_GRID_COLOR;\n  }\n\n  wrapNode.addChild(sliderXWrap);\n  wrapNode.addChild(sliderYWrap);\n  sliderXHandle.addEventListener(NodeEvent.MOUSE_DOWN, this._onSliderXHandleDown.bind(this));\n  sliderYHandle.addEventListener(NodeEvent.MOUSE_DOWN, this._onSliderYHandleDown.bind(this));\n  var units = this._units = [null, null];\n  this._scale = null;\n\n  if (plotMode == FunctionPlotType.NON_IMPLICIT) {\n    units[0] = DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_UNIT_X;\n    units[1] = DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_UNIT_Y;\n    this._scale = DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_SCALE;\n  } else if (plotMode == FunctionPlotType.IMPLICIT) {\n    units[0] = DEFAULT_FUNCTION_PLOTTER_IMPLICIT_UNIT_X;\n    units[1] = DEFAULT_FUNCTION_PLOTTER_IMPLICIT_UNIT_Y;\n    this._scale = DEFAULT_FUNCTION_PLOTTER_IMPLICIT_SCALE;\n  }\n\n  this._unitsMinMax = [DEFAULT_FUNCTION_PLOTTER_UNIT_MIN, DEFAULT_FUNCTION_PLOTTER_UNIT_MAX]; //1/8->4\n\n  this._scaleMinMax = [DEFAULT_FUNCTION_PLOTTER_SCALE_MIN, DEFAULT_FUNCTION_PLOTTER_SCALE_MAX]; //1/50 -> 25\n\n  this._center = [Math.round(size * 0.5), Math.round(size * 0.5)];\n  this._svgPos = [0, 0];\n  this._func = null;\n  this.setFunction(this._obj[this._key]);\n\n  this._sliderXHandleUpdate();\n\n  this._sliderYHandleUpdate();\n\n  svg.addEventListener(DocumentEvent.MOUSE_DOWN, this._onDragStart.bind(this), false);\n\n  this._wrapNode.getElement().addEventListener(\"mousewheel\", this._onScale.bind(this, false));\n\n  ObjectComponentNotifier.get().addEventListener(ComponentEvent.UPDATE_VALUE, this, 'onValueUpdate');\n}\n\nFunctionPlotter.prototype = Object.create(Plotter.prototype);\nFunctionPlotter.prototype.constructor = FunctionPlotter;\n\nFunctionPlotter.prototype._updateCenter = function () {\n  var svg = this._svg,\n      width = Number(svg.getAttribute('width')),\n      height = Number(svg.getAttribute('height'));\n  var mousePos = Mouse.get().getPosition(),\n      svgPos = this._svgPos,\n      center = this._center;\n  center[0] = Math.max(0, Math.min(mousePos[0] - svgPos[0], width));\n  center[1] = Math.max(0, Math.min(mousePos[1] - svgPos[1], height));\n\n  this._plotGraph();\n};\n\nFunctionPlotter.prototype._onDragStart = function (e) {\n  var svgPos = this._svgPos;\n  svgPos[0] = 0;\n  svgPos[1] = 0; //skip to container\n\n  var element = this._svg.parentNode;\n\n  while (element) {\n    svgPos[0] += element.offsetLeft;\n    svgPos[1] += element.offsetTop;\n    element = element.offsetParent;\n  }\n\n  var eventMove = DocumentEvent.MOUSE_MOVE,\n      eventUp = DocumentEvent.MOUSE_UP;\n\n  var onDrag = this._updateCenter.bind(this),\n      onDragEnd = function () {\n    this._updateCenter.bind(this);\n\n    document.removeEventListener(eventMove, onDrag, false);\n    document.removeEventListener(eventUp, onDragEnd, false);\n  }.bind(this);\n\n  document.addEventListener(eventMove, onDrag, false);\n  document.addEventListener(eventUp, onDragEnd, false);\n\n  this._updateCenter();\n};\n\nFunctionPlotter.prototype._onScale = function (e) {\n  e = window.event || e;\n  this._scale += Math.max(-1, Math.min(1, e.wheelDelta || -e.detail)) * -1;\n  var scaleMinMax = this._scaleMinMax;\n  this._scale = Math.max(scaleMinMax[0], Math.min(this._scale, scaleMinMax[1]));\n\n  this._plotGraph();\n\n  e.preventDefault();\n};\n\nFunctionPlotter.prototype.onValueUpdate = function () {\n  this.setFunction(this._obj[this._key]);\n};\n\nFunctionPlotter.prototype._redraw = function () {\n  if (this._plotMode == FunctionPlotType.IMPLICIT) {\n    var size = this._wrapNode.getWidth(),\n        canvas = this._canvas;\n\n    canvas.style.width = canvas.style.height = size + 'px';\n    canvas.width = canvas.height = size;\n    this._canvasImageData = this._canvasContext.getImageData(0, 0, size, size);\n  }\n\n  this._sliderXHandleUpdate();\n\n  this._sliderYHandleUpdate();\n\n  this.setFunction(this._obj[this._key]);\n};\n\nFunctionPlotter.prototype.setFunction = function (func) {\n  this._func = func.bind(this._obj);\n\n  this._plotGraph();\n};\n\nFunctionPlotter.prototype._plotGraph = function () {\n  this._drawGrid();\n\n  this._drawAxes();\n\n  this._drawPlot();\n};\n\nFunctionPlotter.prototype._drawAxes = function () {\n  var svg = this._svg,\n      svgWidth = Number(svg.getAttribute('width')),\n      svgHeight = Number(svg.getAttribute('height'));\n  var center = this._center,\n      centerX = center[0],\n      centerY = center[1];\n  var pathCmd = '';\n  pathCmd += this._pathCmdLine(0, centerY, svgWidth, centerY);\n  pathCmd += this._pathCmdLine(centerX, 0, centerX, svgHeight);\n\n  this._axes.setAttribute('d', pathCmd);\n};\n\nFunctionPlotter.prototype._drawPlot = function () {\n  var width, height;\n  var center = this._center,\n      centerX = center[0],\n      centerY = center[1];\n  var units = this._units,\n      unitX,\n      unitY;\n  var scale = this._scale;\n  var normval, scaledVal, value, index;\n  var offsetX, offsetY;\n  var i;\n\n  if (this._plotMode == FunctionPlotType.NON_IMPLICIT) {\n    var svg = this._svg;\n    width = Number(svg.getAttribute('width'));\n    height = Number(svg.getAttribute('height'));\n    unitX = units[0] * scale;\n    unitY = height / (units[1] * scale);\n    offsetX = centerX / width;\n    var len = Math.floor(width),\n        points = new Array(len * 2);\n    i = -1;\n\n    while (++i < len) {\n      normval = -offsetX + i / len;\n      scaledVal = normval * unitX;\n      value = centerY - this._func(scaledVal) * unitY;\n      index = i * 2;\n      points[index] = i;\n      points[index + 1] = value;\n    }\n\n    var pathCmd = '';\n    pathCmd += this._pathCmdMoveTo(points[0], points[1]);\n    i = 2;\n\n    while (i < points.length) {\n      pathCmd += this._pathCmdLineTo(points[i], points[i + 1]);\n      i += 2;\n    }\n\n    this._path.setAttribute('d', pathCmd);\n  } else {\n    var canvas = this._canvas,\n        context = this._canvasContext,\n        imgData = this._canvasImageData;\n    width = canvas.width;\n    height = canvas.height;\n    unitX = units[0] * scale;\n    unitY = units[1] * scale;\n    offsetX = centerX / width;\n    offsetY = centerY / height;\n    var invWidth = 1 / width,\n        invHeight = 1 / height;\n    var rgb = [0, 0, 0];\n    var col0 = [30, 34, 36],\n        col1 = [255, 255, 255];\n    i = -1;\n    var j;\n\n    while (++i < height) {\n      j = -1;\n\n      while (++j < width) {\n        value = this._func((-offsetX + j * invWidth) * unitX, (-offsetY + i * invHeight) * unitY);\n        rgb[0] = Math.floor((col1[0] - col0[0]) * value + col0[0]);\n        rgb[1] = Math.floor((col1[1] - col0[1]) * value + col0[1]);\n        rgb[2] = Math.floor((col1[2] - col0[2]) * value + col0[2]);\n        index = (i * width + j) * 4;\n        imgData.data[index] = rgb[0];\n        imgData.data[index + 1] = rgb[1];\n        imgData.data[index + 2] = rgb[2];\n        imgData.data[index + 3] = 255;\n      }\n    }\n\n    context.clearRect(0, 0, width, height);\n    context.putImageData(imgData, 0, 0);\n  }\n};\n\nFunctionPlotter.prototype._drawGrid = function () {\n  var svg = this._svg,\n      width = Number(svg.getAttribute('width')),\n      height = Number(svg.getAttribute('height'));\n  var scale = this._scale;\n  var gridRes = this._units,\n      gridSpacingX = width / (gridRes[0] * scale),\n      gridSpacingY = height / (gridRes[1] * scale);\n  var center = this._center,\n      centerX = center[0],\n      centerY = center[1];\n  var gridNumTop = Math.round(centerY / gridSpacingY) + 1,\n      gridNumBottom = Math.round((height - centerY) / gridSpacingY) + 1,\n      gridNumLeft = Math.round(centerX / gridSpacingX) + 1,\n      gridNumRight = Math.round((width - centerX) / gridSpacingX) + 1;\n  var pathCmdGrid = '',\n      pathCmdAxesLabels = '';\n  var i, temp;\n  var strokeSize = Metric.STROKE_SIZE;\n  var labelTickSize = Metric.FUNCTION_PLOTTER_LABEL_TICK_SIZE,\n      labelTickPaddingRight = width - labelTickSize - strokeSize,\n      labelTickPaddingBottom = height - labelTickSize - strokeSize,\n      labelTickPaddingRightOffset = labelTickPaddingRight - labelTickSize,\n      labelTickPaddingBottomOffset = labelTickPaddingBottom - labelTickSize,\n      labelTickOffsetRight = labelTickPaddingRight - (labelTickSize + strokeSize) * 2,\n      labelTickOffsetBottom = labelTickPaddingBottom - (labelTickSize + strokeSize) * 2;\n  i = -1;\n\n  while (++i < gridNumTop) {\n    temp = Math.round(centerY - gridSpacingY * i);\n    pathCmdGrid += this._pathCmdLine(0, temp, width, temp);\n\n    if (temp > labelTickSize) {\n      pathCmdAxesLabels += this._pathCmdLine(labelTickPaddingRight, temp, labelTickPaddingRightOffset, temp);\n    }\n  }\n\n  i = -1;\n\n  while (++i < gridNumBottom) {\n    temp = Math.round(centerY + gridSpacingY * i);\n    pathCmdGrid += this._pathCmdLine(0, temp, width, temp);\n\n    if (temp < labelTickOffsetBottom) {\n      pathCmdAxesLabels += this._pathCmdLine(labelTickPaddingRight, temp, labelTickPaddingRightOffset, temp);\n    }\n  }\n\n  i = -1;\n\n  while (++i < gridNumLeft) {\n    temp = Math.round(centerX - gridSpacingX * i);\n    pathCmdGrid += this._pathCmdLine(temp, 0, temp, height);\n\n    if (temp > labelTickSize) {\n      pathCmdAxesLabels += this._pathCmdLine(temp, labelTickPaddingBottom, temp, labelTickPaddingBottomOffset);\n    }\n  }\n\n  i = -1;\n\n  while (++i < gridNumRight) {\n    temp = Math.round(centerX + gridSpacingX * i);\n    pathCmdGrid += this._pathCmdLine(temp, 0, temp, height);\n\n    if (temp < labelTickOffsetRight) {\n      pathCmdAxesLabels += this._pathCmdLine(temp, labelTickPaddingBottom, temp, labelTickPaddingBottomOffset);\n    }\n  }\n\n  this._grid.setAttribute('d', pathCmdGrid);\n\n  this._axesLabels.setAttribute('d', pathCmdAxesLabels);\n};\n\nFunctionPlotter.prototype._sliderXStep = function (mousePos) {\n  var mouseX = mousePos[0];\n  var handle = this._sliderXHandle,\n      handleWidth = handle.getWidth(),\n      handleWidthHalf = handleWidth * 0.5;\n  var track = this._sliderXTrack,\n      trackWidth = track.getWidth(),\n      trackLeft = track.getPositionGlobalX();\n  var strokeSize = Metric.STROKE_SIZE;\n  var max = trackWidth - handleWidthHalf - strokeSize * 2;\n  var pos = Math.max(handleWidthHalf, Math.min(mouseX - trackLeft, max)),\n      handlePos = pos - handleWidthHalf;\n  handle.setPositionX(handlePos);\n  var unitsMin = this._unitsMinMax[0],\n      unitsMax = this._unitsMinMax[1];\n  var normVal = (pos - handleWidthHalf) / (max - handleWidthHalf),\n      mappedVal = unitsMin + (unitsMax - unitsMin) * normVal;\n  this._units[0] = mappedVal;\n\n  this._plotGraph();\n};\n\nFunctionPlotter.prototype._sliderYStep = function (mousePos) {\n  var mouseY = mousePos[1];\n  var handle = this._sliderYHandle,\n      handleHeight = handle.getHeight(),\n      handleHeightHalf = handleHeight * 0.5;\n  var track = this._sliderYTrack,\n      trackHeight = track.getHeight(),\n      trackTop = track.getPositionGlobalY();\n  var max = trackHeight - handleHeightHalf - 2;\n  var pos = Math.max(handleHeightHalf, Math.min(mouseY - trackTop, max)),\n      handlePos = pos - handleHeightHalf;\n  handle.setPositionY(handlePos);\n  var unitsMax = this._unitsMinMax[0],\n      unitsMin = this._unitsMinMax[1];\n  var normVal = (pos - handleHeightHalf) / (max - handleHeightHalf),\n      mappedVal = unitsMin + (unitsMax - unitsMin) * normVal;\n  this._units[1] = mappedVal;\n\n  this._plotGraph();\n};\n\nFunctionPlotter.prototype._onSliderXHandleDown = function () {\n  this._onSliderHandleDown(this._sliderXStep.bind(this));\n};\n\nFunctionPlotter.prototype._onSliderYHandleDown = function () {\n  this._onSliderHandleDown(this._sliderYStep.bind(this));\n};\n\nFunctionPlotter.prototype._onSliderHandleDown = function (sliderStepFunc) {\n  var eventMouseMove = DocumentEvent.MOUSE_MOVE,\n      eventMouseUp = DocumentEvent.MOUSE_UP;\n  var mouse = Mouse.get();\n\n  var onDrag = function () {\n    sliderStepFunc(mouse.getPosition());\n  },\n      onDragEnd = function () {\n    document.removeEventListener(eventMouseMove, onDrag, false);\n    document.removeEventListener(eventMouseUp, onDragEnd, false);\n  };\n\n  sliderStepFunc(mouse.getPosition());\n  document.addEventListener(eventMouseMove, onDrag, false);\n  document.addEventListener(eventMouseUp, onDragEnd, false);\n};\n\nFunctionPlotter.prototype._sliderXHandleUpdate = function () {\n  var unitMin = this._unitsMinMax[0],\n      unitMax = this._unitsMinMax[1],\n      unitX = this._units[0];\n\n  var handleX = this._sliderXHandle,\n      handleXWidth = handleX.getWidth(),\n      handleXWidthHalf = handleXWidth * 0.5,\n      trackXWidth = this._sliderXTrack.getWidth();\n\n  var strokeSize = Metric.STROKE_SIZE;\n  var handleXMin = handleXWidthHalf,\n      handleXMax = trackXWidth - handleXWidthHalf - strokeSize * 2;\n  handleX.setPositionX(handleXMin + (handleXMax - handleXMin) * ((unitX - unitMin) / (unitMax - unitMin)) - handleXWidthHalf);\n};\n\nFunctionPlotter.prototype._sliderYHandleUpdate = function () {\n  var unitMin = this._unitsMinMax[0],\n      unitMax = this._unitsMinMax[1],\n      unitY = this._units[1];\n\n  var handleY = this._sliderYHandle,\n      handleYHeight = handleY.getHeight(),\n      handleYHeightHalf = handleYHeight * 0.5,\n      trackYHeight = this._sliderYTrack.getHeight();\n\n  var strokeSize = Metric.STROKE_SIZE;\n  var handleYMin = trackYHeight - handleYHeightHalf - strokeSize * 2,\n      handleYMax = handleYHeightHalf;\n  handleY.setPositionY(handleYMin + (handleYMax - handleYMin) * ((unitY - unitMin) / (unitMax - unitMin)) - handleYHeightHalf);\n};\n\nmodule.exports = FunctionPlotter;","map":{"version":3,"sources":["/Users/roaa/Desktop/demo/node_modules/@brunoimbrizi/controlkit/lib/component/FunctionPlotter.js"],"names":["Plotter","require","Node","CSS","FunctionPlotType","Mouse","Metric","DocumentEvent","ComponentEvent","NodeEvent","FunctionPlotterObjectError","FunctionPlotterFunctionArgsError","ObjectComponentNotifier","DEFAULT_SHOW_MIN_MAX_LABELS","DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_UNIT_X","DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_UNIT_Y","DEFAULT_FUNCTION_PLOTTER_IMPLICIT_UNIT_X","DEFAULT_FUNCTION_PLOTTER_IMPLICIT_UNIT_Y","DEFAULT_FUNCTION_PLOTTER_UNIT_MIN","DEFAULT_FUNCTION_PLOTTER_UNIT_MAX","DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_SCALE","DEFAULT_FUNCTION_PLOTTER_IMPLICIT_SCALE","DEFAULT_FUNCTION_PLOTTER_SCALE_MIN","DEFAULT_FUNCTION_PLOTTER_SCALE_MAX","DEFAULT_FUNCTION_PLOTTER_IMPLICIT_AXES_COLOR","DEFAULT_FUNCTION_PLOTTER_IMPLICIT_GRID_COLOR","DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_AXES_COLOR","DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_GRID_COLOR","DEFAULT_FUNCTION_PLOTTER_CIRCLE_LABEL_RADIUS","DEFAULT_FUNCTION_PLOTTER_CIRCLE_LABEL_FILL","DEFAULT_FUNCTION_PLOTTER_CIRCLE_STROKE","FunctionPlotter","parent","object","value","params","showMinMaxLabels","undefined","apply","arguments","funcArgLength","length","svgRoot","_svgRoot","path","_path","axes","_axes","insertBefore","_createSVGObject","style","strokeWidth","axesLabels","_axesLabels","stroke","grid","_grid","svg","_svg","size","Number","getAttribute","sliderXWrap","setStyleClass","GraphSliderXWrap","sliderYWrap","GraphSliderYWrap","sliderXTrack","_sliderXTrack","GraphSliderX","sliderYTrack","_sliderYTrack","GraphSliderY","sliderXHandle","_sliderXHandle","GraphSliderXHandle","sliderYHandle","_sliderYHandle","GraphSliderYHandle","addChild","wrapNode","_wrapNode","plotMode","_plotMode","NON_IMPLICIT","IMPLICIT","canvas","_canvas","document","createElement","width","height","getElement","_canvasContext","getContext","_canvasImageData","getImageData","addEventListener","MOUSE_DOWN","_onSliderXHandleDown","bind","_onSliderYHandleDown","units","_units","_scale","_unitsMinMax","_scaleMinMax","_center","Math","round","_svgPos","_func","setFunction","_obj","_key","_sliderXHandleUpdate","_sliderYHandleUpdate","_onDragStart","_onScale","get","UPDATE_VALUE","prototype","Object","create","constructor","_updateCenter","mousePos","getPosition","svgPos","center","max","min","_plotGraph","e","element","parentNode","offsetLeft","offsetTop","offsetParent","eventMove","MOUSE_MOVE","eventUp","MOUSE_UP","onDrag","onDragEnd","removeEventListener","window","event","wheelDelta","detail","scaleMinMax","preventDefault","onValueUpdate","_redraw","getWidth","func","_drawGrid","_drawAxes","_drawPlot","svgWidth","svgHeight","centerX","centerY","pathCmd","_pathCmdLine","setAttribute","unitX","unitY","scale","normval","scaledVal","index","offsetX","offsetY","i","len","floor","points","Array","_pathCmdMoveTo","_pathCmdLineTo","context","imgData","invWidth","invHeight","rgb","col0","col1","j","data","clearRect","putImageData","gridRes","gridSpacingX","gridSpacingY","gridNumTop","gridNumBottom","gridNumLeft","gridNumRight","pathCmdGrid","pathCmdAxesLabels","temp","strokeSize","STROKE_SIZE","labelTickSize","FUNCTION_PLOTTER_LABEL_TICK_SIZE","labelTickPaddingRight","labelTickPaddingBottom","labelTickPaddingRightOffset","labelTickPaddingBottomOffset","labelTickOffsetRight","labelTickOffsetBottom","_sliderXStep","mouseX","handle","handleWidth","handleWidthHalf","track","trackWidth","trackLeft","getPositionGlobalX","pos","handlePos","setPositionX","unitsMin","unitsMax","normVal","mappedVal","_sliderYStep","mouseY","handleHeight","getHeight","handleHeightHalf","trackHeight","trackTop","getPositionGlobalY","setPositionY","_onSliderHandleDown","sliderStepFunc","eventMouseMove","eventMouseUp","mouse","unitMin","unitMax","handleX","handleXWidth","handleXWidthHalf","trackXWidth","handleXMin","handleXMax","handleY","handleYHeight","handleYHeightHalf","trackYHeight","handleYMin","handleYMax","module","exports"],"mappings":"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","sourcesContent":["var Plotter = require('./Plotter');\r\n\r\nvar Node = require('../core/document/Node');\r\nvar CSS = require('../core/document/CSS');\r\nvar FunctionPlotType = require('./FunctionPlotType');\r\n\r\n\r\nvar Mouse = require('../core/document/Mouse');\r\nvar Metric = require('./Metric');\r\n\r\nvar DocumentEvent  = require('../core/document/DocumentEvent'),\r\n    ComponentEvent = require('../core/ComponentEvent'),\r\n    NodeEvent      = require('../core/document/NodeEvent');\r\n\r\nvar FunctionPlotterObjectError       = require('./FunctionPlotterObjectError'),\r\n    FunctionPlotterFunctionArgsError = require('./FunctionPlotterFunctionArgsError');\r\n\r\nvar ObjectComponentNotifier = require('../core/ObjectComponentNotifier');\r\n\r\nvar DEFAULT_SHOW_MIN_MAX_LABELS = true;\r\n\r\nvar DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_UNIT_X  =  1,\r\n    DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_UNIT_Y  =  1,\r\n    DEFAULT_FUNCTION_PLOTTER_IMPLICIT_UNIT_X  = 0.25,\r\n    DEFAULT_FUNCTION_PLOTTER_IMPLICIT_UNIT_Y  = 0.25,\r\n    DEFAULT_FUNCTION_PLOTTER_UNIT_MIN  = 0.15,\r\n    DEFAULT_FUNCTION_PLOTTER_UNIT_MAX  = 4,\r\n    DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_SCALE  = 10.0,\r\n    DEFAULT_FUNCTION_PLOTTER_IMPLICIT_SCALE = 1.0,\r\n    DEFAULT_FUNCTION_PLOTTER_SCALE_MIN = 0.02,\r\n    DEFAULT_FUNCTION_PLOTTER_SCALE_MAX = 25,\r\n\r\n    DEFAULT_FUNCTION_PLOTTER_IMPLICIT_AXES_COLOR = 'rgba(255,255,255,0.75)',\r\n    DEFAULT_FUNCTION_PLOTTER_IMPLICIT_GRID_COLOR = 'rgba(25,25,25,0.75)',\r\n\r\n    DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_AXES_COLOR = 'rgb(54,60,64)',\r\n    DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_GRID_COLOR = 'rgb(25,25,25)',\r\n\r\n    DEFAULT_FUNCTION_PLOTTER_CIRCLE_LABEL_RADIUS = 3,\r\n    DEFAULT_FUNCTION_PLOTTER_CIRCLE_LABEL_FILL   = 'rgb(255,255,255)',\r\n    DEFAULT_FUNCTION_PLOTTER_CIRCLE_STROKE       = '#b12334';\r\n\r\nfunction FunctionPlotter(parent, object, value, params) {\r\n    params = params || {};\r\n    params.showMinMaxLabels = params.showMinMaxLabels === undefined ? DEFAULT_SHOW_MIN_MAX_LABELS : params.showMinMaxLabels;\r\n\r\n    Plotter.apply(this, arguments);\r\n\r\n    if (typeof object[value] !== 'function') {\r\n        throw new FunctionPlotterObjectError(object,value);\r\n    }\r\n\r\n    var funcArgLength = object[value].length;\r\n\r\n    if (funcArgLength > 2 || funcArgLength == 0) {\r\n        throw new FunctionPlotterFunctionArgsError();\r\n    }\r\n\r\n    var svgRoot = this._svgRoot,\r\n        path = this._path;\r\n\r\n    var axes = this._axes = svgRoot.insertBefore(this._createSVGObject('path'), path);\r\n        axes.style.strokeWidth = 1;\r\n\r\n    var axesLabels = this._axesLabels = svgRoot.insertBefore(this._createSVGObject('path'), path);\r\n        axesLabels.style.stroke = 'rgb(43,48,51)';\r\n        axesLabels.style.strokeWidth = 1;\r\n\r\n    var grid = this._grid;\r\n\r\n    var svg = this._svg,\r\n        size = Number(svg.getAttribute('width'));\r\n\r\n    var sliderXWrap = new Node();\r\n        sliderXWrap.setStyleClass(CSS.GraphSliderXWrap);\r\n\r\n    var sliderYWrap = new Node();\r\n        sliderYWrap.setStyleClass(CSS.GraphSliderYWrap);\r\n\r\n    var sliderXTrack = this._sliderXTrack = new Node();\r\n        sliderXTrack.setStyleClass(CSS.GraphSliderX);\r\n\r\n    var sliderYTrack = this._sliderYTrack = new Node();\r\n        sliderYTrack.setStyleClass(CSS.GraphSliderY);\r\n\r\n    var sliderXHandle = this._sliderXHandle = new Node();\r\n        sliderXHandle.setStyleClass(CSS.GraphSliderXHandle);\r\n\r\n    var sliderYHandle = this._sliderYHandle = new Node();\r\n        sliderYHandle.setStyleClass(CSS.GraphSliderYHandle);\r\n\r\n    sliderXTrack.addChild(sliderXHandle);\r\n    sliderYTrack.addChild(sliderYHandle);\r\n    sliderXWrap.addChild(sliderXTrack);\r\n    sliderYWrap.addChild(sliderYTrack);\r\n\r\n    var wrapNode = this._wrapNode;\r\n\r\n    var plotMode = this._plotMode = funcArgLength == 1 ?\r\n        FunctionPlotType.NON_IMPLICIT :\r\n        FunctionPlotType.IMPLICIT;\r\n\r\n    if (plotMode == FunctionPlotType.IMPLICIT) {\r\n        var canvas = this._canvas = document.createElement('canvas');\r\n        canvas.style.width = canvas.style.height = size + 'px';\r\n        canvas.width = canvas.height = size;\r\n\r\n        wrapNode.getElement().insertBefore(canvas, svg);\r\n\r\n        this._canvasContext = canvas.getContext('2d');\r\n        this._canvasImageData = this._canvasContext.getImageData(0, 0, size, size);\r\n\r\n        axes.style.stroke = DEFAULT_FUNCTION_PLOTTER_IMPLICIT_AXES_COLOR;\r\n        grid.style.stroke = DEFAULT_FUNCTION_PLOTTER_IMPLICIT_GRID_COLOR;\r\n    }\r\n    else {\r\n        axes.style.stroke = DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_AXES_COLOR;\r\n        grid.style.stroke = DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_GRID_COLOR;\r\n    }\r\n\r\n    wrapNode.addChild(sliderXWrap);\r\n    wrapNode.addChild(sliderYWrap);\r\n\r\n    sliderXHandle.addEventListener(NodeEvent.MOUSE_DOWN, this._onSliderXHandleDown.bind(this));\r\n    sliderYHandle.addEventListener(NodeEvent.MOUSE_DOWN, this._onSliderYHandleDown.bind(this));\r\n\r\n    var units = this._units = [null, null];\r\n    this._scale = null;\r\n\r\n    if (plotMode == FunctionPlotType.NON_IMPLICIT) {\r\n        units[0] = DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_UNIT_X;\r\n        units[1] = DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_UNIT_Y;\r\n\r\n        this._scale = DEFAULT_FUNCTION_PLOTTER_NON_IMPLICIT_SCALE;\r\n    }\r\n    else if (plotMode == FunctionPlotType.IMPLICIT) {\r\n        units[0] = DEFAULT_FUNCTION_PLOTTER_IMPLICIT_UNIT_X;\r\n        units[1] = DEFAULT_FUNCTION_PLOTTER_IMPLICIT_UNIT_Y;\r\n\r\n        this._scale = DEFAULT_FUNCTION_PLOTTER_IMPLICIT_SCALE;\r\n    }\r\n\r\n    this._unitsMinMax = [DEFAULT_FUNCTION_PLOTTER_UNIT_MIN, DEFAULT_FUNCTION_PLOTTER_UNIT_MAX]; //1/8->4\r\n\r\n    this._scaleMinMax = [DEFAULT_FUNCTION_PLOTTER_SCALE_MIN, DEFAULT_FUNCTION_PLOTTER_SCALE_MAX]; //1/50 -> 25\r\n\r\n    this._center = [Math.round(size * 0.5),Math.round(size * 0.5)];\r\n    this._svgPos = [0, 0];\r\n\r\n    this._func = null;\r\n    this.setFunction(this._obj[this._key]);\r\n\r\n    this._sliderXHandleUpdate();\r\n    this._sliderYHandleUpdate();\r\n\r\n    svg.addEventListener(DocumentEvent.MOUSE_DOWN, this._onDragStart.bind(this), false);\r\n    this._wrapNode.getElement().addEventListener(\"mousewheel\", this._onScale.bind(this, false));\r\n\r\n    ObjectComponentNotifier.get().addEventListener(ComponentEvent.UPDATE_VALUE, this, 'onValueUpdate');\r\n}\r\nFunctionPlotter.prototype = Object.create(Plotter.prototype);\r\nFunctionPlotter.prototype.constructor = FunctionPlotter;\r\n\r\nFunctionPlotter.prototype._updateCenter = function () {\r\n    var svg = this._svg,\r\n        width = Number(svg.getAttribute('width')),\r\n        height = Number(svg.getAttribute('height'));\r\n\r\n    var mousePos = Mouse.get().getPosition(),\r\n        svgPos = this._svgPos,\r\n        center = this._center;\r\n\r\n    center[0] = Math.max(0, Math.min(mousePos[0] - svgPos[0], width));\r\n    center[1] = Math.max(0, Math.min(mousePos[1] - svgPos[1], height));\r\n\r\n    this._plotGraph();\r\n};\r\n\r\nFunctionPlotter.prototype._onDragStart = function (e) {\r\n    var svgPos = this._svgPos;\r\n    svgPos[0] = 0;\r\n    svgPos[1] = 0;\r\n\r\n    //skip to container\r\n    var element = this._svg.parentNode;\r\n\r\n    while (element) {\r\n        svgPos[0] += element.offsetLeft;\r\n        svgPos[1] += element.offsetTop;\r\n        element = element.offsetParent;\r\n    }\r\n\r\n    var eventMove = DocumentEvent.MOUSE_MOVE,\r\n        eventUp = DocumentEvent.MOUSE_UP;\r\n\r\n    var onDrag = this._updateCenter.bind(this),\r\n        onDragEnd = function () {\r\n            this._updateCenter.bind(this);\r\n            document.removeEventListener(eventMove, onDrag, false);\r\n            document.removeEventListener(eventUp, onDragEnd, false);\r\n\r\n        }.bind(this);\r\n\r\n    document.addEventListener(eventMove, onDrag, false);\r\n    document.addEventListener(eventUp, onDragEnd, false);\r\n\r\n    this._updateCenter();\r\n};\r\n\r\nFunctionPlotter.prototype._onScale = function (e) {\r\n    e = window.event || e;\r\n    this._scale += Math.max(-1, Math.min(1, (e.wheelDelta || -e.detail))) * -1;\r\n\r\n    var scaleMinMax = this._scaleMinMax;\r\n    this._scale = Math.max(scaleMinMax[0], Math.min(this._scale, scaleMinMax[1]));\r\n\r\n    this._plotGraph();\r\n\r\n    e.preventDefault();\r\n\r\n};\r\n\r\nFunctionPlotter.prototype.onValueUpdate = function () {\r\n    this.setFunction(this._obj[this._key]);\r\n};\r\n\r\nFunctionPlotter.prototype._redraw = function () {\r\n    if (this._plotMode == FunctionPlotType.IMPLICIT) {\r\n        var size = this._wrapNode.getWidth(),\r\n            canvas = this._canvas;\r\n\r\n        canvas.style.width = canvas.style.height = size + 'px';\r\n        canvas.width = canvas.height = size;\r\n\r\n        this._canvasImageData = this._canvasContext.getImageData(0, 0, size, size);\r\n    }\r\n\r\n    this._sliderXHandleUpdate();\r\n    this._sliderYHandleUpdate();\r\n\r\n    this.setFunction(this._obj[this._key]);\r\n};\r\n\r\nFunctionPlotter.prototype.setFunction = function (func) {\r\n    this._func = func.bind(this._obj);\r\n    this._plotGraph();\r\n};\r\n\r\nFunctionPlotter.prototype._plotGraph = function () {\r\n    this._drawGrid();\r\n    this._drawAxes();\r\n    this._drawPlot();\r\n};\r\n\r\nFunctionPlotter.prototype._drawAxes = function () {\r\n    var svg = this._svg,\r\n        svgWidth = Number(svg.getAttribute('width')),\r\n        svgHeight = Number(svg.getAttribute('height'));\r\n\r\n    var center = this._center,\r\n        centerX = center[0],\r\n        centerY = center[1];\r\n\r\n    var pathCmd = '';\r\n    pathCmd += this._pathCmdLine(0, centerY, svgWidth, centerY);\r\n    pathCmd += this._pathCmdLine(centerX, 0, centerX, svgHeight);\r\n\r\n    this._axes.setAttribute('d', pathCmd);\r\n};\r\n\r\nFunctionPlotter.prototype._drawPlot = function () {\r\n    var width, height;\r\n\r\n    var center = this._center,\r\n        centerX = center[0],\r\n        centerY = center[1];\r\n\r\n    var units = this._units,\r\n        unitX, unitY;\r\n\r\n    var scale = this._scale;\r\n    var normval, scaledVal, value, index;\r\n    var offsetX, offsetY;\r\n\r\n    var i;\r\n\r\n    if (this._plotMode == FunctionPlotType.NON_IMPLICIT) {\r\n        var svg = this._svg;\r\n\r\n        width = Number(svg.getAttribute('width'));\r\n        height = Number(svg.getAttribute('height'));\r\n        unitX = units[0] * scale;\r\n        unitY = height / (units[1] * scale);\r\n        offsetX = centerX / width;\r\n\r\n        var len = Math.floor(width),\r\n            points = new Array(len * 2);\r\n\r\n        i = -1;\r\n        while (++i < len) {\r\n            normval = (-offsetX + i / len);\r\n            scaledVal = normval * unitX;\r\n            value = centerY - this._func(scaledVal) * unitY;\r\n\r\n            index = i * 2;\r\n\r\n            points[index] = i;\r\n            points[index + 1] = value;\r\n        }\r\n\r\n        var pathCmd = '';\r\n        pathCmd += this._pathCmdMoveTo(points[0], points[1]);\r\n\r\n        i = 2;\r\n        while (i < points.length) {\r\n            pathCmd += this._pathCmdLineTo(points[i], points[i + 1]);\r\n            i += 2;\r\n        }\r\n\r\n        this._path.setAttribute('d', pathCmd);\r\n    }\r\n    else {\r\n        var canvas = this._canvas,\r\n            context = this._canvasContext,\r\n            imgData = this._canvasImageData;\r\n\r\n        width = canvas.width;\r\n        height = canvas.height;\r\n\r\n        unitX = units[0] * scale;\r\n        unitY = units[1] * scale;\r\n\r\n        offsetX = centerX / width;\r\n        offsetY = centerY / height;\r\n\r\n        var invWidth = 1 / width,\r\n            invHeight = 1 / height;\r\n        var rgb = [0, 0, 0];\r\n\r\n        var col0 = [30, 34, 36],\r\n            col1 = [255, 255, 255];\r\n\r\n        i = -1;\r\n        var j;\r\n        while (++i < height) {\r\n            j = -1;\r\n\r\n            while (++j < width) {\r\n                value = this._func((-offsetX + j * invWidth) * unitX,\r\n                    (-offsetY + i * invHeight) * unitY);\r\n\r\n                rgb[0] = Math.floor((col1[0] - col0[0]) * value + col0[0]);\r\n                rgb[1] = Math.floor((col1[1] - col0[1]) * value + col0[1]);\r\n                rgb[2] = Math.floor((col1[2] - col0[2]) * value + col0[2]);\r\n\r\n                index = (i * width + j) * 4;\r\n\r\n                imgData.data[index] = rgb[0];\r\n                imgData.data[index + 1] = rgb[1];\r\n                imgData.data[index + 2] = rgb[2];\r\n                imgData.data[index + 3] = 255;\r\n            }\r\n        }\r\n\r\n        context.clearRect(0, 0, width, height);\r\n        context.putImageData(imgData, 0, 0);\r\n    }\r\n};\r\n\r\nFunctionPlotter.prototype._drawGrid = function () {\r\n    var svg = this._svg,\r\n        width = Number(svg.getAttribute('width')),\r\n        height = Number(svg.getAttribute('height'));\r\n\r\n    var scale = this._scale;\r\n\r\n    var gridRes = this._units,\r\n        gridSpacingX = width / (gridRes[0] * scale),\r\n        gridSpacingY = height / (gridRes[1] * scale);\r\n\r\n    var center = this._center,\r\n        centerX = center[0],\r\n        centerY = center[1];\r\n\r\n    var gridNumTop = Math.round(centerY / gridSpacingY) + 1,\r\n        gridNumBottom = Math.round((height - centerY) / gridSpacingY) + 1,\r\n        gridNumLeft = Math.round(centerX / gridSpacingX) + 1,\r\n        gridNumRight = Math.round((width - centerX) / gridSpacingX) + 1;\r\n\r\n    var pathCmdGrid = '',\r\n        pathCmdAxesLabels = '';\r\n\r\n    var i, temp;\r\n\r\n    var strokeSize = Metric.STROKE_SIZE;\r\n\r\n    var labelTickSize = Metric.FUNCTION_PLOTTER_LABEL_TICK_SIZE,\r\n        labelTickPaddingRight = width - labelTickSize - strokeSize,\r\n        labelTickPaddingBottom = height - labelTickSize - strokeSize,\r\n        labelTickPaddingRightOffset = labelTickPaddingRight - labelTickSize,\r\n        labelTickPaddingBottomOffset = labelTickPaddingBottom - labelTickSize,\r\n        labelTickOffsetRight = labelTickPaddingRight - (labelTickSize + strokeSize) * 2,\r\n        labelTickOffsetBottom = labelTickPaddingBottom - (labelTickSize + strokeSize) * 2;\r\n\r\n    i = -1;\r\n    while (++i < gridNumTop) {\r\n        temp = Math.round(centerY - gridSpacingY * i);\r\n        pathCmdGrid += this._pathCmdLine(0, temp, width, temp);\r\n\r\n        if (temp > labelTickSize){\r\n            pathCmdAxesLabels += this._pathCmdLine(labelTickPaddingRight, temp,\r\n                labelTickPaddingRightOffset, temp);\r\n        }\r\n    }\r\n\r\n    i = -1;\r\n    while (++i < gridNumBottom) {\r\n        temp = Math.round(centerY + gridSpacingY * i);\r\n        pathCmdGrid += this._pathCmdLine(0, temp, width, temp);\r\n\r\n        if (temp < labelTickOffsetBottom){\r\n            pathCmdAxesLabels += this._pathCmdLine(labelTickPaddingRight, temp,\r\n                labelTickPaddingRightOffset, temp);\r\n        }\r\n    }\r\n\r\n    i = -1;\r\n    while (++i < gridNumLeft) {\r\n        temp = Math.round(centerX - gridSpacingX * i);\r\n        pathCmdGrid += this._pathCmdLine(temp, 0, temp, height);\r\n\r\n        if (temp > labelTickSize){\r\n            pathCmdAxesLabels += this._pathCmdLine(temp, labelTickPaddingBottom,\r\n                temp, labelTickPaddingBottomOffset);\r\n        }\r\n    }\r\n\r\n    i = -1;\r\n    while (++i < gridNumRight) {\r\n        temp = Math.round(centerX + gridSpacingX * i);\r\n        pathCmdGrid += this._pathCmdLine(temp, 0, temp, height);\r\n\r\n        if (temp < labelTickOffsetRight){\r\n            pathCmdAxesLabels += this._pathCmdLine(temp, labelTickPaddingBottom,\r\n                temp, labelTickPaddingBottomOffset);\r\n        }\r\n    }\r\n\r\n    this._grid.setAttribute('d', pathCmdGrid);\r\n    this._axesLabels.setAttribute('d', pathCmdAxesLabels);\r\n};\r\n\r\n\r\nFunctionPlotter.prototype._sliderXStep = function (mousePos) {\r\n    var mouseX = mousePos[0];\r\n\r\n    var handle = this._sliderXHandle,\r\n        handleWidth = handle.getWidth(),\r\n        handleWidthHalf = handleWidth * 0.5;\r\n\r\n    var track = this._sliderXTrack,\r\n        trackWidth = track.getWidth(),\r\n        trackLeft = track.getPositionGlobalX();\r\n\r\n    var strokeSize = Metric.STROKE_SIZE;\r\n\r\n    var max = trackWidth - handleWidthHalf - strokeSize * 2;\r\n\r\n    var pos = Math.max(handleWidthHalf, Math.min(mouseX - trackLeft, max)),\r\n        handlePos = pos - handleWidthHalf;\r\n\r\n    handle.setPositionX(handlePos);\r\n\r\n    var unitsMin = this._unitsMinMax[0],\r\n        unitsMax = this._unitsMinMax[1];\r\n\r\n    var normVal = (pos - handleWidthHalf) / (max - handleWidthHalf),\r\n        mappedVal = unitsMin + (unitsMax - unitsMin) * normVal;\r\n\r\n    this._units[0] = mappedVal;\r\n\r\n    this._plotGraph();\r\n};\r\n\r\nFunctionPlotter.prototype._sliderYStep = function (mousePos) {\r\n    var mouseY = mousePos[1];\r\n\r\n    var handle = this._sliderYHandle,\r\n        handleHeight = handle.getHeight(),\r\n        handleHeightHalf = handleHeight * 0.5;\r\n\r\n    var track = this._sliderYTrack,\r\n        trackHeight = track.getHeight(),\r\n        trackTop = track.getPositionGlobalY();\r\n\r\n    var max = trackHeight - handleHeightHalf - 2;\r\n\r\n    var pos = Math.max(handleHeightHalf, Math.min(mouseY - trackTop, max)),\r\n        handlePos = pos - handleHeightHalf;\r\n\r\n    handle.setPositionY(handlePos);\r\n\r\n    var unitsMax = this._unitsMinMax[0],\r\n        unitsMin = this._unitsMinMax[1];\r\n\r\n    var normVal = (pos - handleHeightHalf) / (max - handleHeightHalf),\r\n        mappedVal = unitsMin + (unitsMax - unitsMin) * normVal;\r\n\r\n    this._units[1] = mappedVal;\r\n\r\n    this._plotGraph();\r\n};\r\n\r\nFunctionPlotter.prototype._onSliderXHandleDown = function () {\r\n    this._onSliderHandleDown(this._sliderXStep.bind(this));\r\n};\r\n\r\nFunctionPlotter.prototype._onSliderYHandleDown = function () {\r\n    this._onSliderHandleDown(this._sliderYStep.bind(this));\r\n};\r\n\r\nFunctionPlotter.prototype._onSliderHandleDown = function (sliderStepFunc) {\r\n    var eventMouseMove = DocumentEvent.MOUSE_MOVE,\r\n        eventMouseUp = DocumentEvent.MOUSE_UP;\r\n\r\n    var mouse = Mouse.get();\r\n\r\n    var onDrag = function () {\r\n            sliderStepFunc(mouse.getPosition())\r\n        },\r\n        onDragEnd = function () {\r\n            document.removeEventListener(eventMouseMove, onDrag, false);\r\n            document.removeEventListener(eventMouseUp, onDragEnd, false);\r\n        };\r\n\r\n    sliderStepFunc(mouse.getPosition());\r\n    document.addEventListener(eventMouseMove, onDrag, false);\r\n    document.addEventListener(eventMouseUp, onDragEnd, false);\r\n};\r\n\r\nFunctionPlotter.prototype._sliderXHandleUpdate = function () {\r\n    var unitMin = this._unitsMinMax[0],\r\n        unitMax = this._unitsMinMax[1],\r\n        unitX = this._units[0];\r\n\r\n    var handleX = this._sliderXHandle,\r\n        handleXWidth = handleX.getWidth(),\r\n        handleXWidthHalf = handleXWidth * 0.5,\r\n        trackXWidth = this._sliderXTrack.getWidth();\r\n\r\n    var strokeSize = Metric.STROKE_SIZE;\r\n\r\n    var handleXMin = handleXWidthHalf,\r\n        handleXMax = trackXWidth - handleXWidthHalf - strokeSize * 2;\r\n\r\n    handleX.setPositionX((handleXMin + (handleXMax - handleXMin) * ((unitX - unitMin) / (unitMax - unitMin))) - handleXWidthHalf);\r\n};\r\n\r\nFunctionPlotter.prototype._sliderYHandleUpdate = function () {\r\n    var unitMin = this._unitsMinMax[0],\r\n        unitMax = this._unitsMinMax[1],\r\n        unitY = this._units[1];\r\n\r\n    var handleY = this._sliderYHandle,\r\n        handleYHeight = handleY.getHeight(),\r\n        handleYHeightHalf = handleYHeight * 0.5,\r\n        trackYHeight = this._sliderYTrack.getHeight();\r\n\r\n    var strokeSize = Metric.STROKE_SIZE;\r\n\r\n    var handleYMin = trackYHeight - handleYHeightHalf - strokeSize * 2,\r\n        handleYMax = handleYHeightHalf;\r\n\r\n    handleY.setPositionY((handleYMin + (handleYMax - handleYMin) * ((unitY - unitMin) / (unitMax - unitMin))) - handleYHeightHalf);\r\n};\r\n\r\nmodule.exports = FunctionPlotter;"]},"metadata":{},"sourceType":"script"}