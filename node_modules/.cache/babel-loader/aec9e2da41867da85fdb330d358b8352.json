{"ast":null,"code":"import EventEmitter from 'events';\nimport * as THREE from 'three';\nimport browser from 'browser-detect';\nimport { passiveEvent } from '../../utils/event.utils.js';\nexport default class InteractiveControls extends EventEmitter {\n  get enabled() {\n    return this._enabled;\n  }\n\n  constructor(camera, el) {\n    super();\n    this.camera = camera;\n    this.el = el || window;\n    this.plane = new THREE.Plane();\n    this.raycaster = new THREE.Raycaster();\n    this.mouse = new THREE.Vector2();\n    this.offset = new THREE.Vector3();\n    this.intersection = new THREE.Vector3();\n    this.objects = [];\n    this.hovered = null;\n    this.selected = null;\n    this.isDown = false;\n    this.browser = browser();\n    this.enable();\n  }\n\n  enable() {\n    if (this.enabled) return;\n    this.addListeners();\n    this._enabled = true;\n  }\n\n  disable() {\n    if (!this.enabled) return;\n    this.removeListeners();\n    this._enabled = false;\n  }\n\n  addListeners() {\n    this.handlerDown = this.onDown.bind(this);\n    this.handlerMove = this.onMove.bind(this);\n    this.handlerUp = this.onUp.bind(this);\n    this.handlerLeave = this.onLeave.bind(this);\n\n    if (this.browser.mobile) {\n      this.el.addEventListener('touchstart', this.handlerDown, passiveEvent);\n      this.el.addEventListener('touchmove', this.handlerMove, passiveEvent);\n      this.el.addEventListener('touchend', this.handlerUp, passiveEvent);\n    } else {\n      this.el.addEventListener('mousedown', this.handlerDown);\n      this.el.addEventListener('mousemove', this.handlerMove);\n      this.el.addEventListener('mouseup', this.handlerUp);\n      this.el.addEventListener('mouseleave', this.handlerLeave);\n    }\n  }\n\n  removeListeners() {\n    if (this.browser.mobile) {\n      this.el.removeEventListener('touchstart', this.handlerDown);\n      this.el.removeEventListener('touchmove', this.handlerMove);\n      this.el.removeEventListener('touchend', this.handlerUp);\n    } else {\n      this.el.removeEventListener('mousedown', this.handlerDown);\n      this.el.removeEventListener('mousemove', this.handlerMove);\n      this.el.removeEventListener('mouseup', this.handlerUp);\n      this.el.removeEventListener('mouseleave', this.handlerLeave);\n    }\n  }\n\n  resize(x, y, width, height) {\n    if (x || y || width || height) {\n      this.rect = {\n        x,\n        y,\n        width,\n        height\n      };\n    } else if (this.el === window) {\n      this.rect = {\n        x: 0,\n        y: 0,\n        width: window.innerWidth,\n        height: window.innerHeight\n      };\n    } else {\n      this.rect = this.el.getBoundingClientRect();\n    }\n  }\n\n  onMove(e) {\n    const t = e.touches ? e.touches[0] : e;\n    const touch = {\n      x: t.clientX,\n      y: t.clientY\n    };\n    this.mouse.x = (touch.x + this.rect.x) / this.rect.width * 2 - 1;\n    this.mouse.y = -((touch.y + this.rect.y) / this.rect.height) * 2 + 1;\n    this.raycaster.setFromCamera(this.mouse, this.camera);\n    /*\n    // is dragging\n    if (this.selected && this.isDown) {\n    \tif (this.raycaster.ray.intersectPlane(this.plane, this.intersection)) {\n    \t\tthis.emit('interactive-drag', { object: this.selected, position: this.intersection.sub(this.offset) });\n    \t}\n    \treturn;\n    }\n    */\n\n    const intersects = this.raycaster.intersectObjects(this.objects);\n\n    if (intersects.length > 0) {\n      const object = intersects[0].object;\n      this.intersectionData = intersects[0];\n      this.plane.setFromNormalAndCoplanarPoint(this.camera.getWorldDirection(this.plane.normal), object.position);\n\n      if (this.hovered !== object) {\n        this.emit('interactive-out', {\n          object: this.hovered\n        });\n        this.emit('interactive-over', {\n          object\n        });\n        this.hovered = object;\n      } else {\n        this.emit('interactive-move', {\n          object,\n          intersectionData: this.intersectionData\n        });\n      }\n    } else {\n      this.intersectionData = null;\n\n      if (this.hovered !== null) {\n        this.emit('interactive-out', {\n          object: this.hovered\n        });\n        this.hovered = null;\n      }\n    }\n  }\n\n  onDown(e) {\n    this.isDown = true;\n    this.onMove(e);\n    this.emit('interactive-down', {\n      object: this.hovered,\n      previous: this.selected,\n      intersectionData: this.intersectionData\n    });\n    this.selected = this.hovered;\n\n    if (this.selected) {\n      if (this.raycaster.ray.intersectPlane(this.plane, this.intersection)) {\n        this.offset.copy(this.intersection).sub(this.selected.position);\n      }\n    }\n  }\n\n  onUp(e) {\n    this.isDown = false;\n    this.emit('interactive-up', {\n      object: this.hovered\n    });\n  }\n\n  onLeave(e) {\n    this.onUp(e);\n    this.emit('interactive-out', {\n      object: this.hovered\n    });\n    this.hovered = null;\n  }\n\n}","map":{"version":3,"sources":["/Users/roaa/Desktop/demo/src/scripts/webgl/controls/InteractiveControls.js"],"names":["EventEmitter","THREE","browser","passiveEvent","InteractiveControls","enabled","_enabled","constructor","camera","el","window","plane","Plane","raycaster","Raycaster","mouse","Vector2","offset","Vector3","intersection","objects","hovered","selected","isDown","enable","addListeners","disable","removeListeners","handlerDown","onDown","bind","handlerMove","onMove","handlerUp","onUp","handlerLeave","onLeave","mobile","addEventListener","removeEventListener","resize","x","y","width","height","rect","innerWidth","innerHeight","getBoundingClientRect","e","t","touches","touch","clientX","clientY","setFromCamera","intersects","intersectObjects","length","object","intersectionData","setFromNormalAndCoplanarPoint","getWorldDirection","normal","position","emit","previous","ray","intersectPlane","copy","sub"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,QAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,SAASC,YAAT,QAA6B,4BAA7B;AAEA,eAAe,MAAMC,mBAAN,SAAkCJ,YAAlC,CAA+C;AAElD,MAAPK,OAAO,GAAG;AAAE,WAAO,KAAKC,QAAZ;AAAuB;;AAEvCC,EAAAA,WAAW,CAACC,MAAD,EAASC,EAAT,EAAa;AACvB;AAEA,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,EAAL,GAAUA,EAAE,IAAIC,MAAhB;AAEA,SAAKC,KAAL,GAAa,IAAIV,KAAK,CAACW,KAAV,EAAb;AACA,SAAKC,SAAL,GAAiB,IAAIZ,KAAK,CAACa,SAAV,EAAjB;AAEA,SAAKC,KAAL,GAAa,IAAId,KAAK,CAACe,OAAV,EAAb;AACA,SAAKC,MAAL,GAAc,IAAIhB,KAAK,CAACiB,OAAV,EAAd;AACA,SAAKC,YAAL,GAAoB,IAAIlB,KAAK,CAACiB,OAAV,EAApB;AAEA,SAAKE,OAAL,GAAe,EAAf;AACA,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKC,QAAL,GAAgB,IAAhB;AAEA,SAAKC,MAAL,GAAc,KAAd;AAEA,SAAKrB,OAAL,GAAeA,OAAO,EAAtB;AAEA,SAAKsB,MAAL;AACA;;AAEDA,EAAAA,MAAM,GAAG;AACR,QAAI,KAAKnB,OAAT,EAAkB;AAClB,SAAKoB,YAAL;AACA,SAAKnB,QAAL,GAAgB,IAAhB;AACA;;AAEDoB,EAAAA,OAAO,GAAG;AACT,QAAI,CAAC,KAAKrB,OAAV,EAAmB;AACnB,SAAKsB,eAAL;AACA,SAAKrB,QAAL,GAAgB,KAAhB;AACA;;AAEDmB,EAAAA,YAAY,GAAG;AACd,SAAKG,WAAL,GAAmB,KAAKC,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAnB;AACA,SAAKC,WAAL,GAAmB,KAAKC,MAAL,CAAYF,IAAZ,CAAiB,IAAjB,CAAnB;AACA,SAAKG,SAAL,GAAiB,KAAKC,IAAL,CAAUJ,IAAV,CAAe,IAAf,CAAjB;AACA,SAAKK,YAAL,GAAoB,KAAKC,OAAL,CAAaN,IAAb,CAAkB,IAAlB,CAApB;;AAEA,QAAI,KAAK5B,OAAL,CAAamC,MAAjB,EAAyB;AACxB,WAAK5B,EAAL,CAAQ6B,gBAAR,CAAyB,YAAzB,EAAuC,KAAKV,WAA5C,EAAyDzB,YAAzD;AACA,WAAKM,EAAL,CAAQ6B,gBAAR,CAAyB,WAAzB,EAAsC,KAAKP,WAA3C,EAAwD5B,YAAxD;AACA,WAAKM,EAAL,CAAQ6B,gBAAR,CAAyB,UAAzB,EAAqC,KAAKL,SAA1C,EAAqD9B,YAArD;AACA,KAJD,MAKK;AACJ,WAAKM,EAAL,CAAQ6B,gBAAR,CAAyB,WAAzB,EAAsC,KAAKV,WAA3C;AACA,WAAKnB,EAAL,CAAQ6B,gBAAR,CAAyB,WAAzB,EAAsC,KAAKP,WAA3C;AACA,WAAKtB,EAAL,CAAQ6B,gBAAR,CAAyB,SAAzB,EAAoC,KAAKL,SAAzC;AACA,WAAKxB,EAAL,CAAQ6B,gBAAR,CAAyB,YAAzB,EAAuC,KAAKH,YAA5C;AACA;AACD;;AAEDR,EAAAA,eAAe,GAAG;AACjB,QAAI,KAAKzB,OAAL,CAAamC,MAAjB,EAAyB;AACxB,WAAK5B,EAAL,CAAQ8B,mBAAR,CAA4B,YAA5B,EAA0C,KAAKX,WAA/C;AACA,WAAKnB,EAAL,CAAQ8B,mBAAR,CAA4B,WAA5B,EAAyC,KAAKR,WAA9C;AACA,WAAKtB,EAAL,CAAQ8B,mBAAR,CAA4B,UAA5B,EAAwC,KAAKN,SAA7C;AACA,KAJD,MAKK;AACJ,WAAKxB,EAAL,CAAQ8B,mBAAR,CAA4B,WAA5B,EAAyC,KAAKX,WAA9C;AACA,WAAKnB,EAAL,CAAQ8B,mBAAR,CAA4B,WAA5B,EAAyC,KAAKR,WAA9C;AACA,WAAKtB,EAAL,CAAQ8B,mBAAR,CAA4B,SAA5B,EAAuC,KAAKN,SAA5C;AACA,WAAKxB,EAAL,CAAQ8B,mBAAR,CAA4B,YAA5B,EAA0C,KAAKJ,YAA/C;AACA;AACD;;AAEDK,EAAAA,MAAM,CAACC,CAAD,EAAIC,CAAJ,EAAOC,KAAP,EAAcC,MAAd,EAAsB;AAC3B,QAAIH,CAAC,IAAIC,CAAL,IAAUC,KAAV,IAAmBC,MAAvB,EAA+B;AAC9B,WAAKC,IAAL,GAAY;AAAEJ,QAAAA,CAAF;AAAKC,QAAAA,CAAL;AAAQC,QAAAA,KAAR;AAAeC,QAAAA;AAAf,OAAZ;AACA,KAFD,MAGK,IAAI,KAAKnC,EAAL,KAAYC,MAAhB,EAAwB;AAC5B,WAAKmC,IAAL,GAAY;AAAEJ,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE,CAAX;AAAcC,QAAAA,KAAK,EAAEjC,MAAM,CAACoC,UAA5B;AAAwCF,QAAAA,MAAM,EAAElC,MAAM,CAACqC;AAAvD,OAAZ;AACA,KAFI,MAGA;AACJ,WAAKF,IAAL,GAAY,KAAKpC,EAAL,CAAQuC,qBAAR,EAAZ;AACA;AACD;;AAEDhB,EAAAA,MAAM,CAACiB,CAAD,EAAI;AACT,UAAMC,CAAC,GAAID,CAAC,CAACE,OAAH,GAAcF,CAAC,CAACE,OAAF,CAAU,CAAV,CAAd,GAA6BF,CAAvC;AACA,UAAMG,KAAK,GAAG;AAAEX,MAAAA,CAAC,EAAES,CAAC,CAACG,OAAP;AAAgBX,MAAAA,CAAC,EAAEQ,CAAC,CAACI;AAArB,KAAd;AAEA,SAAKvC,KAAL,CAAW0B,CAAX,GAAgB,CAACW,KAAK,CAACX,CAAN,GAAU,KAAKI,IAAL,CAAUJ,CAArB,IAA0B,KAAKI,IAAL,CAAUF,KAArC,GAA8C,CAA9C,GAAkD,CAAjE;AACA,SAAK5B,KAAL,CAAW2B,CAAX,GAAe,EAAE,CAACU,KAAK,CAACV,CAAN,GAAU,KAAKG,IAAL,CAAUH,CAArB,IAA0B,KAAKG,IAAL,CAAUD,MAAtC,IAAgD,CAAhD,GAAoD,CAAnE;AAEA,SAAK/B,SAAL,CAAe0C,aAAf,CAA6B,KAAKxC,KAAlC,EAAyC,KAAKP,MAA9C;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,UAAMgD,UAAU,GAAG,KAAK3C,SAAL,CAAe4C,gBAAf,CAAgC,KAAKrC,OAArC,CAAnB;;AAEA,QAAIoC,UAAU,CAACE,MAAX,GAAoB,CAAxB,EAA2B;AAC1B,YAAMC,MAAM,GAAGH,UAAU,CAAC,CAAD,CAAV,CAAcG,MAA7B;AACA,WAAKC,gBAAL,GAAwBJ,UAAU,CAAC,CAAD,CAAlC;AAEA,WAAK7C,KAAL,CAAWkD,6BAAX,CAAyC,KAAKrD,MAAL,CAAYsD,iBAAZ,CAA8B,KAAKnD,KAAL,CAAWoD,MAAzC,CAAzC,EAA2FJ,MAAM,CAACK,QAAlG;;AAEA,UAAI,KAAK3C,OAAL,KAAiBsC,MAArB,EAA6B;AAC5B,aAAKM,IAAL,CAAU,iBAAV,EAA6B;AAAEN,UAAAA,MAAM,EAAE,KAAKtC;AAAf,SAA7B;AACA,aAAK4C,IAAL,CAAU,kBAAV,EAA8B;AAAEN,UAAAA;AAAF,SAA9B;AACA,aAAKtC,OAAL,GAAesC,MAAf;AACA,OAJD,MAKK;AACJ,aAAKM,IAAL,CAAU,kBAAV,EAA8B;AAAEN,UAAAA,MAAF;AAAUC,UAAAA,gBAAgB,EAAE,KAAKA;AAAjC,SAA9B;AACA;AACD,KAdD,MAeK;AACJ,WAAKA,gBAAL,GAAwB,IAAxB;;AAEA,UAAI,KAAKvC,OAAL,KAAiB,IAArB,EAA2B;AAC1B,aAAK4C,IAAL,CAAU,iBAAV,EAA6B;AAAEN,UAAAA,MAAM,EAAE,KAAKtC;AAAf,SAA7B;AACA,aAAKA,OAAL,GAAe,IAAf;AACA;AACD;AACD;;AAEDQ,EAAAA,MAAM,CAACoB,CAAD,EAAI;AACT,SAAK1B,MAAL,GAAc,IAAd;AACA,SAAKS,MAAL,CAAYiB,CAAZ;AAEA,SAAKgB,IAAL,CAAU,kBAAV,EAA8B;AAAEN,MAAAA,MAAM,EAAE,KAAKtC,OAAf;AAAwB6C,MAAAA,QAAQ,EAAE,KAAK5C,QAAvC;AAAiDsC,MAAAA,gBAAgB,EAAE,KAAKA;AAAxE,KAA9B;AACA,SAAKtC,QAAL,GAAgB,KAAKD,OAArB;;AAEA,QAAI,KAAKC,QAAT,EAAmB;AAClB,UAAI,KAAKT,SAAL,CAAesD,GAAf,CAAmBC,cAAnB,CAAkC,KAAKzD,KAAvC,EAA8C,KAAKQ,YAAnD,CAAJ,EAAsE;AACrE,aAAKF,MAAL,CAAYoD,IAAZ,CAAiB,KAAKlD,YAAtB,EAAoCmD,GAApC,CAAwC,KAAKhD,QAAL,CAAc0C,QAAtD;AACA;AACD;AACD;;AAED9B,EAAAA,IAAI,CAACe,CAAD,EAAI;AACP,SAAK1B,MAAL,GAAc,KAAd;AAEA,SAAK0C,IAAL,CAAU,gBAAV,EAA4B;AAAEN,MAAAA,MAAM,EAAE,KAAKtC;AAAf,KAA5B;AACA;;AAEDe,EAAAA,OAAO,CAACa,CAAD,EAAI;AACV,SAAKf,IAAL,CAAUe,CAAV;AAEA,SAAKgB,IAAL,CAAU,iBAAV,EAA6B;AAAEN,MAAAA,MAAM,EAAE,KAAKtC;AAAf,KAA7B;AACA,SAAKA,OAAL,GAAe,IAAf;AACA;;AA5J4D","sourcesContent":["import EventEmitter from 'events';\nimport * as THREE from 'three';\nimport browser from 'browser-detect';\n\nimport { passiveEvent } from '../../utils/event.utils.js';\n\nexport default class InteractiveControls extends EventEmitter {\n\n\tget enabled() { return this._enabled; }\n\n\tconstructor(camera, el) {\n\t\tsuper();\n\n\t\tthis.camera = camera;\n\t\tthis.el = el || window;\n\n\t\tthis.plane = new THREE.Plane();\n\t\tthis.raycaster = new THREE.Raycaster();\n\n\t\tthis.mouse = new THREE.Vector2();\n\t\tthis.offset = new THREE.Vector3();\n\t\tthis.intersection = new THREE.Vector3();\n\t\t\n\t\tthis.objects = [];\n\t\tthis.hovered = null;\n\t\tthis.selected = null;\n\n\t\tthis.isDown = false;\n\n\t\tthis.browser = browser();\n\n\t\tthis.enable();\n\t}\n\n\tenable() {\n\t\tif (this.enabled) return;\n\t\tthis.addListeners();\n\t\tthis._enabled = true;\n\t}\n\n\tdisable() {\n\t\tif (!this.enabled) return;\n\t\tthis.removeListeners();\n\t\tthis._enabled = false;\n\t}\n\n\taddListeners() {\n\t\tthis.handlerDown = this.onDown.bind(this);\n\t\tthis.handlerMove = this.onMove.bind(this);\n\t\tthis.handlerUp = this.onUp.bind(this);\n\t\tthis.handlerLeave = this.onLeave.bind(this);\n\n\t\tif (this.browser.mobile) {\n\t\t\tthis.el.addEventListener('touchstart', this.handlerDown, passiveEvent);\n\t\t\tthis.el.addEventListener('touchmove', this.handlerMove, passiveEvent);\n\t\t\tthis.el.addEventListener('touchend', this.handlerUp, passiveEvent);\n\t\t}\n\t\telse {\n\t\t\tthis.el.addEventListener('mousedown', this.handlerDown);\n\t\t\tthis.el.addEventListener('mousemove', this.handlerMove);\n\t\t\tthis.el.addEventListener('mouseup', this.handlerUp);\n\t\t\tthis.el.addEventListener('mouseleave', this.handlerLeave);\n\t\t}\n\t}\n\n\tremoveListeners() {\n\t\tif (this.browser.mobile) {\n\t\t\tthis.el.removeEventListener('touchstart', this.handlerDown);\n\t\t\tthis.el.removeEventListener('touchmove', this.handlerMove);\n\t\t\tthis.el.removeEventListener('touchend', this.handlerUp);\n\t\t}\n\t\telse {\n\t\t\tthis.el.removeEventListener('mousedown', this.handlerDown);\n\t\t\tthis.el.removeEventListener('mousemove', this.handlerMove);\n\t\t\tthis.el.removeEventListener('mouseup', this.handlerUp);\n\t\t\tthis.el.removeEventListener('mouseleave', this.handlerLeave);\n\t\t}\n\t}\n\n\tresize(x, y, width, height) {\n\t\tif (x || y || width || height) {\n\t\t\tthis.rect = { x, y, width, height };\n\t\t}\n\t\telse if (this.el === window) {\n\t\t\tthis.rect = { x: 0, y: 0, width: window.innerWidth, height: window.innerHeight };\n\t\t}\n\t\telse {\n\t\t\tthis.rect = this.el.getBoundingClientRect();\n\t\t}\n\t}\n\n\tonMove(e) {\n\t\tconst t = (e.touches) ? e.touches[0] : e;\n\t\tconst touch = { x: t.clientX, y: t.clientY };\n\n\t\tthis.mouse.x = ((touch.x + this.rect.x) / this.rect.width) * 2 - 1;\n\t\tthis.mouse.y = -((touch.y + this.rect.y) / this.rect.height) * 2 + 1;\n\n\t\tthis.raycaster.setFromCamera(this.mouse, this.camera);\n\n\t\t/*\n\t\t// is dragging\n\t\tif (this.selected && this.isDown) {\n\t\t\tif (this.raycaster.ray.intersectPlane(this.plane, this.intersection)) {\n\t\t\t\tthis.emit('interactive-drag', { object: this.selected, position: this.intersection.sub(this.offset) });\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t*/\n\n\t\tconst intersects = this.raycaster.intersectObjects(this.objects);\n\n\t\tif (intersects.length > 0) {\n\t\t\tconst object = intersects[0].object;\n\t\t\tthis.intersectionData = intersects[0];\n\n\t\t\tthis.plane.setFromNormalAndCoplanarPoint(this.camera.getWorldDirection(this.plane.normal), object.position);\n\n\t\t\tif (this.hovered !== object) {\n\t\t\t\tthis.emit('interactive-out', { object: this.hovered });\n\t\t\t\tthis.emit('interactive-over', { object });\n\t\t\t\tthis.hovered = object;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.emit('interactive-move', { object, intersectionData: this.intersectionData });\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.intersectionData = null;\n\n\t\t\tif (this.hovered !== null) {\n\t\t\t\tthis.emit('interactive-out', { object: this.hovered });\n\t\t\t\tthis.hovered = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tonDown(e) {\n\t\tthis.isDown = true;\n\t\tthis.onMove(e);\n\n\t\tthis.emit('interactive-down', { object: this.hovered, previous: this.selected, intersectionData: this.intersectionData });\n\t\tthis.selected = this.hovered;\n\n\t\tif (this.selected) {\n\t\t\tif (this.raycaster.ray.intersectPlane(this.plane, this.intersection)) {\n\t\t\t\tthis.offset.copy(this.intersection).sub(this.selected.position);\n\t\t\t}\n\t\t}\n\t}\n\n\tonUp(e) {\n\t\tthis.isDown = false;\n\n\t\tthis.emit('interactive-up', { object: this.hovered });\n\t}\n\n\tonLeave(e) {\n\t\tthis.onUp(e);\n\t\t\n\t\tthis.emit('interactive-out', { object: this.hovered });\n\t\tthis.hovered = null;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}