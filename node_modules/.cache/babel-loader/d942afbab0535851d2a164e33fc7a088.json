{"ast":null,"code":"var Node = require('../core/document/Node');\n\nvar CSS = require('../core/document/CSS');\n\nvar NumberInput_Internal = require('./NumberInput_Internal');\n\nvar Mouse = require('../core/document/Mouse');\n\nvar ColorUtil = require('../core/color/ColorUtil');\n\nvar DocumentEvent = require('../core/document/DocumentEvent'),\n    NodeEvent = require('../core/document/NodeEvent');\n\nvar DEFAULT_VALUE_HUE = 200.0,\n    DEFAULT_VALUE_SAT = 50.0,\n    DEFAULT_VALUE_VAL = 50.0;\n\nfunction Picker(parentNode) {\n  var root = this._node = new Node().setStyleClass(CSS.Picker),\n      head = this._headNode = new Node().setStyleClass(CSS.Head),\n      labelWrap = new Node().setStyleClass(CSS.Wrap),\n      label = new Node().setStyleClass(CSS.Label),\n      menu = new Node().setStyleClass(CSS.Menu),\n      menuWrap = new Node().setStyleClass(CSS.Wrap);\n  var menuClose = new Node(Node.INPUT_BUTTON);\n  menuClose.setStyleClass(CSS.ButtonMenuClose);\n  var fieldWrap = new Node().setStyleClass(CSS.PickerFieldWrap),\n      sliderWrap = new Node().setStyleClass(CSS.SliderWrap),\n      inputWrap = new Node().setStyleClass(CSS.PickerInputWrap);\n  var canvasField = this._canvasField = document.createElement('canvas'),\n      canvasSlider = this._canvasSlider = document.createElement('canvas');\n  fieldWrap.getElement().appendChild(canvasField);\n  sliderWrap.getElement().appendChild(canvasSlider);\n\n  this._setSizeCanvasField(154, 154);\n\n  this._setSizeCanvasSlider(14, 154);\n\n  var contextCanvasField = this._contextCanvasField = canvasField.getContext('2d'),\n      contextCanvasSlider = this._contextCanvasSlider = canvasSlider.getContext('2d');\n  var handleField = this._handleField = new Node();\n  handleField.setStyleClass(CSS.PickerHandleField);\n  var handleSlider = this._handleSlider = new Node();\n  handleSlider.setStyleClass(CSS.PickerHandleSlider);\n  var step = 1.0,\n      dp = 0;\n\n  var callbackHue = this._onInputHueChange.bind(this),\n      callbackSat = this._onInputSatChange.bind(this),\n      callbackVal = this._onInputValChange.bind(this),\n      callbackR = this._onInputRChange.bind(this),\n      callbackG = this._onInputGChange.bind(this),\n      callbackB = this._onInputBChange.bind(this);\n\n  var inputHue = this._inputHue = new NumberInput_Internal(step, dp, null, callbackHue),\n      inputSat = this._inputSat = new NumberInput_Internal(step, dp, null, callbackSat),\n      inputVal = this._inputVal = new NumberInput_Internal(step, dp, null, callbackVal),\n      inputR = this._inputR = new NumberInput_Internal(step, dp, null, callbackR),\n      inputG = this._inputG = new NumberInput_Internal(step, dp, null, callbackG),\n      inputB = this._inputB = new NumberInput_Internal(step, dp, null, callbackB);\n  var controlsWrap = new Node().setStyleClass(CSS.PickerControlsWrap);\n  var buttonPick = new Node(Node.INPUT_BUTTON).setStyleClass(CSS.Button).setProperty('value', 'pick'),\n      buttonCancel = new Node(Node.INPUT_BUTTON).setStyleClass(CSS.Button).setProperty('value', 'cancel');\n  var colorContrast = new Node().setStyleClass(CSS.PickerColorContrast);\n  var color0 = this._colorCurrNode = new Node(),\n      color1 = this._colorPrevNode = new Node();\n  colorContrast.addChild(color0);\n  colorContrast.addChild(color1);\n  controlsWrap.addChild(buttonCancel);\n  controlsWrap.addChild(buttonPick);\n  controlsWrap.addChild(colorContrast);\n\n  this._setContrasPrevColor(0, 0, 0);\n\n  var inputFieldWrapHue = new Node().setStyleClass(CSS.PickerInputField),\n      inputFieldWrapSat = new Node().setStyleClass(CSS.PickerInputField),\n      inputFieldWrapVal = new Node().setStyleClass(CSS.PickerInputField);\n  var inputFieldWrapHueLabel = new Node(Node.SPAN).setStyleClass(CSS.Label).setProperty('innerHTML', 'H'),\n      inputFieldWrapSatLabel = new Node(Node.SPAN).setStyleClass(CSS.Label).setProperty('innerHTML', 'S'),\n      inputFieldWrapValLabel = new Node(Node.SPAN).setStyleClass(CSS.Label).setProperty('innerHTML', 'V');\n  inputFieldWrapHue.addChildren(inputFieldWrapHueLabel, inputHue.getNode());\n  inputFieldWrapSat.addChildren(inputFieldWrapSatLabel, inputSat.getNode());\n  inputFieldWrapVal.addChildren(inputFieldWrapValLabel, inputVal.getNode());\n  var inputFieldWrapR = new Node().setStyleClass(CSS.PickerInputField),\n      inputFieldWrapG = new Node().setStyleClass(CSS.PickerInputField),\n      inputFieldWrapB = new Node().setStyleClass(CSS.PickerInputField);\n  var inputFieldWrapRLabel = new Node(Node.SPAN).setStyleClass(CSS.Label).setProperty('innerHTML', 'R'),\n      inputFieldWrapGLabel = new Node(Node.SPAN).setStyleClass(CSS.Label).setProperty('innerHTML', 'G'),\n      inputFieldWrapBLabel = new Node(Node.SPAN).setStyleClass(CSS.Label).setProperty('innerHTML', 'B');\n  inputFieldWrapR.addChildren(inputFieldWrapRLabel, inputR.getNode());\n  inputFieldWrapG.addChildren(inputFieldWrapGLabel, inputG.getNode());\n  inputFieldWrapB.addChildren(inputFieldWrapBLabel, inputB.getNode());\n  inputWrap.addChildren(inputFieldWrapR, inputFieldWrapHue, inputFieldWrapG, inputFieldWrapSat, inputFieldWrapB, inputFieldWrapVal, colorContrast);\n  var hexInputWrap = new Node();\n  hexInputWrap.setStyleClass(CSS.PickerInputWrap);\n  var inputHEX = this._inputHEX = new Node(Node.INPUT_TEXT),\n      inputFieldWrapHEX = new Node().setStyleClass(CSS.PickerInputField),\n      inputFieldWrapHEXLabel = new Node(Node.SPAN).setStyleClass(CSS.Label);\n  inputFieldWrapHEXLabel.setProperty('innerHTML', '#');\n  inputFieldWrapHEX.addChildren(inputFieldWrapHEXLabel, inputHEX);\n  hexInputWrap.addChild(inputFieldWrapHEX);\n  inputHEX.addEventListener(NodeEvent.CHANGE, this._onInputHEXFinish.bind(this));\n  label.setProperty('innerHTML', 'Color Picker');\n  menu.addChild(menuClose);\n  head.addChild(menu);\n  labelWrap.addChild(label);\n  head.addChild(labelWrap);\n  root.addChild(head);\n  root.addChild(menuWrap); //wrapNode.addChild(paletteWrap);\n\n  menuWrap.addChild(fieldWrap);\n  menuWrap.addChild(sliderWrap);\n  menuWrap.addChild(inputWrap);\n  menuWrap.addChild(hexInputWrap);\n  menuWrap.addChild(controlsWrap);\n  fieldWrap.addChild(handleField);\n  sliderWrap.addChild(handleSlider);\n\n  var eventMouseDown = NodeEvent.MOUSE_DOWN,\n      callback = this._onCanvasFieldMouseDown.bind(this);\n\n  fieldWrap.addEventListener(eventMouseDown, callback);\n  handleField.addEventListener(eventMouseDown, callback);\n  callback = this._onCanvasSliderMouseDown.bind(this);\n  sliderWrap.addEventListener(eventMouseDown, callback);\n  handleSlider.addEventListener(eventMouseDown, callback);\n  menuClose.addEventListener(eventMouseDown, this._onClose.bind(this));\n  buttonPick.addEventListener(eventMouseDown, this._onPick.bind(this));\n  buttonCancel.addEventListener(eventMouseDown, this._onClose.bind(this));\n  head.addEventListener(NodeEvent.MOUSE_DOWN, this._onHeadDragStart.bind(this));\n  this._parentNode = parentNode;\n  this._mouseOffset = [0, 0];\n  this._position = [null, null];\n  this._canvasSliderPos = [0, 0];\n  this._canvasFieldPos = [0, 0];\n  this._handleFieldSize = 12;\n  this._handleSliderHeight = 7;\n  this._imageDataSlider = contextCanvasSlider.createImageData(canvasSlider.width, canvasSlider.height);\n  this._imageDataField = contextCanvasField.createImageData(canvasField.width, canvasField.height);\n  this._valueHueMinMax = [0, 360];\n  this._valueSatMinMax = this._valueValMinMax = [0, 100];\n  this._valueRGBMinMax = [0, 255];\n  this._valueHue = DEFAULT_VALUE_HUE;\n  this._valueSat = DEFAULT_VALUE_SAT;\n  this._valueVal = DEFAULT_VALUE_VAL;\n  this._valueR = 0;\n  this._valueG = 0;\n  this._valueB = 0;\n  this._valueHEX = '#000000';\n  this._valueHEXValid = this._valueHEX;\n\n  this._callbackPick = function () {}; //this._canvasFieldImageDataFunc = function(i,j){return this._HSV2RGB(this._valueHue,j)}\n\n\n  this._drawCanvasField();\n\n  this._drawCanvasSlider();\n\n  this._setColorHSV(this._valueHue, this._valueSat, this._valueVal);\n\n  this._updateColorRGBFromHSV();\n\n  this._updateColorHEXFromRGB();\n\n  this._updateHandles();\n}\n\nPicker.prototype = {\n  _drawHandleField: function _drawHandleField() {\n    var canvas = this._canvasField,\n        nodePos = this._canvasFieldPos,\n        mousePos = Mouse.get().getPosition();\n    var posX = Math.max(0, Math.min(mousePos[0] - nodePos[0], canvas.width)),\n        posY = Math.max(0, Math.min(mousePos[1] - nodePos[1], canvas.height)),\n        posXNorm = posX / canvas.width,\n        posYNorm = posY / canvas.height;\n    var sat = Math.round(posXNorm * this._valueSatMinMax[1]),\n        val = Math.round((1.0 - posYNorm) * this._valueValMinMax[1]);\n\n    this._setColorHSV(this._valueHue, sat, val);\n\n    this._updateColorRGBFromHSV();\n\n    this._updateColorHEXFromRGB();\n\n    this._updateHandleField();\n  },\n  _updateHandleField: function _updateHandleField() {\n    var width = this._canvasField.width,\n        height = this._canvasField.height,\n        offsetHandle = this._handleFieldSize * 0.25;\n    var satNorm = this._valueSat / this._valueSatMinMax[1],\n        valNorm = this._valueVal / this._valueValMinMax[1];\n\n    this._handleField.setPositionGlobal(satNorm * width - offsetHandle, (1.0 - valNorm) * height - offsetHandle);\n  },\n  _drawHandleSlider: function _drawHandleSlider() {\n    var canvas = this._canvasSlider,\n        canvasPosY = this._canvasSliderPos[1],\n        mousePosY = Mouse.get().getY();\n    var posY = Math.max(0, Math.min(mousePosY - canvasPosY, canvas.height)),\n        posYNorm = posY / canvas.height;\n    var hue = Math.floor((1.0 - posYNorm) * this._valueHueMinMax[1]);\n\n    this._setColorHSV(hue, this._valueSat, this._valueVal);\n\n    this._updateColorRGBFromHSV();\n\n    this._updateColorHEXFromRGB();\n\n    this._updateHandleSlider();\n  },\n  _updateHandleSlider: function _updateHandleSlider() {\n    var height = this._canvasSlider.height,\n        offsetHandle = this._handleSliderHeight * 0.25;\n    var hueNorm = this._valueHue / this._valueHueMinMax[1];\n\n    this._handleSlider.setPositionGlobalY((height - offsetHandle) * (1.0 - hueNorm));\n  },\n  _updateHandles: function _updateHandles() {\n    this._updateHandleField();\n\n    this._updateHandleSlider();\n  },\n\n  /*---------------------------------------------------------------------------------*/\n  _setHue: function _setHue(value) {\n    var minMax = this._valueHueMinMax;\n    this._valueHue = value == minMax[1] ? minMax[0] : value;\n\n    this._updateColorHSV();\n\n    this._drawCanvasField();\n  },\n  _setSat: function _setSat(value) {\n    this._valueSat = Math.round(value);\n\n    this._updateColorHSV();\n  },\n  _setVal: function _setVal(value) {\n    this._valueVal = Math.round(value);\n\n    this._updateColorHSV();\n  },\n  _setR: function _setR(value) {\n    this._valueR = Math.round(value);\n\n    this._updateColorRGB();\n  },\n  _setG: function _setG(value) {\n    this._valueG = Math.round(value);\n\n    this._updateColorRGB();\n  },\n  _setB: function _setB(value) {\n    this._valueB = Math.round(value);\n\n    this._updateColorRGB();\n  },\n\n  /*---------------------------------------------------------------------------------*/\n  _onInputHueChange: function _onInputHueChange() {\n    var input = this._inputHue,\n        inputVal = this._getValueContrained(input, this._valueHueMinMax);\n\n    var minMax = this._valueHueMinMax;\n\n    if (inputVal == minMax[1]) {\n      inputVal = minMax[0];\n      input.setValue(inputVal);\n    }\n\n    this._setHue(inputVal);\n\n    this._updateColorRGBFromHSV();\n\n    this._updateColorHEXFromRGB();\n\n    this._updateHandleSlider();\n\n    this._drawCanvasField();\n  },\n  _onInputSatChange: function _onInputSatChange() {\n    this._setSat(this._getValueContrained(this._inputSat, this._valueSatMinMax));\n\n    this._onInputSVChange();\n  },\n  _onInputValChange: function _onInputValChange() {\n    this._setVal(this._getValueContrained(this._inputVal, this._valueValMinMax));\n\n    this._onInputSVChange();\n  },\n  _onInputRChange: function _onInputRChange() {\n    this._setR(this._getValueContrained(this._inputR, this._valueRGBMinMax));\n\n    this._onInputRGBChange();\n  },\n  _onInputGChange: function _onInputGChange() {\n    this._setG(this._getValueContrained(this._inputG, this._valueRGBMinMax));\n\n    this._onInputRGBChange();\n  },\n  _onInputBChange: function _onInputBChange() {\n    this._setB(this._getValueContrained(this._inputB, this._valueRGBMinMax));\n\n    this._onInputRGBChange();\n  },\n  _onInputHEXFinish: function _onInputHEXFinish() {\n    var input = this._inputHEX,\n        value = input.getProperty('value');\n\n    if (!ColorUtil.isValidHEX(value)) {\n      input.setProperty('value', this._valueHEXValid);\n      return;\n    }\n\n    this._valueHEX = this._valueHEXValid = value;\n\n    this._updateColorFromHEX();\n  },\n  _onInputSVChange: function _onInputSVChange() {\n    this._updateColorRGBFromHSV();\n\n    this._updateColorHEXFromRGB();\n\n    this._updateHandleField();\n  },\n  _onInputRGBChange: function _onInputRGBChange() {\n    this._updateColorHSVFromRGB();\n\n    this._updateColorHEXFromRGB();\n\n    this._updateHandles();\n  },\n  _getValueContrained: function _getValueContrained(input, minMax) {\n    var inputVal = Math.round(input.getValue()),\n        min = minMax[0],\n        max = minMax[1];\n\n    if (inputVal <= min) {\n      inputVal = min;\n      input.setValue(inputVal);\n    }\n\n    if (inputVal >= max) {\n      inputVal = max;\n      input.setValue(inputVal);\n    }\n\n    return inputVal;\n  },\n  _updateInputHue: function _updateInputHue() {\n    this._inputHue.setValue(this._valueHue);\n  },\n  _updateInputSat: function _updateInputSat() {\n    this._inputSat.setValue(this._valueSat);\n  },\n  _updateInputVal: function _updateInputVal() {\n    this._inputVal.setValue(this._valueVal);\n  },\n  _updateInputR: function _updateInputR() {\n    this._inputR.setValue(this._valueR);\n  },\n  _updateInputG: function _updateInputG() {\n    this._inputG.setValue(this._valueG);\n  },\n  _updateInputB: function _updateInputB() {\n    this._inputB.setValue(this._valueB);\n  },\n  _updateInputHEX: function _updateInputHEX() {\n    this._inputHEX.setProperty('value', this._valueHEX);\n  },\n  _setColorHSV: function _setColorHSV(hue, sat, val) {\n    this._valueHue = hue;\n    this._valueSat = sat;\n    this._valueVal = val;\n\n    this._updateInputHue();\n\n    this._updateInputSat();\n\n    this._updateInputVal();\n\n    this._updateContrastCurrColor();\n  },\n  _setColorRGB: function _setColorRGB(r, g, b) {\n    this._valueR = r;\n    this._valueG = g;\n    this._valueB = b;\n\n    this._updateInputR();\n\n    this._updateInputG();\n\n    this._updateInputB();\n\n    this._updateContrastCurrColor();\n  },\n  _setColorHEX: function _setColorHEX(hex) {\n    this._valueHEX = hex;\n\n    this._updateInputHEX();\n  },\n  _updateColorHSV: function _updateColorHSV() {\n    this._setColorHSV(this._valueHue, this._valueSat, this._valueVal);\n\n    this._updateContrastCurrColor();\n  },\n  _updateColorRGB: function _updateColorRGB() {\n    this._setColorRGB(this._valueR, this._valueG, this._valueB);\n\n    this._updateContrastCurrColor();\n  },\n  _updateColorHSVFromRGB: function _updateColorHSVFromRGB() {\n    var hsv = ColorUtil.RGB2HSV(this._valueR, this._valueG, this._valueB);\n\n    this._setColorHSV(hsv[0], hsv[1], hsv[2]);\n  },\n  _updateColorRGBFromHSV: function _updateColorRGBFromHSV() {\n    var rgb = ColorUtil.HSV2RGB(this._valueHue, this._valueSat, this._valueVal);\n\n    this._setColorRGB(rgb[0], rgb[1], rgb[2]);\n  },\n  _updateColorHEXFromRGB: function _updateColorHEXFromRGB() {\n    var hex = ColorUtil.RGB2HEX(this._valueR, this._valueG, this._valueB);\n\n    this._setColorHEX(hex);\n  },\n  _updateColorFromHEX: function _updateColorFromHEX() {\n    var rgb = ColorUtil.HEX2RGB(this._valueHEX);\n\n    this._setColorRGB(rgb[0], rgb[1], rgb[2]);\n\n    this._updateColorHSVFromRGB();\n\n    this._updateHandles();\n  },\n  _updateContrastCurrColor: function _updateContrastCurrColor() {\n    this._setContrastCurrColor(this._valueR, this._valueG, this._valueB);\n  },\n  _updateContrastPrevColor: function _updateContrastPrevColor() {\n    this._setContrasPrevColor(this._valueR, this._valueG, this._valueB);\n  },\n  _setContrastCurrColor: function _setContrastCurrColor(r, g, b) {\n    this._colorCurrNode.setStyleProperty('background', 'rgb(' + r + ',' + g + ',' + b + ')');\n  },\n  _setContrasPrevColor: function _setContrasPrevColor(r, g, b) {\n    this._colorPrevNode.setStyleProperty('background', 'rgb(' + r + ',' + g + ',' + b + ')');\n  },\n  _onHeadDragStart: function _onHeadDragStart() {\n    var node = this._node,\n        parentNode = this._parentNode;\n    var nodePos = node.getPositionGlobal(),\n        mousePos = Mouse.get().getPosition(),\n        offsetPos = this._mouseOffset;\n    offsetPos[0] = mousePos[0] - nodePos[0];\n    offsetPos[1] = mousePos[1] - nodePos[1];\n    var eventMouseMove = DocumentEvent.MOUSE_MOVE,\n        eventMouseUp = DocumentEvent.MOUSE_UP;\n    var self = this;\n\n    var onDrag = function onDrag() {\n      self._updatePosition();\n\n      self._updateCanvasNodePositions();\n    },\n        onDragEnd = function onDragEnd() {\n      self._updateCanvasNodePositions();\n\n      document.removeEventListener(eventMouseMove, onDrag, false);\n      document.removeEventListener(eventMouseUp, onDragEnd, false);\n    };\n\n    parentNode.removeChild(node);\n    parentNode.addChild(node);\n    document.addEventListener(eventMouseMove, onDrag, false);\n    document.addEventListener(eventMouseUp, onDragEnd, false);\n\n    this._updateCanvasNodePositions();\n  },\n  _updatePosition: function _updatePosition() {\n    var mousePos = Mouse.get().getPosition(),\n        offsetPos = this._mouseOffset;\n    var currPositionX = mousePos[0] - offsetPos[0],\n        currPositionY = mousePos[1] - offsetPos[1];\n    var node = this._node,\n        head = this._headNode,\n        position = this._position;\n    var maxX = window.innerWidth - node.getWidth(),\n        maxY = window.innerHeight - head.getHeight();\n    position[0] = Math.max(0, Math.min(currPositionX, maxX));\n    position[1] = Math.max(0, Math.min(currPositionY, maxY));\n    node.setPositionGlobal(position[0], position[1]);\n  },\n  _drawCanvasField: function _drawCanvasField() {\n    var canvas = this._canvasField,\n        context = this._contextCanvasField;\n    var width = canvas.width,\n        height = canvas.height,\n        invWidth = 1 / width,\n        invHeight = 1 / height;\n    var imageData = this._imageDataField,\n        rgb = [],\n        index = 0;\n    var valueHue = this._valueHue;\n    var i = -1,\n        j;\n\n    while (++i < height) {\n      j = -1;\n\n      while (++j < width) {\n        rgb = ColorUtil.HSV2RGB(valueHue, j * invWidth * 100.0, (1.0 - i * invHeight) * 100.0);\n        index = (i * width + j) * 4;\n        imageData.data[index] = rgb[0];\n        imageData.data[index + 1] = rgb[1];\n        imageData.data[index + 2] = rgb[2];\n        imageData.data[index + 3] = 255;\n      }\n    }\n\n    context.putImageData(imageData, 0, 0);\n  },\n  _drawCanvasSlider: function _drawCanvasSlider() {\n    var canvas = this._canvasSlider,\n        context = this._contextCanvasSlider;\n    var width = canvas.width,\n        height = canvas.height,\n        invHeight = 1 / height;\n    var imageData = this._imageDataSlider,\n        rgb = [],\n        index = 0;\n    var i = -1,\n        j;\n\n    while (++i < height) {\n      j = -1;\n\n      while (++j < width) {\n        rgb = ColorUtil.HSV2RGB((1.0 - i * invHeight) * 360.0, 100.0, 100.0);\n        index = (i * width + j) * 4;\n        imageData.data[index] = rgb[0];\n        imageData.data[index + 1] = rgb[1];\n        imageData.data[index + 2] = rgb[2];\n        imageData.data[index + 3] = 255;\n      }\n    }\n\n    context.putImageData(imageData, 0, 0);\n  },\n  _onCanvasFieldMouseDown: function _onCanvasFieldMouseDown() {\n    var eventMouseMove = DocumentEvent.MOUSE_MOVE,\n        eventMouseUp = DocumentEvent.MOUSE_UP;\n    var self = this;\n\n    var onDrag = function onDrag() {\n      self._drawHandleField();\n    },\n        onDragEnd = function onDragEnd() {\n      document.removeEventListener(eventMouseMove, onDrag, false);\n      document.removeEventListener(eventMouseUp, onDragEnd, false);\n    };\n\n    document.addEventListener(eventMouseMove, onDrag, false);\n    document.addEventListener(eventMouseUp, onDragEnd, false);\n\n    self._drawHandleField();\n  },\n  _onCanvasSliderMouseDown: function _onCanvasSliderMouseDown() {\n    var eventMouseMove = DocumentEvent.MOUSE_MOVE,\n        eventMouseUp = DocumentEvent.MOUSE_UP;\n    var self = this;\n\n    var onDrag = function onDrag() {\n      self._drawHandleSlider();\n\n      self._drawCanvasField();\n    },\n        onDragEnd = function onDragEnd() {\n      document.removeEventListener(eventMouseMove, onDrag, false);\n      document.removeEventListener(eventMouseUp, onDragEnd, false);\n\n      self._drawCanvasField();\n    };\n\n    document.addEventListener(eventMouseMove, onDrag, false);\n    document.addEventListener(eventMouseUp, onDragEnd, false);\n\n    self._drawHandleSlider();\n\n    self._drawCanvasField();\n  },\n  _setSizeCanvasField: function _setSizeCanvasField(width, height) {\n    var canvas = this._canvasField;\n    canvas.style.width = width + 'px';\n    canvas.style.height = height + 'px';\n    canvas.width = width;\n    canvas.height = height;\n  },\n  _setSizeCanvasSlider: function _setSizeCanvasSlider(width, height) {\n    var canvas = this._canvasSlider;\n    canvas.style.width = width + 'px';\n    canvas.style.height = height + 'px';\n    canvas.width = width;\n    canvas.height = height;\n  },\n  open: function open() {\n    var node = this._node;\n\n    this._parentNode.addChild(node);\n\n    var position = this._position;\n\n    if (position[0] === null || position[1] === null) {\n      position[0] = window.innerWidth * 0.5 - node.getWidth() * 0.5;\n      position[1] = window.innerHeight * 0.5 - node.getHeight() * 0.5;\n    } else {\n      position[0] = Math.max(0, Math.min(position[0], window.innerWidth - node.getWidth()));\n      position[1] = Math.max(0, Math.min(position[1], window.innerHeight - node.getHeight()));\n    }\n\n    node.setPositionGlobal(position[0], position[1]);\n\n    this._updateCanvasNodePositions();\n  },\n  close: function close() {\n    this._parentNode.removeChild(this._node);\n  },\n  _onClose: function _onClose(e) {\n    e.cancelBubble = true;\n    this.close();\n  },\n  _onPick: function _onPick() {\n    this._callbackPick();\n\n    this.close();\n  },\n  _updateCanvasNodePositions: function _updateCanvasNodePositions() {\n    var canvasSliderPos = this._canvasSliderPos,\n        canvasFieldPos = this._canvasFieldPos;\n    canvasSliderPos[0] = canvasSliderPos[1] = 0;\n    canvasFieldPos[0] = canvasFieldPos[1] = 0;\n    var element = this._canvasSlider;\n\n    while (element) {\n      canvasSliderPos[0] += element.offsetLeft;\n      canvasSliderPos[1] += element.offsetTop;\n      element = element.offsetParent;\n    }\n\n    element = this._canvasField;\n\n    while (element) {\n      canvasFieldPos[0] += element.offsetLeft;\n      canvasFieldPos[1] += element.offsetTop;\n      element = element.offsetParent;\n    }\n  },\n  setCallbackPick: function setCallbackPick(func) {\n    this._callbackPick = func;\n  },\n  setColorHEX: function setColorHEX(hex) {\n    this._setColorHEX(hex);\n\n    this._updateColorFromHEX();\n\n    this._setColor();\n  },\n  setColorRGB: function setColorRGB(r, g, b) {\n    this._setColorRGB(r, g, b);\n\n    this._updateColorHEXFromRGB();\n\n    this._updateColorHSVFromRGB();\n\n    this._setColor();\n  },\n  setColorRGBfv: function setColorRGBfv(r, g, b) {\n    this.setColorRGB(Math.floor(r * 255.0), Math.floor(g * 255.0), Math.floor(b * 255.0));\n  },\n  setColorHSV: function setColorHSV(h, s, v) {\n    this._setColorHSV(h, s, v);\n\n    this._updateColorRGBFromHSV();\n\n    this._updateColorHEXFromRGB();\n\n    this._setColor();\n  },\n  _setColor: function _setColor() {\n    this._drawCanvasField();\n\n    this._drawCanvasSlider();\n\n    this._updateHandles();\n\n    this._setContrasPrevColor(this._valueR, this._valueG, this._valueB);\n  },\n  getR: function getR() {\n    return this._valueR;\n  },\n  getG: function getG() {\n    return this._valueG;\n  },\n  getB: function getB() {\n    return this._valueB;\n  },\n  getRGB: function getRGB() {\n    return [this._valueR, this._valueG, this._valueB];\n  },\n  getHue: function getHue() {\n    return this._valueHue;\n  },\n  getSat: function getSat() {\n    return this._valueSat;\n  },\n  getVal: function getVal() {\n    return this._valueVal;\n  },\n  getHSV: function getHSV() {\n    return [this._valueHue, this._valueSat, this._valueVal];\n  },\n  getHEX: function getHEX() {\n    return this._valueHEX;\n  },\n  getRGBfv: function getRGBfv() {\n    return [this._valueR / 255.0, this._valueG / 255.0, this._valueB / 255.0];\n  },\n  getNode: function getNode() {\n    return this._node;\n  }\n};\n\nPicker.setup = function (parentNode) {\n  return Picker._instance = new Picker(parentNode);\n};\n\nPicker.get = function () {\n  return Picker._instance;\n};\n\nPicker.destroy = function () {\n  Picker._instance = null;\n};\n\nmodule.exports = Picker;","map":{"version":3,"sources":["/Users/roaa/Desktop/demo/node_modules/@brunoimbrizi/controlkit/lib/component/Picker.js"],"names":["Node","require","CSS","NumberInput_Internal","Mouse","ColorUtil","DocumentEvent","NodeEvent","DEFAULT_VALUE_HUE","DEFAULT_VALUE_SAT","DEFAULT_VALUE_VAL","Picker","parentNode","root","_node","setStyleClass","head","_headNode","Head","labelWrap","Wrap","label","Label","menu","Menu","menuWrap","menuClose","INPUT_BUTTON","ButtonMenuClose","fieldWrap","PickerFieldWrap","sliderWrap","SliderWrap","inputWrap","PickerInputWrap","canvasField","_canvasField","document","createElement","canvasSlider","_canvasSlider","getElement","appendChild","_setSizeCanvasField","_setSizeCanvasSlider","contextCanvasField","_contextCanvasField","getContext","contextCanvasSlider","_contextCanvasSlider","handleField","_handleField","PickerHandleField","handleSlider","_handleSlider","PickerHandleSlider","step","dp","callbackHue","_onInputHueChange","bind","callbackSat","_onInputSatChange","callbackVal","_onInputValChange","callbackR","_onInputRChange","callbackG","_onInputGChange","callbackB","_onInputBChange","inputHue","_inputHue","inputSat","_inputSat","inputVal","_inputVal","inputR","_inputR","inputG","_inputG","inputB","_inputB","controlsWrap","PickerControlsWrap","buttonPick","Button","setProperty","buttonCancel","colorContrast","PickerColorContrast","color0","_colorCurrNode","color1","_colorPrevNode","addChild","_setContrasPrevColor","inputFieldWrapHue","PickerInputField","inputFieldWrapSat","inputFieldWrapVal","inputFieldWrapHueLabel","SPAN","inputFieldWrapSatLabel","inputFieldWrapValLabel","addChildren","getNode","inputFieldWrapR","inputFieldWrapG","inputFieldWrapB","inputFieldWrapRLabel","inputFieldWrapGLabel","inputFieldWrapBLabel","hexInputWrap","inputHEX","_inputHEX","INPUT_TEXT","inputFieldWrapHEX","inputFieldWrapHEXLabel","addEventListener","CHANGE","_onInputHEXFinish","eventMouseDown","MOUSE_DOWN","callback","_onCanvasFieldMouseDown","_onCanvasSliderMouseDown","_onClose","_onPick","_onHeadDragStart","_parentNode","_mouseOffset","_position","_canvasSliderPos","_canvasFieldPos","_handleFieldSize","_handleSliderHeight","_imageDataSlider","createImageData","width","height","_imageDataField","_valueHueMinMax","_valueSatMinMax","_valueValMinMax","_valueRGBMinMax","_valueHue","_valueSat","_valueVal","_valueR","_valueG","_valueB","_valueHEX","_valueHEXValid","_callbackPick","_drawCanvasField","_drawCanvasSlider","_setColorHSV","_updateColorRGBFromHSV","_updateColorHEXFromRGB","_updateHandles","prototype","_drawHandleField","canvas","nodePos","mousePos","get","getPosition","posX","Math","max","min","posY","posXNorm","posYNorm","sat","round","val","_updateHandleField","offsetHandle","satNorm","valNorm","setPositionGlobal","_drawHandleSlider","canvasPosY","mousePosY","getY","hue","floor","_updateHandleSlider","hueNorm","setPositionGlobalY","_setHue","value","minMax","_updateColorHSV","_setSat","_setVal","_setR","_updateColorRGB","_setG","_setB","input","_getValueContrained","setValue","_onInputSVChange","_onInputRGBChange","getProperty","isValidHEX","_updateColorFromHEX","_updateColorHSVFromRGB","getValue","_updateInputHue","_updateInputSat","_updateInputVal","_updateInputR","_updateInputG","_updateInputB","_updateInputHEX","_updateContrastCurrColor","_setColorRGB","r","g","b","_setColorHEX","hex","hsv","RGB2HSV","rgb","HSV2RGB","RGB2HEX","HEX2RGB","_setContrastCurrColor","_updateContrastPrevColor","setStyleProperty","node","getPositionGlobal","offsetPos","eventMouseMove","MOUSE_MOVE","eventMouseUp","MOUSE_UP","self","onDrag","_updatePosition","_updateCanvasNodePositions","onDragEnd","removeEventListener","removeChild","currPositionX","currPositionY","position","maxX","window","innerWidth","getWidth","maxY","innerHeight","getHeight","context","invWidth","invHeight","imageData","index","valueHue","i","j","data","putImageData","style","open","close","e","cancelBubble","canvasSliderPos","canvasFieldPos","element","offsetLeft","offsetTop","offsetParent","setCallbackPick","func","setColorHEX","_setColor","setColorRGB","setColorRGBfv","setColorHSV","h","s","v","getR","getG","getB","getRGB","getHue","getSat","getVal","getHSV","getHEX","getRGBfv","setup","_instance","destroy","module","exports"],"mappings":"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","sourcesContent":["var Node = require('../core/document/Node');\r\n\r\nvar CSS = require('../core/document/CSS');\r\nvar NumberInput_Internal = require('./NumberInput_Internal');\r\nvar Mouse = require('../core/document/Mouse');\r\nvar ColorUtil = require('../core/color/ColorUtil');\r\nvar DocumentEvent = require('../core/document/DocumentEvent'),\r\n    NodeEvent     = require('../core/document/NodeEvent');\r\n\r\nvar DEFAULT_VALUE_HUE = 200.0,\r\n    DEFAULT_VALUE_SAT = 50.0,\r\n    DEFAULT_VALUE_VAL = 50.0;\r\n\r\nfunction Picker(parentNode){\r\n    var root = this._node     = new Node().setStyleClass(CSS.Picker),\r\n        head = this._headNode = new Node().setStyleClass(CSS.Head),\r\n        labelWrap = new Node().setStyleClass(CSS.Wrap),\r\n        label = new Node().setStyleClass(CSS.Label),\r\n        menu = new Node().setStyleClass(CSS.Menu),\r\n        menuWrap = new Node().setStyleClass(CSS.Wrap);\r\n\r\n    var menuClose = new Node(Node.INPUT_BUTTON);\r\n        menuClose.setStyleClass(CSS.ButtonMenuClose);\r\n\r\n    var fieldWrap  = new Node().setStyleClass( CSS.PickerFieldWrap),\r\n        sliderWrap = new Node().setStyleClass(CSS.SliderWrap),\r\n        inputWrap  = new Node().setStyleClass( CSS.PickerInputWrap);\r\n\r\n    var canvasField  = this._canvasField  = document.createElement('canvas'),\r\n        canvasSlider = this._canvasSlider = document.createElement('canvas');\r\n\r\n        fieldWrap.getElement().appendChild(canvasField);\r\n        sliderWrap.getElement().appendChild(canvasSlider);\r\n\r\n        this._setSizeCanvasField(154,154);\r\n        this._setSizeCanvasSlider(14,154);\r\n\r\n    var contextCanvasField  = this._contextCanvasField  = canvasField.getContext('2d'),\r\n        contextCanvasSlider = this._contextCanvasSlider = canvasSlider.getContext('2d');\r\n\r\n    var handleField  = this._handleField  = new Node();\r\n        handleField.setStyleClass(CSS.PickerHandleField);\r\n\r\n    var handleSlider = this._handleSlider = new Node();\r\n        handleSlider.setStyleClass(CSS.PickerHandleSlider);\r\n\r\n    var step = 1.0,\r\n        dp   = 0;\r\n\r\n    var callbackHue = this._onInputHueChange.bind(this),\r\n        callbackSat = this._onInputSatChange.bind(this),\r\n        callbackVal = this._onInputValChange.bind(this),\r\n        callbackR   = this._onInputRChange.bind(this),\r\n        callbackG   = this._onInputGChange.bind(this),\r\n        callbackB   = this._onInputBChange.bind(this);\r\n\r\n\r\n    var inputHue = this._inputHue = new NumberInput_Internal(step,dp,null,callbackHue),\r\n        inputSat = this._inputSat = new NumberInput_Internal(step,dp,null,callbackSat),\r\n        inputVal = this._inputVal = new NumberInput_Internal(step,dp,null,callbackVal),\r\n        inputR   = this._inputR   = new NumberInput_Internal(step,dp,null,callbackR),\r\n        inputG   = this._inputG   = new NumberInput_Internal(step,dp,null,callbackG),\r\n        inputB   = this._inputB   = new NumberInput_Internal(step,dp,null,callbackB);\r\n\r\n    var controlsWrap = new Node().setStyleClass(CSS.PickerControlsWrap);\r\n\r\n    var buttonPick   = new Node(Node.INPUT_BUTTON).setStyleClass(CSS.Button).setProperty('value','pick'),\r\n        buttonCancel = new Node(Node.INPUT_BUTTON).setStyleClass(CSS.Button).setProperty('value','cancel');\r\n\r\n\r\n    var colorContrast = new Node().setStyleClass(CSS.PickerColorContrast);\r\n\r\n    var color0 = this._colorCurrNode = new Node(),\r\n        color1 = this._colorPrevNode = new Node();\r\n\r\n    colorContrast.addChild(color0);\r\n    colorContrast.addChild(color1);\r\n\r\n    controlsWrap.addChild(buttonCancel);\r\n    controlsWrap.addChild(buttonPick);\r\n    controlsWrap.addChild(colorContrast);\r\n\r\n    this._setContrasPrevColor(0,0,0);\r\n\r\n    var inputFieldWrapHue = new Node().setStyleClass(CSS.PickerInputField),\r\n        inputFieldWrapSat = new Node().setStyleClass(CSS.PickerInputField),\r\n        inputFieldWrapVal = new Node().setStyleClass(CSS.PickerInputField);\r\n\r\n    var inputFieldWrapHueLabel = new Node(Node.SPAN).setStyleClass(CSS.Label).setProperty('innerHTML','H'),\r\n        inputFieldWrapSatLabel = new Node(Node.SPAN).setStyleClass(CSS.Label).setProperty('innerHTML','S'),\r\n        inputFieldWrapValLabel = new Node(Node.SPAN).setStyleClass(CSS.Label).setProperty('innerHTML','V');\r\n\r\n        inputFieldWrapHue.addChildren(inputFieldWrapHueLabel,inputHue.getNode());\r\n        inputFieldWrapSat.addChildren(inputFieldWrapSatLabel,inputSat.getNode());\r\n        inputFieldWrapVal.addChildren(inputFieldWrapValLabel,inputVal.getNode());\r\n\r\n    var inputFieldWrapR = new Node().setStyleClass(CSS.PickerInputField),\r\n        inputFieldWrapG = new Node().setStyleClass(CSS.PickerInputField),\r\n        inputFieldWrapB = new Node().setStyleClass(CSS.PickerInputField);\r\n\r\n    var inputFieldWrapRLabel = new Node(Node.SPAN).setStyleClass(CSS.Label).setProperty('innerHTML','R'),\r\n        inputFieldWrapGLabel = new Node(Node.SPAN).setStyleClass(CSS.Label).setProperty('innerHTML','G'),\r\n        inputFieldWrapBLabel = new Node(Node.SPAN).setStyleClass(CSS.Label).setProperty('innerHTML','B');\r\n\r\n        inputFieldWrapR.addChildren(inputFieldWrapRLabel,inputR.getNode());\r\n        inputFieldWrapG.addChildren(inputFieldWrapGLabel,inputG.getNode());\r\n        inputFieldWrapB.addChildren(inputFieldWrapBLabel,inputB.getNode());\r\n\r\n\r\n        inputWrap.addChildren(inputFieldWrapR,inputFieldWrapHue,\r\n                              inputFieldWrapG,inputFieldWrapSat,\r\n                              inputFieldWrapB,inputFieldWrapVal,colorContrast);\r\n\r\n    var hexInputWrap = new Node();\r\n        hexInputWrap.setStyleClass(CSS.PickerInputWrap);\r\n\r\n    var inputHEX = this._inputHEX = new Node(Node.INPUT_TEXT),\r\n        inputFieldWrapHEX         = new Node().setStyleClass(CSS.PickerInputField),\r\n        inputFieldWrapHEXLabel    = new Node(Node.SPAN).setStyleClass(CSS.Label);\r\n\r\n        inputFieldWrapHEXLabel.setProperty('innerHTML','#');\r\n        inputFieldWrapHEX.addChildren(inputFieldWrapHEXLabel,inputHEX);\r\n\r\n        hexInputWrap.addChild(inputFieldWrapHEX);\r\n\r\n        inputHEX.addEventListener(NodeEvent.CHANGE,this._onInputHEXFinish.bind(this));\r\n\r\n        label.setProperty('innerHTML','Color Picker');\r\n\r\n        menu.addChild(menuClose);\r\n        head.addChild(menu);\r\n        labelWrap.addChild(label);\r\n        head.addChild(labelWrap);\r\n        root.addChild(head);\r\n        root.addChild(menuWrap);\r\n\r\n        //wrapNode.addChild(paletteWrap);\r\n\r\n        menuWrap.addChild(fieldWrap);\r\n        menuWrap.addChild(sliderWrap);\r\n        menuWrap.addChild(inputWrap);\r\n        menuWrap.addChild(hexInputWrap);\r\n        menuWrap.addChild(controlsWrap);\r\n\r\n        fieldWrap.addChild( handleField);\r\n        sliderWrap.addChild(handleSlider);\r\n\r\n    var eventMouseDown = NodeEvent.MOUSE_DOWN,\r\n        callback       = this._onCanvasFieldMouseDown.bind(this);\r\n\r\n        fieldWrap.addEventListener(  eventMouseDown, callback);\r\n        handleField.addEventListener(eventMouseDown, callback);\r\n\r\n        callback = this._onCanvasSliderMouseDown.bind(this);\r\n\r\n        sliderWrap.addEventListener(  eventMouseDown, callback);\r\n        handleSlider.addEventListener(eventMouseDown, callback);\r\n\r\n        menuClose.addEventListener(   eventMouseDown, this._onClose.bind(this));\r\n        buttonPick.addEventListener(  eventMouseDown, this._onPick.bind(this));\r\n        buttonCancel.addEventListener(eventMouseDown, this._onClose.bind(this));\r\n\r\n        head.addEventListener(NodeEvent.MOUSE_DOWN, this._onHeadDragStart.bind(this));\r\n\r\n    this._parentNode = parentNode;\r\n\r\n    this._mouseOffset = [0,0];\r\n    this._position    = [null,null];\r\n\r\n    this._canvasSliderPos = [0,0];\r\n    this._canvasFieldPos  = [0,0];\r\n    this._handleFieldSize    = 12;\r\n    this._handleSliderHeight = 7;\r\n\r\n    this._imageDataSlider = contextCanvasSlider.createImageData(canvasSlider.width,canvasSlider.height);\r\n    this._imageDataField  = contextCanvasField.createImageData( canvasField.width, canvasField.height);\r\n\r\n    this._valueHueMinMax = [0,360];\r\n    this._valueSatMinMax = this._valueValMinMax = [0,100];\r\n    this._valueRGBMinMax = [0,255];\r\n\r\n    this._valueHue = DEFAULT_VALUE_HUE;\r\n    this._valueSat = DEFAULT_VALUE_SAT;\r\n    this._valueVal = DEFAULT_VALUE_VAL;\r\n    this._valueR   = 0;\r\n    this._valueG   = 0;\r\n    this._valueB   = 0;\r\n\r\n    this._valueHEX = '#000000';\r\n    this._valueHEXValid = this._valueHEX;\r\n\r\n    this._callbackPick = function(){};\r\n\r\n    //this._canvasFieldImageDataFunc = function(i,j){return this._HSV2RGB(this._valueHue,j)}\r\n\r\n    this._drawCanvasField();\r\n    this._drawCanvasSlider();\r\n\r\n    this._setColorHSV(this._valueHue,this._valueSat,this._valueVal);\r\n\r\n    this._updateColorRGBFromHSV();\r\n    this._updateColorHEXFromRGB();\r\n\r\n    this._updateHandles();\r\n}\r\n\r\nPicker.prototype =\r\n{\r\n    _drawHandleField: function () {\r\n        var canvas = this._canvasField,\r\n            nodePos = this._canvasFieldPos,\r\n            mousePos = Mouse.get().getPosition();\r\n\r\n        var posX = Math.max(0, Math.min(mousePos[0] - nodePos[0], canvas.width)),\r\n            posY = Math.max(0, Math.min(mousePos[1] - nodePos[1], canvas.height)),\r\n            posXNorm = posX / canvas.width,\r\n            posYNorm = posY / canvas.height;\r\n\r\n        var sat = Math.round(posXNorm * this._valueSatMinMax[1]),\r\n            val = Math.round((1.0 - posYNorm) * this._valueValMinMax[1]);\r\n\r\n        this._setColorHSV(this._valueHue, sat, val);\r\n\r\n        this._updateColorRGBFromHSV();\r\n        this._updateColorHEXFromRGB();\r\n\r\n        this._updateHandleField();\r\n    },\r\n\r\n    _updateHandleField: function () {\r\n        var width = this._canvasField.width,\r\n            height = this._canvasField.height,\r\n            offsetHandle = this._handleFieldSize * 0.25;\r\n\r\n        var satNorm = this._valueSat / this._valueSatMinMax[1],\r\n            valNorm = this._valueVal / this._valueValMinMax[1];\r\n\r\n        this._handleField.setPositionGlobal(satNorm * width - offsetHandle,\r\n            (1.0 - valNorm) * height - offsetHandle);\r\n\r\n    },\r\n\r\n    _drawHandleSlider: function () {\r\n        var canvas = this._canvasSlider,\r\n            canvasPosY = this._canvasSliderPos[1],\r\n            mousePosY = Mouse.get().getY();\r\n\r\n        var posY = Math.max(0, Math.min(mousePosY - canvasPosY, canvas.height)),\r\n            posYNorm = posY / canvas.height;\r\n\r\n        var hue = Math.floor((1.0 - posYNorm) * this._valueHueMinMax[1]);\r\n\r\n        this._setColorHSV(hue, this._valueSat, this._valueVal);\r\n\r\n        this._updateColorRGBFromHSV();\r\n        this._updateColorHEXFromRGB();\r\n\r\n        this._updateHandleSlider();\r\n    },\r\n\r\n    _updateHandleSlider: function () {\r\n        var height = this._canvasSlider.height,\r\n            offsetHandle = this._handleSliderHeight * 0.25;\r\n\r\n        var hueNorm = this._valueHue / this._valueHueMinMax[1];\r\n\r\n        this._handleSlider.setPositionGlobalY((height - offsetHandle) * (1.0 - hueNorm));\r\n    },\r\n\r\n    _updateHandles: function () {\r\n        this._updateHandleField();\r\n        this._updateHandleSlider();\r\n    },\r\n\r\n    /*---------------------------------------------------------------------------------*/\r\n\r\n    _setHue: function (value) {\r\n        var minMax = this._valueHueMinMax;\r\n\r\n        this._valueHue = value == minMax[1] ? minMax[0] : value;\r\n        this._updateColorHSV();\r\n        this._drawCanvasField();\r\n    },\r\n\r\n    _setSat: function (value) {\r\n        this._valueSat = Math.round(value);\r\n        this._updateColorHSV();\r\n    },\r\n\r\n    _setVal: function (value) {\r\n        this._valueVal = Math.round(value);\r\n        this._updateColorHSV();\r\n    },\r\n\r\n    _setR: function (value) {\r\n        this._valueR = Math.round(value);\r\n        this._updateColorRGB();\r\n    },\r\n\r\n    _setG: function (value) {\r\n        this._valueG = Math.round(value);\r\n        this._updateColorRGB();\r\n    },\r\n\r\n    _setB: function (value) {\r\n        this._valueB = Math.round(value);\r\n        this._updateColorRGB();\r\n    },\r\n\r\n    /*---------------------------------------------------------------------------------*/\r\n\r\n    _onInputHueChange: function () {\r\n        var input = this._inputHue,\r\n            inputVal = this._getValueContrained(input, this._valueHueMinMax);\r\n\r\n        var minMax = this._valueHueMinMax;\r\n\r\n        if (inputVal == minMax[1]) {\r\n            inputVal = minMax[0];\r\n            input.setValue(inputVal);\r\n        }\r\n\r\n        this._setHue(inputVal);\r\n        this._updateColorRGBFromHSV();\r\n        this._updateColorHEXFromRGB();\r\n        this._updateHandleSlider();\r\n\r\n        this._drawCanvasField();\r\n    },\r\n\r\n    _onInputSatChange: function () {\r\n        this._setSat(this._getValueContrained(this._inputSat, this._valueSatMinMax));\r\n        this._onInputSVChange();\r\n    },\r\n\r\n    _onInputValChange: function () {\r\n        this._setVal(this._getValueContrained(this._inputVal, this._valueValMinMax));\r\n        this._onInputSVChange();\r\n    },\r\n\r\n    _onInputRChange: function () {\r\n        this._setR(this._getValueContrained(this._inputR, this._valueRGBMinMax));\r\n        this._onInputRGBChange();\r\n    },\r\n\r\n    _onInputGChange: function () {\r\n        this._setG(this._getValueContrained(this._inputG, this._valueRGBMinMax));\r\n        this._onInputRGBChange();\r\n    },\r\n\r\n    _onInputBChange: function () {\r\n        this._setB(this._getValueContrained(this._inputB, this._valueRGBMinMax));\r\n        this._onInputRGBChange();\r\n    },\r\n\r\n    _onInputHEXFinish: function () {\r\n        var input = this._inputHEX,\r\n            value = input.getProperty('value');\r\n\r\n        if (!ColorUtil.isValidHEX(value)) {\r\n            input.setProperty('value', this._valueHEXValid);\r\n            return;\r\n        }\r\n\r\n        this._valueHEX = this._valueHEXValid = value;\r\n        this._updateColorFromHEX();\r\n    },\r\n\r\n    _onInputSVChange: function () {\r\n        this._updateColorRGBFromHSV();\r\n        this._updateColorHEXFromRGB();\r\n        this._updateHandleField();\r\n    },\r\n\r\n    _onInputRGBChange: function () {\r\n        this._updateColorHSVFromRGB();\r\n        this._updateColorHEXFromRGB();\r\n        this._updateHandles();\r\n    },\r\n\r\n    _getValueContrained: function (input, minMax) {\r\n        var inputVal = Math.round(input.getValue()),\r\n            min = minMax[0],\r\n            max = minMax[1];\r\n\r\n        if (inputVal <= min) {\r\n            inputVal = min;\r\n            input.setValue(inputVal);\r\n        }\r\n        if (inputVal >= max) {\r\n            inputVal = max;\r\n            input.setValue(inputVal);\r\n        }\r\n\r\n        return inputVal;\r\n    },\r\n\r\n\r\n    _updateInputHue: function () {\r\n        this._inputHue.setValue(this._valueHue);\r\n    },\r\n    _updateInputSat: function () {\r\n        this._inputSat.setValue(this._valueSat);\r\n    },\r\n    _updateInputVal: function () {\r\n        this._inputVal.setValue(this._valueVal);\r\n    },\r\n    _updateInputR: function () {\r\n        this._inputR.setValue(this._valueR);\r\n    },\r\n    _updateInputG: function () {\r\n        this._inputG.setValue(this._valueG);\r\n    },\r\n    _updateInputB: function () {\r\n        this._inputB.setValue(this._valueB);\r\n    },\r\n    _updateInputHEX: function () {\r\n        this._inputHEX.setProperty('value', this._valueHEX);\r\n    },\r\n\r\n\r\n    _setColorHSV: function (hue, sat, val) {\r\n        this._valueHue = hue;\r\n        this._valueSat = sat;\r\n        this._valueVal = val;\r\n\r\n        this._updateInputHue();\r\n        this._updateInputSat();\r\n        this._updateInputVal();\r\n\r\n        this._updateContrastCurrColor();\r\n    },\r\n\r\n    _setColorRGB: function (r, g, b) {\r\n        this._valueR = r;\r\n        this._valueG = g;\r\n        this._valueB = b;\r\n\r\n        this._updateInputR();\r\n        this._updateInputG();\r\n        this._updateInputB();\r\n\r\n        this._updateContrastCurrColor();\r\n    },\r\n\r\n    _setColorHEX: function (hex) {\r\n        this._valueHEX = hex;\r\n        this._updateInputHEX();\r\n    },\r\n\r\n    _updateColorHSV: function () {\r\n        this._setColorHSV(this._valueHue, this._valueSat, this._valueVal);\r\n        this._updateContrastCurrColor();\r\n    },\r\n\r\n    _updateColorRGB: function () {\r\n        this._setColorRGB(this._valueR, this._valueG, this._valueB);\r\n        this._updateContrastCurrColor();\r\n    },\r\n\r\n    _updateColorHSVFromRGB: function () {\r\n        var hsv = ColorUtil.RGB2HSV(this._valueR, this._valueG, this._valueB);\r\n        this._setColorHSV(hsv[0], hsv[1], hsv[2]);\r\n    },\r\n\r\n    _updateColorRGBFromHSV: function () {\r\n        var rgb = ColorUtil.HSV2RGB(this._valueHue, this._valueSat, this._valueVal);\r\n        this._setColorRGB(rgb[0], rgb[1], rgb[2]);\r\n    },\r\n\r\n    _updateColorHEXFromRGB: function () {\r\n        var hex = ColorUtil.RGB2HEX(this._valueR, this._valueG, this._valueB);\r\n        this._setColorHEX(hex);\r\n    },\r\n\r\n    _updateColorFromHEX: function () {\r\n        var rgb = ColorUtil.HEX2RGB(this._valueHEX);\r\n\r\n        this._setColorRGB(rgb[0], rgb[1], rgb[2]);\r\n        this._updateColorHSVFromRGB();\r\n        this._updateHandles();\r\n    },\r\n\r\n    _updateContrastCurrColor: function () {\r\n        this._setContrastCurrColor(this._valueR, this._valueG, this._valueB);\r\n    },\r\n    _updateContrastPrevColor: function () {\r\n        this._setContrasPrevColor(this._valueR, this._valueG, this._valueB)\r\n    },\r\n\r\n    _setContrastCurrColor: function (r, g, b) {\r\n        this._colorCurrNode.setStyleProperty('background', 'rgb(' + r + ',' + g + ',' + b + ')')\r\n    },\r\n    _setContrasPrevColor: function (r, g, b) {\r\n        this._colorPrevNode.setStyleProperty('background', 'rgb(' + r + ',' + g + ',' + b + ')')\r\n    },\r\n\r\n    _onHeadDragStart: function () {\r\n        var node = this._node,\r\n            parentNode = this._parentNode;\r\n\r\n        var nodePos = node.getPositionGlobal(),\r\n            mousePos = Mouse.get().getPosition(),\r\n            offsetPos = this._mouseOffset;\r\n\r\n        offsetPos[0] = mousePos[0] - nodePos[0];\r\n        offsetPos[1] = mousePos[1] - nodePos[1];\r\n\r\n        var eventMouseMove = DocumentEvent.MOUSE_MOVE,\r\n            eventMouseUp = DocumentEvent.MOUSE_UP;\r\n\r\n        var self = this;\r\n\r\n        var onDrag = function () {\r\n                self._updatePosition();\r\n                self._updateCanvasNodePositions();\r\n            },\r\n\r\n            onDragEnd = function () {\r\n                self._updateCanvasNodePositions();\r\n                document.removeEventListener(eventMouseMove, onDrag, false);\r\n                document.removeEventListener(eventMouseUp, onDragEnd, false);\r\n            };\r\n\r\n        parentNode.removeChild(node);\r\n        parentNode.addChild(node);\r\n\r\n        document.addEventListener(eventMouseMove, onDrag, false);\r\n        document.addEventListener(eventMouseUp, onDragEnd, false);\r\n\r\n        this._updateCanvasNodePositions();\r\n    },\r\n\r\n    _updatePosition: function () {\r\n        var mousePos = Mouse.get().getPosition(),\r\n            offsetPos = this._mouseOffset;\r\n\r\n        var currPositionX = mousePos[0] - offsetPos[0],\r\n            currPositionY = mousePos[1] - offsetPos[1];\r\n\r\n        var node = this._node,\r\n            head = this._headNode,\r\n            position = this._position;\r\n\r\n        var maxX = window.innerWidth - node.getWidth(),\r\n            maxY = window.innerHeight - head.getHeight();\r\n\r\n        position[0] = Math.max(0, Math.min(currPositionX, maxX));\r\n        position[1] = Math.max(0, Math.min(currPositionY, maxY));\r\n\r\n        node.setPositionGlobal(position[0], position[1]);\r\n    },\r\n\r\n    _drawCanvasField: function () {\r\n        var canvas = this._canvasField,\r\n            context = this._contextCanvasField;\r\n\r\n        var width = canvas.width,\r\n            height = canvas.height,\r\n            invWidth = 1 / width,\r\n            invHeight = 1 / height;\r\n\r\n        var imageData = this._imageDataField,\r\n            rgb = [],\r\n            index = 0;\r\n\r\n        var valueHue = this._valueHue;\r\n\r\n        var i = -1, j;\r\n        while (++i < height) {\r\n            j = -1;\r\n\r\n            while (++j < width) {\r\n                rgb = ColorUtil.HSV2RGB(valueHue, j * invWidth * 100.0, ( 1.0 - i * invHeight ) * 100.0);\r\n                index = (i * width + j) * 4;\r\n\r\n                imageData.data[index] = rgb[0];\r\n                imageData.data[index + 1] = rgb[1];\r\n                imageData.data[index + 2] = rgb[2];\r\n                imageData.data[index + 3] = 255;\r\n            }\r\n        }\r\n\r\n        context.putImageData(imageData, 0, 0);\r\n    },\r\n\r\n    _drawCanvasSlider: function () {\r\n        var canvas = this._canvasSlider,\r\n            context = this._contextCanvasSlider;\r\n\r\n        var width = canvas.width,\r\n            height = canvas.height,\r\n            invHeight = 1 / height;\r\n\r\n        var imageData = this._imageDataSlider,\r\n            rgb = [],\r\n            index = 0;\r\n\r\n        var i = -1, j;\r\n        while (++i < height) {\r\n            j = -1;\r\n\r\n            while (++j < width) {\r\n                rgb = ColorUtil.HSV2RGB((1.0 - i * invHeight) * 360.0, 100.0, 100.0);\r\n                index = (i * width + j) * 4;\r\n\r\n                imageData.data[index] = rgb[0];\r\n                imageData.data[index + 1] = rgb[1];\r\n                imageData.data[index + 2] = rgb[2];\r\n                imageData.data[index + 3] = 255;\r\n            }\r\n        }\r\n\r\n        context.putImageData(imageData, 0, 0);\r\n\r\n    },\r\n\r\n    _onCanvasFieldMouseDown: function () {\r\n        var eventMouseMove = DocumentEvent.MOUSE_MOVE,\r\n            eventMouseUp = DocumentEvent.MOUSE_UP;\r\n\r\n        var self = this;\r\n\r\n        var onDrag = function () {\r\n                self._drawHandleField();\r\n            },\r\n            onDragEnd = function () {\r\n                document.removeEventListener(eventMouseMove, onDrag, false);\r\n                document.removeEventListener(eventMouseUp, onDragEnd, false);\r\n            };\r\n\r\n        document.addEventListener(eventMouseMove, onDrag, false);\r\n        document.addEventListener(eventMouseUp, onDragEnd, false);\r\n\r\n        self._drawHandleField();\r\n    },\r\n\r\n    _onCanvasSliderMouseDown: function () {\r\n        var eventMouseMove = DocumentEvent.MOUSE_MOVE,\r\n            eventMouseUp = DocumentEvent.MOUSE_UP;\r\n\r\n        var self = this;\r\n\r\n        var onDrag = function () {\r\n                self._drawHandleSlider();\r\n                self._drawCanvasField();\r\n            },\r\n\r\n            onDragEnd = function () {\r\n                document.removeEventListener(eventMouseMove, onDrag, false);\r\n                document.removeEventListener(eventMouseUp, onDragEnd, false);\r\n                self._drawCanvasField();\r\n            };\r\n\r\n        document.addEventListener(eventMouseMove, onDrag, false);\r\n        document.addEventListener(eventMouseUp, onDragEnd, false);\r\n\r\n        self._drawHandleSlider();\r\n        self._drawCanvasField();\r\n    },\r\n\r\n    _setSizeCanvasField: function (width, height) {\r\n        var canvas = this._canvasField;\r\n        canvas.style.width = width + 'px';\r\n        canvas.style.height = height + 'px';\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n\r\n    },\r\n\r\n    _setSizeCanvasSlider: function (width, height) {\r\n        var canvas = this._canvasSlider;\r\n        canvas.style.width = width + 'px';\r\n        canvas.style.height = height + 'px';\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n    },\r\n\r\n    open: function () {\r\n        var node = this._node;\r\n\r\n        this._parentNode.addChild(node);\r\n\r\n        var position = this._position;\r\n        if(position[0] === null || position[1] === null){\r\n            position[0] = window.innerWidth * 0.5 - node.getWidth() * 0.5;\r\n            position[1] = window.innerHeight * 0.5 - node.getHeight() * 0.5;\r\n        } else {\r\n            position[0] = Math.max(0,Math.min(position[0],window.innerWidth - node.getWidth()));\r\n            position[1] = Math.max(0,Math.min(position[1],window.innerHeight - node.getHeight()));\r\n        }\r\n\r\n        node.setPositionGlobal(position[0],position[1]);\r\n        this._updateCanvasNodePositions();\r\n    },\r\n\r\n    close: function () {\r\n        this._parentNode.removeChild(this._node);\r\n    },\r\n\r\n    _onClose: function (e) {\r\n        e.cancelBubble = true;\r\n        this.close();\r\n    },\r\n    _onPick: function () {\r\n        this._callbackPick();\r\n        this.close();\r\n    },\r\n\r\n    _updateCanvasNodePositions: function () {\r\n        var canvasSliderPos = this._canvasSliderPos,\r\n            canvasFieldPos = this._canvasFieldPos;\r\n\r\n        canvasSliderPos[0] = canvasSliderPos[1] = 0;\r\n        canvasFieldPos[0] = canvasFieldPos[1] = 0;\r\n\r\n        var element = this._canvasSlider;\r\n\r\n        while (element) {\r\n            canvasSliderPos[0] += element.offsetLeft;\r\n            canvasSliderPos[1] += element.offsetTop;\r\n            element = element.offsetParent;\r\n        }\r\n\r\n        element = this._canvasField;\r\n\r\n        while (element) {\r\n            canvasFieldPos[0] += element.offsetLeft;\r\n            canvasFieldPos[1] += element.offsetTop;\r\n            element = element.offsetParent;\r\n        }\r\n    },\r\n\r\n    setCallbackPick: function (func) {\r\n        this._callbackPick = func;\r\n    },\r\n\r\n    setColorHEX: function (hex) {\r\n        this._setColorHEX(hex);\r\n        this._updateColorFromHEX();\r\n        this._setColor();\r\n    },\r\n\r\n    setColorRGB: function (r, g, b) {\r\n        this._setColorRGB(r, g, b);\r\n        this._updateColorHEXFromRGB();\r\n        this._updateColorHSVFromRGB();\r\n        this._setColor();\r\n    },\r\n\r\n    setColorRGBfv: function (r, g, b) {\r\n        this.setColorRGB(Math.floor(r * 255.0),\r\n            Math.floor(g * 255.0),\r\n            Math.floor(b * 255.0));\r\n    },\r\n\r\n    setColorHSV: function (h, s, v) {\r\n        this._setColorHSV(h, s, v);\r\n        this._updateColorRGBFromHSV();\r\n        this._updateColorHEXFromRGB();\r\n        this._setColor();\r\n    },\r\n\r\n    _setColor: function () {\r\n        this._drawCanvasField();\r\n        this._drawCanvasSlider();\r\n        this._updateHandles();\r\n        this._setContrasPrevColor(this._valueR, this._valueG, this._valueB);\r\n    },\r\n\r\n    getR: function () {\r\n        return this._valueR;\r\n    },\r\n    getG: function () {\r\n        return this._valueG;\r\n    },\r\n    getB: function () {\r\n        return this._valueB;\r\n    },\r\n    getRGB: function () {\r\n        return [this._valueR, this._valueG, this._valueB];\r\n    },\r\n    getHue: function () {\r\n        return this._valueHue;\r\n    },\r\n    getSat: function () {\r\n        return this._valueSat;\r\n    },\r\n    getVal: function () {\r\n        return this._valueVal;\r\n    },\r\n    getHSV: function () {\r\n        return [this._valueHue, this._valueSat, this._valueVal];\r\n    },\r\n    getHEX: function () {\r\n        return this._valueHEX;\r\n    },\r\n    getRGBfv: function () {\r\n        return [this._valueR / 255.0, this._valueG / 255.0, this._valueB / 255.0];\r\n    },\r\n\r\n    getNode: function () {\r\n        return this._node;\r\n    }\r\n};\r\n\r\nPicker.setup = function (parentNode) {\r\n    return Picker._instance = new Picker(parentNode);\r\n};\r\nPicker.get = function () {\r\n    return Picker._instance;\r\n};\r\nPicker.destroy = function(){\r\n    Picker._instance = null;\r\n};\r\n\r\nmodule.exports = Picker;\r\n"]},"metadata":{},"sourceType":"script"}